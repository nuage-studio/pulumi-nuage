// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Pulumi Nuage's Bastion resource enables the creation of a bastion host through the submission of provided VPC information. The resource creates a private key, security group, and an AWS EC2 `t4g.nano` instance that can serve as the bastion host. This allows secure connectivity to sensitive resources within the VPC, while maintaining isolation from the public internet. You can leverage the outputted private key to establish a connection to the bastion host.
 *
 * ## Example Usage
 */
export class Bastion extends pulumi.ComponentResource {
    /** @internal */
    public static readonly __pulumiType = 'nuage:aws:Bastion';

    /**
     * Returns true if the given object is an instance of Bastion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Bastion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Bastion.__pulumiType;
    }

    public /*out*/ readonly private_key_pem!: pulumi.Output<string>;
    public /*out*/ readonly public_ip!: pulumi.Output<string>;

    /**
     * Create a Bastion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BastionArgs, opts?: pulumi.ComponentResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["sshPort"] = args ? args.sshPort : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["private_key_pem"] = undefined /*out*/;
            resourceInputs["public_ip"] = undefined /*out*/;
        } else {
            resourceInputs["private_key_pem"] = undefined /*out*/;
            resourceInputs["public_ip"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Bastion.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }
}

/**
 * The set of arguments for constructing a Bastion resource.
 */
export interface BastionArgs {
    /**
     * Ssh port for bastion host. Defaults to 22
     */
    sshPort?: pulumi.Input<number>;
    /**
     * Public subnet id of the Vpc.
     */
    subnetId: pulumi.Input<string>;
    /**
     * Vpc id.
     */
    vpcId: pulumi.Input<string>;
}
