import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * import * as fs from "fs";
 *
 * const test = new aws.kms.CustomKeyStore("test", {
 *     cloudHsmClusterId: _var.cloud_hsm_cluster_id,
 *     customKeyStoreName: "kms-custom-key-store-test",
 *     keyStorePassword: "noplaintextpasswords1",
 *     trustAnchorCertificate: fs.readFileSync("anchor-certificate.crt"),
 * });
 * ```
 *
 * ## Import
 *
 * KMS (Key Management) Custom Key Store can be imported using the `id`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:kms/customKeyStore:CustomKeyStore example cks-5ebd4ef395a96288e
 * ```
 */
export declare class CustomKeyStore extends pulumi.CustomResource {
    /**
     * Get an existing CustomKeyStore resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomKeyStoreState, opts?: pulumi.CustomResourceOptions): CustomKeyStore;
    /**
     * Returns true if the given object is an instance of CustomKeyStore.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CustomKeyStore;
    /**
     * Cluster ID of CloudHSM.
     */
    readonly cloudHsmClusterId: pulumi.Output<string>;
    /**
     * Unique name for Custom Key Store.
     */
    readonly customKeyStoreName: pulumi.Output<string>;
    /**
     * Password for `kmsuser` on CloudHSM.
     */
    readonly keyStorePassword: pulumi.Output<string>;
    /**
     * Customer certificate used for signing on CloudHSM.
     */
    readonly trustAnchorCertificate: pulumi.Output<string>;
    /**
     * Create a CustomKeyStore resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomKeyStoreArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering CustomKeyStore resources.
 */
export interface CustomKeyStoreState {
    /**
     * Cluster ID of CloudHSM.
     */
    cloudHsmClusterId?: pulumi.Input<string>;
    /**
     * Unique name for Custom Key Store.
     */
    customKeyStoreName?: pulumi.Input<string>;
    /**
     * Password for `kmsuser` on CloudHSM.
     */
    keyStorePassword?: pulumi.Input<string>;
    /**
     * Customer certificate used for signing on CloudHSM.
     */
    trustAnchorCertificate?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a CustomKeyStore resource.
 */
export interface CustomKeyStoreArgs {
    /**
     * Cluster ID of CloudHSM.
     */
    cloudHsmClusterId: pulumi.Input<string>;
    /**
     * Unique name for Custom Key Store.
     */
    customKeyStoreName: pulumi.Input<string>;
    /**
     * Password for `kmsuser` on CloudHSM.
     */
    keyStorePassword: pulumi.Input<string>;
    /**
     * Customer certificate used for signing on CloudHSM.
     */
    trustAnchorCertificate: pulumi.Input<string>;
}
