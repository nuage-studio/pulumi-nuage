"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPrebuiltEcrImageOutput = exports.getPrebuiltEcrImage = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Get information about prebuilt Amazon SageMaker Docker images.
 *
 * > **NOTE:** The AWS provider creates a validly constructed `registryPath` but does not verify that the `registryPath` corresponds to an existing image. For example, using a `registryPath` containing an `imageTag` that does not correspond to a Docker image in the ECR repository, will result in an error.
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = pulumi.output(aws.sagemaker.getPrebuiltEcrImage({
 *     imageTag: "2.2-1.0.11.0",
 *     repositoryName: "sagemaker-scikit-learn",
 * }));
 * ```
 */
function getPrebuiltEcrImage(args, opts) {
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:sagemaker/getPrebuiltEcrImage:getPrebuiltEcrImage", {
        "dnsSuffix": args.dnsSuffix,
        "imageTag": args.imageTag,
        "region": args.region,
        "repositoryName": args.repositoryName,
    }, opts);
}
exports.getPrebuiltEcrImage = getPrebuiltEcrImage;
function getPrebuiltEcrImageOutput(args, opts) {
    return pulumi.output(args).apply(a => getPrebuiltEcrImage(a, opts));
}
exports.getPrebuiltEcrImageOutput = getPrebuiltEcrImageOutput;
//# sourceMappingURL=getPrebuiltEcrImage.js.map