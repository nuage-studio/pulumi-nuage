import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a SageMaker Image Version resource.
 *
 * ## Example Usage
 * ### Basic usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.sagemaker.ImageVersion("test", {
 *     imageName: aws_sagemaker_image.test.id,
 *     baseImage: "012345678912.dkr.ecr.us-west-2.amazonaws.com/image:latest",
 * });
 * ```
 *
 * ## Import
 *
 * SageMaker Image Versions can be imported using the `name`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:sagemaker/imageVersion:ImageVersion test_image my-code-repo
 * ```
 */
export declare class ImageVersion extends pulumi.CustomResource {
    /**
     * Get an existing ImageVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ImageVersionState, opts?: pulumi.CustomResourceOptions): ImageVersion;
    /**
     * Returns true if the given object is an instance of ImageVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ImageVersion;
    /**
     * The Amazon Resource Name (ARN) assigned by AWS to this Image Version.
     * * `imageArn`- The Amazon Resource Name (ARN) of the image the version is based on.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The registry path of the container image on which this image version is based.
     */
    readonly baseImage: pulumi.Output<string>;
    /**
     * The registry path of the container image that contains this image version.
     */
    readonly containerImage: pulumi.Output<string>;
    readonly imageArn: pulumi.Output<string>;
    /**
     * The name of the image. Must be unique to your account.
     */
    readonly imageName: pulumi.Output<string>;
    readonly version: pulumi.Output<number>;
    /**
     * Create a ImageVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ImageVersionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ImageVersion resources.
 */
export interface ImageVersionState {
    /**
     * The Amazon Resource Name (ARN) assigned by AWS to this Image Version.
     * * `imageArn`- The Amazon Resource Name (ARN) of the image the version is based on.
     */
    arn?: pulumi.Input<string>;
    /**
     * The registry path of the container image on which this image version is based.
     */
    baseImage?: pulumi.Input<string>;
    /**
     * The registry path of the container image that contains this image version.
     */
    containerImage?: pulumi.Input<string>;
    imageArn?: pulumi.Input<string>;
    /**
     * The name of the image. Must be unique to your account.
     */
    imageName?: pulumi.Input<string>;
    version?: pulumi.Input<number>;
}
/**
 * The set of arguments for constructing a ImageVersion resource.
 */
export interface ImageVersionArgs {
    /**
     * The registry path of the container image on which this image version is based.
     */
    baseImage: pulumi.Input<string>;
    /**
     * The name of the image. Must be unique to your account.
     */
    imageName: pulumi.Input<string>;
}
