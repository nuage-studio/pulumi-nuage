import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Provides a SageMaker Domain resource.
 *
 * ## Example Usage
 * ### Basic usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleDomain = new aws.sagemaker.Domain("exampleDomain", {
 *     domainName: "example",
 *     authMode: "IAM",
 *     vpcId: aws_vpc.test.id,
 *     subnetIds: [aws_subnet.test.id],
 *     defaultUserSettings: {
 *         executionRole: aws_iam_role.test.arn,
 *     },
 * });
 * const examplePolicyDocument = aws.iam.getPolicyDocument({
 *     statements: [{
 *         actions: ["sts:AssumeRole"],
 *         principals: [{
 *             type: "Service",
 *             identifiers: ["sagemaker.amazonaws.com"],
 *         }],
 *     }],
 * });
 * const exampleRole = new aws.iam.Role("exampleRole", {
 *     path: "/",
 *     assumeRolePolicy: examplePolicyDocument.then(examplePolicyDocument => examplePolicyDocument.json),
 * });
 * ```
 * ### Using Custom Images
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const testImage = new aws.sagemaker.Image("testImage", {
 *     imageName: "example",
 *     roleArn: aws_iam_role.test.arn,
 * });
 * const testAppImageConfig = new aws.sagemaker.AppImageConfig("testAppImageConfig", {
 *     appImageConfigName: "example",
 *     kernelGatewayImageConfig: {
 *         kernelSpec: {
 *             name: "example",
 *         },
 *     },
 * });
 * const testImageVersion = new aws.sagemaker.ImageVersion("testImageVersion", {
 *     imageName: testImage.id,
 *     baseImage: "base-image",
 * });
 * const testDomain = new aws.sagemaker.Domain("testDomain", {
 *     domainName: "example",
 *     authMode: "IAM",
 *     vpcId: aws_vpc.test.id,
 *     subnetIds: [aws_subnet.test.id],
 *     defaultUserSettings: {
 *         executionRole: aws_iam_role.test.arn,
 *         kernelGatewayAppSettings: {
 *             customImages: [{
 *                 appImageConfigName: testAppImageConfig.appImageConfigName,
 *                 imageName: testImageVersion.imageName,
 *             }],
 *         },
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * SageMaker Code Domains can be imported using the `id`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:sagemaker/domain:Domain test_domain d-8jgsjtilstu8
 * ```
 */
export declare class Domain extends pulumi.CustomResource {
    /**
     * Get an existing Domain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DomainState, opts?: pulumi.CustomResourceOptions): Domain;
    /**
     * Returns true if the given object is an instance of Domain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Domain;
    /**
     * Specifies the VPC used for non-EFS traffic. The default value is `PublicInternetOnly`. Valid values are `PublicInternetOnly` and `VpcOnly`.
     */
    readonly appNetworkAccessType: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Name (ARN) assigned by AWS to this Domain.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The mode of authentication that members use to access the domain. Valid values are `IAM` and `SSO`.
     */
    readonly authMode: pulumi.Output<string>;
    /**
     * The default user settings. See Default User Settings below.
     */
    readonly defaultUserSettings: pulumi.Output<outputs.sagemaker.DomainDefaultUserSettings>;
    /**
     * The domain name.
     */
    readonly domainName: pulumi.Output<string>;
    /**
     * The ID of the Amazon Elastic File System (EFS) managed by this Domain.
     */
    readonly homeEfsFileSystemId: pulumi.Output<string>;
    /**
     * The AWS KMS customer managed CMK used to encrypt the EFS volume attached to the domain.
     */
    readonly kmsKeyId: pulumi.Output<string | undefined>;
    /**
     * The retention policy for this domain, which specifies whether resources will be retained after the Domain is deleted. By default, all resources are retained. See Retention Policy below.
     */
    readonly retentionPolicy: pulumi.Output<outputs.sagemaker.DomainRetentionPolicy | undefined>;
    /**
     * The SSO managed application instance ID.
     */
    readonly singleSignOnManagedApplicationInstanceId: pulumi.Output<string>;
    /**
     * The VPC subnets that Studio uses for communication.
     */
    readonly subnetIds: pulumi.Output<string[]>;
    /**
     * A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    readonly tagsAll: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * The domain's URL.
     */
    readonly url: pulumi.Output<string>;
    /**
     * The ID of the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
     */
    readonly vpcId: pulumi.Output<string>;
    /**
     * Create a Domain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DomainArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Domain resources.
 */
export interface DomainState {
    /**
     * Specifies the VPC used for non-EFS traffic. The default value is `PublicInternetOnly`. Valid values are `PublicInternetOnly` and `VpcOnly`.
     */
    appNetworkAccessType?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) assigned by AWS to this Domain.
     */
    arn?: pulumi.Input<string>;
    /**
     * The mode of authentication that members use to access the domain. Valid values are `IAM` and `SSO`.
     */
    authMode?: pulumi.Input<string>;
    /**
     * The default user settings. See Default User Settings below.
     */
    defaultUserSettings?: pulumi.Input<inputs.sagemaker.DomainDefaultUserSettings>;
    /**
     * The domain name.
     */
    domainName?: pulumi.Input<string>;
    /**
     * The ID of the Amazon Elastic File System (EFS) managed by this Domain.
     */
    homeEfsFileSystemId?: pulumi.Input<string>;
    /**
     * The AWS KMS customer managed CMK used to encrypt the EFS volume attached to the domain.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * The retention policy for this domain, which specifies whether resources will be retained after the Domain is deleted. By default, all resources are retained. See Retention Policy below.
     */
    retentionPolicy?: pulumi.Input<inputs.sagemaker.DomainRetentionPolicy>;
    /**
     * The SSO managed application instance ID.
     */
    singleSignOnManagedApplicationInstanceId?: pulumi.Input<string>;
    /**
     * The VPC subnets that Studio uses for communication.
     */
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The domain's URL.
     */
    url?: pulumi.Input<string>;
    /**
     * The ID of the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
     */
    vpcId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Domain resource.
 */
export interface DomainArgs {
    /**
     * Specifies the VPC used for non-EFS traffic. The default value is `PublicInternetOnly`. Valid values are `PublicInternetOnly` and `VpcOnly`.
     */
    appNetworkAccessType?: pulumi.Input<string>;
    /**
     * The mode of authentication that members use to access the domain. Valid values are `IAM` and `SSO`.
     */
    authMode: pulumi.Input<string>;
    /**
     * The default user settings. See Default User Settings below.
     */
    defaultUserSettings: pulumi.Input<inputs.sagemaker.DomainDefaultUserSettings>;
    /**
     * The domain name.
     */
    domainName: pulumi.Input<string>;
    /**
     * The AWS KMS customer managed CMK used to encrypt the EFS volume attached to the domain.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * The retention policy for this domain, which specifies whether resources will be retained after the Domain is deleted. By default, all resources are retained. See Retention Policy below.
     */
    retentionPolicy?: pulumi.Input<inputs.sagemaker.DomainRetentionPolicy>;
    /**
     * The VPC subnets that Studio uses for communication.
     */
    subnetIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The ID of the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
     */
    vpcId: pulumi.Input<string>;
}
