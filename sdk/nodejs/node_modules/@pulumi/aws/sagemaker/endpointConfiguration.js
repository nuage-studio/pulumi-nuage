"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.EndpointConfiguration = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a SageMaker endpoint configuration resource.
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const ec = new aws.sagemaker.EndpointConfiguration("ec", {
 *     productionVariants: [{
 *         variantName: "variant-1",
 *         modelName: aws_sagemaker_model.m.name,
 *         initialInstanceCount: 1,
 *         instanceType: "ml.t2.medium",
 *     }],
 *     tags: {
 *         Name: "foo",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Endpoint configurations can be imported using the `name`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:sagemaker/endpointConfiguration:EndpointConfiguration test_endpoint_config endpoint-config-foo
 * ```
 */
class EndpointConfiguration extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["asyncInferenceConfig"] = state ? state.asyncInferenceConfig : undefined;
            resourceInputs["dataCaptureConfig"] = state ? state.dataCaptureConfig : undefined;
            resourceInputs["kmsKeyArn"] = state ? state.kmsKeyArn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["productionVariants"] = state ? state.productionVariants : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.productionVariants === undefined) && !opts.urn) {
                throw new Error("Missing required property 'productionVariants'");
            }
            resourceInputs["asyncInferenceConfig"] = args ? args.asyncInferenceConfig : undefined;
            resourceInputs["dataCaptureConfig"] = args ? args.dataCaptureConfig : undefined;
            resourceInputs["kmsKeyArn"] = args ? args.kmsKeyArn : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["productionVariants"] = args ? args.productionVariants : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EndpointConfiguration.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing EndpointConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new EndpointConfiguration(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of EndpointConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EndpointConfiguration.__pulumiType;
    }
}
exports.EndpointConfiguration = EndpointConfiguration;
/** @internal */
EndpointConfiguration.__pulumiType = 'aws:sagemaker/endpointConfiguration:EndpointConfiguration';
//# sourceMappingURL=endpointConfiguration.js.map