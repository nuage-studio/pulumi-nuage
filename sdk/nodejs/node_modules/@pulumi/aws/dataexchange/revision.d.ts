import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a resource to manage AWS Data Exchange Revisions.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.dataexchange.Revision("example", {dataSetId: aws_dataexchange_data_set.example.id});
 * ```
 *
 * ## Import
 *
 * DataExchange Revisions can be imported by their `data-set-id:revision-id`
 *
 * ```sh
 *  $ pulumi import aws:dataexchange/revision:Revision example 4fa784c7-ccb4-4dbf-ba4f-02198320daa1:4fa784c7-ccb4-4dbf-ba4f-02198320daa1
 * ```
 */
export declare class Revision extends pulumi.CustomResource {
    /**
     * Get an existing Revision resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RevisionState, opts?: pulumi.CustomResourceOptions): Revision;
    /**
     * Returns true if the given object is an instance of Revision.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Revision;
    /**
     * The Amazon Resource Name of this data set.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * An optional comment about the revision.
     */
    readonly comment: pulumi.Output<string | undefined>;
    /**
     * The dataset id.
     */
    readonly dataSetId: pulumi.Output<string>;
    /**
     * The Id of the revision.
     */
    readonly revisionId: pulumi.Output<string>;
    /**
     * A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    readonly tagsAll: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * Create a Revision resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RevisionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Revision resources.
 */
export interface RevisionState {
    /**
     * The Amazon Resource Name of this data set.
     */
    arn?: pulumi.Input<string>;
    /**
     * An optional comment about the revision.
     */
    comment?: pulumi.Input<string>;
    /**
     * The dataset id.
     */
    dataSetId?: pulumi.Input<string>;
    /**
     * The Id of the revision.
     */
    revisionId?: pulumi.Input<string>;
    /**
     * A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
/**
 * The set of arguments for constructing a Revision resource.
 */
export interface RevisionArgs {
    /**
     * An optional comment about the revision.
     */
    comment?: pulumi.Input<string>;
    /**
     * The dataset id.
     */
    dataSetId: pulumi.Input<string>;
    /**
     * A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
