import * as pulumi from "@pulumi/pulumi";
/**
 * Information about single Outpost Instance Type.
 */
export declare function getOutpostInstanceType(args: GetOutpostInstanceTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetOutpostInstanceTypeResult>;
/**
 * A collection of arguments for invoking getOutpostInstanceType.
 */
export interface GetOutpostInstanceTypeArgs {
    /**
     * Outpost ARN.
     */
    arn: string;
    /**
     * Desired instance type. Conflicts with `preferredInstanceTypes`.
     */
    instanceType?: string;
    /**
     * Ordered list of preferred instance types. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned. Conflicts with `instanceType`.
     */
    preferredInstanceTypes?: string[];
}
/**
 * A collection of values returned by getOutpostInstanceType.
 */
export interface GetOutpostInstanceTypeResult {
    readonly arn: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceType: string;
    readonly preferredInstanceTypes?: string[];
}
export declare function getOutpostInstanceTypeOutput(args: GetOutpostInstanceTypeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOutpostInstanceTypeResult>;
/**
 * A collection of arguments for invoking getOutpostInstanceType.
 */
export interface GetOutpostInstanceTypeOutputArgs {
    /**
     * Outpost ARN.
     */
    arn: pulumi.Input<string>;
    /**
     * Desired instance type. Conflicts with `preferredInstanceTypes`.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * Ordered list of preferred instance types. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned. Conflicts with `instanceType`.
     */
    preferredInstanceTypes?: pulumi.Input<pulumi.Input<string>[]>;
}
