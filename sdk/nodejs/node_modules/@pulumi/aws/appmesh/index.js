"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VirtualService = exports.VirtualRouter = exports.VirtualNode = exports.VirtualGateway = exports.Route = exports.Mesh = exports.getVirtualServiceOutput = exports.getVirtualService = exports.getMeshOutput = exports.getMesh = exports.GatewayRoute = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.GatewayRoute = null;
exports.getMesh = null;
exports.getMeshOutput = null;
exports.getVirtualService = null;
exports.getVirtualServiceOutput = null;
exports.Mesh = null;
exports.Route = null;
exports.VirtualGateway = null;
exports.VirtualNode = null;
exports.VirtualRouter = null;
exports.VirtualService = null;
utilities.lazyLoad(exports, ["GatewayRoute"], () => require("./gatewayRoute"));
utilities.lazyLoad(exports, ["getMesh", "getMeshOutput"], () => require("./getMesh"));
utilities.lazyLoad(exports, ["getVirtualService", "getVirtualServiceOutput"], () => require("./getVirtualService"));
utilities.lazyLoad(exports, ["Mesh"], () => require("./mesh"));
utilities.lazyLoad(exports, ["Route"], () => require("./route"));
utilities.lazyLoad(exports, ["VirtualGateway"], () => require("./virtualGateway"));
utilities.lazyLoad(exports, ["VirtualNode"], () => require("./virtualNode"));
utilities.lazyLoad(exports, ["VirtualRouter"], () => require("./virtualRouter"));
utilities.lazyLoad(exports, ["VirtualService"], () => require("./virtualService"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:appmesh/gatewayRoute:GatewayRoute":
                return new exports.GatewayRoute(name, undefined, { urn });
            case "aws:appmesh/mesh:Mesh":
                return new exports.Mesh(name, undefined, { urn });
            case "aws:appmesh/route:Route":
                return new exports.Route(name, undefined, { urn });
            case "aws:appmesh/virtualGateway:VirtualGateway":
                return new exports.VirtualGateway(name, undefined, { urn });
            case "aws:appmesh/virtualNode:VirtualNode":
                return new exports.VirtualNode(name, undefined, { urn });
            case "aws:appmesh/virtualRouter:VirtualRouter":
                return new exports.VirtualRouter(name, undefined, { urn });
            case "aws:appmesh/virtualService:VirtualService":
                return new exports.VirtualService(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "appmesh/gatewayRoute", _module);
pulumi.runtime.registerResourceModule("aws", "appmesh/mesh", _module);
pulumi.runtime.registerResourceModule("aws", "appmesh/route", _module);
pulumi.runtime.registerResourceModule("aws", "appmesh/virtualGateway", _module);
pulumi.runtime.registerResourceModule("aws", "appmesh/virtualNode", _module);
pulumi.runtime.registerResourceModule("aws", "appmesh/virtualRouter", _module);
pulumi.runtime.registerResourceModule("aws", "appmesh/virtualService", _module);
//# sourceMappingURL=index.js.map