export { GatewayRouteArgs, GatewayRouteState } from "./gatewayRoute";
export declare type GatewayRoute = import("./gatewayRoute").GatewayRoute;
export declare const GatewayRoute: typeof import("./gatewayRoute").GatewayRoute;
export { GetMeshArgs, GetMeshResult, GetMeshOutputArgs } from "./getMesh";
export declare const getMesh: typeof import("./getMesh").getMesh;
export declare const getMeshOutput: typeof import("./getMesh").getMeshOutput;
export { GetVirtualServiceArgs, GetVirtualServiceResult, GetVirtualServiceOutputArgs } from "./getVirtualService";
export declare const getVirtualService: typeof import("./getVirtualService").getVirtualService;
export declare const getVirtualServiceOutput: typeof import("./getVirtualService").getVirtualServiceOutput;
export { MeshArgs, MeshState } from "./mesh";
export declare type Mesh = import("./mesh").Mesh;
export declare const Mesh: typeof import("./mesh").Mesh;
export { RouteArgs, RouteState } from "./route";
export declare type Route = import("./route").Route;
export declare const Route: typeof import("./route").Route;
export { VirtualGatewayArgs, VirtualGatewayState } from "./virtualGateway";
export declare type VirtualGateway = import("./virtualGateway").VirtualGateway;
export declare const VirtualGateway: typeof import("./virtualGateway").VirtualGateway;
export { VirtualNodeArgs, VirtualNodeState } from "./virtualNode";
export declare type VirtualNode = import("./virtualNode").VirtualNode;
export declare const VirtualNode: typeof import("./virtualNode").VirtualNode;
export { VirtualRouterArgs, VirtualRouterState } from "./virtualRouter";
export declare type VirtualRouter = import("./virtualRouter").VirtualRouter;
export declare const VirtualRouter: typeof import("./virtualRouter").VirtualRouter;
export { VirtualServiceArgs, VirtualServiceState } from "./virtualService";
export declare type VirtualService = import("./virtualService").VirtualService;
export declare const VirtualService: typeof import("./virtualService").VirtualService;
