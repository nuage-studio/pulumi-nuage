"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServiceQuota = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages an individual Service Quota.
 *
 * > **NOTE:** Global quotas apply to all AWS regions, but can only be accessed in `us-east-1` in the Commercial partition or `us-gov-west-1` in the GovCloud partition. In other regions, the AWS API will return the error `The request failed because the specified service does not exist.`
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.servicequotas.ServiceQuota("example", {
 *     quotaCode: "L-F678F1CE",
 *     serviceCode: "vpc",
 *     value: 75,
 * });
 * ```
 *
 * ## Import
 *
 * ~> *NOTE* This resource does not require explicit import and will assume management of an existing service quota on resource creation. `aws_servicequotas_service_quota` can be imported by using the service code and quota code, separated by a front slash (`/`), e.g.,
 *
 * ```sh
 *  $ pulumi import aws:servicequotas/serviceQuota:ServiceQuota example vpc/L-F678F1CE
 * ```
 */
class ServiceQuota extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["adjustable"] = state ? state.adjustable : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["defaultValue"] = state ? state.defaultValue : undefined;
            resourceInputs["quotaCode"] = state ? state.quotaCode : undefined;
            resourceInputs["quotaName"] = state ? state.quotaName : undefined;
            resourceInputs["requestId"] = state ? state.requestId : undefined;
            resourceInputs["requestStatus"] = state ? state.requestStatus : undefined;
            resourceInputs["serviceCode"] = state ? state.serviceCode : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
            resourceInputs["value"] = state ? state.value : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.quotaCode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'quotaCode'");
            }
            if ((!args || args.serviceCode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceCode'");
            }
            if ((!args || args.value === undefined) && !opts.urn) {
                throw new Error("Missing required property 'value'");
            }
            resourceInputs["quotaCode"] = args ? args.quotaCode : undefined;
            resourceInputs["serviceCode"] = args ? args.serviceCode : undefined;
            resourceInputs["value"] = args ? args.value : undefined;
            resourceInputs["adjustable"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["defaultValue"] = undefined /*out*/;
            resourceInputs["quotaName"] = undefined /*out*/;
            resourceInputs["requestId"] = undefined /*out*/;
            resourceInputs["requestStatus"] = undefined /*out*/;
            resourceInputs["serviceName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServiceQuota.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing ServiceQuota resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ServiceQuota(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ServiceQuota.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceQuota.__pulumiType;
    }
}
exports.ServiceQuota = ServiceQuota;
/** @internal */
ServiceQuota.__pulumiType = 'aws:servicequotas/serviceQuota:ServiceQuota';
//# sourceMappingURL=serviceQuota.js.map