export { AccountArgs, AccountState } from "./account";
export declare type Account = import("./account").Account;
export declare const Account: typeof import("./account").Account;
export { ApiKeyArgs, ApiKeyState } from "./apiKey";
export declare type ApiKey = import("./apiKey").ApiKey;
export declare const ApiKey: typeof import("./apiKey").ApiKey;
export { AuthorizerArgs, AuthorizerState } from "./authorizer";
export declare type Authorizer = import("./authorizer").Authorizer;
export declare const Authorizer: typeof import("./authorizer").Authorizer;
export { BasePathMappingArgs, BasePathMappingState } from "./basePathMapping";
export declare type BasePathMapping = import("./basePathMapping").BasePathMapping;
export declare const BasePathMapping: typeof import("./basePathMapping").BasePathMapping;
export { ClientCertificateArgs, ClientCertificateState } from "./clientCertificate";
export declare type ClientCertificate = import("./clientCertificate").ClientCertificate;
export declare const ClientCertificate: typeof import("./clientCertificate").ClientCertificate;
export { DeploymentArgs, DeploymentState } from "./deployment";
export declare type Deployment = import("./deployment").Deployment;
export declare const Deployment: typeof import("./deployment").Deployment;
export { DocumentationPartArgs, DocumentationPartState } from "./documentationPart";
export declare type DocumentationPart = import("./documentationPart").DocumentationPart;
export declare const DocumentationPart: typeof import("./documentationPart").DocumentationPart;
export { DocumentationVersionArgs, DocumentationVersionState } from "./documentationVersion";
export declare type DocumentationVersion = import("./documentationVersion").DocumentationVersion;
export declare const DocumentationVersion: typeof import("./documentationVersion").DocumentationVersion;
export { DomainNameArgs, DomainNameState } from "./domainName";
export declare type DomainName = import("./domainName").DomainName;
export declare const DomainName: typeof import("./domainName").DomainName;
export { GetDomainNameArgs, GetDomainNameResult, GetDomainNameOutputArgs } from "./getDomainName";
export declare const getDomainName: typeof import("./getDomainName").getDomainName;
export declare const getDomainNameOutput: typeof import("./getDomainName").getDomainNameOutput;
export { GetExportArgs, GetExportResult, GetExportOutputArgs } from "./getExport";
export declare const getExport: typeof import("./getExport").getExport;
export declare const getExportOutput: typeof import("./getExport").getExportOutput;
export { GetKeyArgs, GetKeyResult, GetKeyOutputArgs } from "./getKey";
export declare const getKey: typeof import("./getKey").getKey;
export declare const getKeyOutput: typeof import("./getKey").getKeyOutput;
export { GetResourceArgs, GetResourceResult, GetResourceOutputArgs } from "./getResource";
export declare const getResource: typeof import("./getResource").getResource;
export declare const getResourceOutput: typeof import("./getResource").getResourceOutput;
export { GetRestApiArgs, GetRestApiResult, GetRestApiOutputArgs } from "./getRestApi";
export declare const getRestApi: typeof import("./getRestApi").getRestApi;
export declare const getRestApiOutput: typeof import("./getRestApi").getRestApiOutput;
export { GetSdkArgs, GetSdkResult, GetSdkOutputArgs } from "./getSdk";
export declare const getSdk: typeof import("./getSdk").getSdk;
export declare const getSdkOutput: typeof import("./getSdk").getSdkOutput;
export { GetVpcLinkArgs, GetVpcLinkResult, GetVpcLinkOutputArgs } from "./getVpcLink";
export declare const getVpcLink: typeof import("./getVpcLink").getVpcLink;
export declare const getVpcLinkOutput: typeof import("./getVpcLink").getVpcLinkOutput;
export { IntegrationArgs, IntegrationState } from "./integration";
export declare type Integration = import("./integration").Integration;
export declare const Integration: typeof import("./integration").Integration;
export { IntegrationResponseArgs, IntegrationResponseState } from "./integrationResponse";
export declare type IntegrationResponse = import("./integrationResponse").IntegrationResponse;
export declare const IntegrationResponse: typeof import("./integrationResponse").IntegrationResponse;
export { MethodArgs, MethodState } from "./method";
export declare type Method = import("./method").Method;
export declare const Method: typeof import("./method").Method;
export { MethodResponseArgs, MethodResponseState } from "./methodResponse";
export declare type MethodResponse = import("./methodResponse").MethodResponse;
export declare const MethodResponse: typeof import("./methodResponse").MethodResponse;
export { MethodSettingsArgs, MethodSettingsState } from "./methodSettings";
export declare type MethodSettings = import("./methodSettings").MethodSettings;
export declare const MethodSettings: typeof import("./methodSettings").MethodSettings;
export { ModelArgs, ModelState } from "./model";
export declare type Model = import("./model").Model;
export declare const Model: typeof import("./model").Model;
export { RequestValidatorArgs, RequestValidatorState } from "./requestValidator";
export declare type RequestValidator = import("./requestValidator").RequestValidator;
export declare const RequestValidator: typeof import("./requestValidator").RequestValidator;
export { ResourceArgs, ResourceState } from "./resource";
export declare type Resource = import("./resource").Resource;
export declare const Resource: typeof import("./resource").Resource;
export { ResponseArgs, ResponseState } from "./response";
export declare type Response = import("./response").Response;
export declare const Response: typeof import("./response").Response;
export { RestApiArgs, RestApiState } from "./restApi";
export declare type RestApi = import("./restApi").RestApi;
export declare const RestApi: typeof import("./restApi").RestApi;
export { RestApiPolicyArgs, RestApiPolicyState } from "./restApiPolicy";
export declare type RestApiPolicy = import("./restApiPolicy").RestApiPolicy;
export declare const RestApiPolicy: typeof import("./restApiPolicy").RestApiPolicy;
export { StageArgs, StageState } from "./stage";
export declare type Stage = import("./stage").Stage;
export declare const Stage: typeof import("./stage").Stage;
export { UsagePlanArgs, UsagePlanState } from "./usagePlan";
export declare type UsagePlan = import("./usagePlan").UsagePlan;
export declare const UsagePlan: typeof import("./usagePlan").UsagePlan;
export { UsagePlanKeyArgs, UsagePlanKeyState } from "./usagePlanKey";
export declare type UsagePlanKey = import("./usagePlanKey").UsagePlanKey;
export declare const UsagePlanKey: typeof import("./usagePlanKey").UsagePlanKey;
export { VpcLinkArgs, VpcLinkState } from "./vpcLink";
export declare type VpcLink = import("./vpcLink").VpcLink;
export declare const VpcLink: typeof import("./vpcLink").VpcLink;
