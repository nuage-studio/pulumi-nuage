import * as pulumi from "@pulumi/pulumi";
/**
 * Use this data source to get the name and value of a pre-existing API Key, for
 * example to supply credentials for a dependency microservice.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const myApiKey = pulumi.output(aws.apigateway.getKey({
 *     id: "ru3mpjgse6",
 * }));
 * ```
 */
export declare function getKey(args: GetKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetKeyResult>;
/**
 * A collection of arguments for invoking getKey.
 */
export interface GetKeyArgs {
    /**
     * ID of the API Key to look up.
     */
    id: string;
    /**
     * Map of tags for the resource.
     */
    tags?: {
        [key: string]: string;
    };
}
/**
 * A collection of values returned by getKey.
 */
export interface GetKeyResult {
    /**
     * Date and time when the API Key was created.
     */
    readonly createdDate: string;
    /**
     * Description of the API Key.
     */
    readonly description: string;
    /**
     * Whether the API Key is enabled.
     */
    readonly enabled: boolean;
    /**
     * Set to the ID of the API Key.
     */
    readonly id: string;
    /**
     * Date and time when the API Key was last updated.
     */
    readonly lastUpdatedDate: string;
    /**
     * Set to the name of the API Key.
     */
    readonly name: string;
    /**
     * Map of tags for the resource.
     */
    readonly tags: {
        [key: string]: string;
    };
    /**
     * Set to the value of the API Key.
     */
    readonly value: string;
}
export declare function getKeyOutput(args: GetKeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKeyResult>;
/**
 * A collection of arguments for invoking getKey.
 */
export interface GetKeyOutputArgs {
    /**
     * ID of the API Key to look up.
     */
    id: pulumi.Input<string>;
    /**
     * Map of tags for the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
