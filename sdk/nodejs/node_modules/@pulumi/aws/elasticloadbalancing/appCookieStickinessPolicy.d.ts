import * as pulumi from "@pulumi/pulumi";
/**
 * Provides an application cookie stickiness policy, which allows an ELB to wed its sticky cookie's expiration to a cookie generated by your application.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const lb = new aws.elb.LoadBalancer("lb", {
 *     availabilityZones: ["us-east-1a"],
 *     listeners: [{
 *         instancePort: 8000,
 *         instanceProtocol: "http",
 *         lbPort: 80,
 *         lbProtocol: "http",
 *     }],
 * });
 * const foo = new aws.elb.AppCookieStickinessPolicy("foo", {
 *     loadBalancer: lb.name,
 *     lbPort: 80,
 *     cookieName: "MyAppCookie",
 * });
 * ```
 *
 * ## Import
 *
 * Application cookie stickiness policies can be imported using the ELB name, port, and policy name separated by colons (`:`), e.g.,
 *
 * ```sh
 *  $ pulumi import aws:elasticloadbalancing/appCookieStickinessPolicy:AppCookieStickinessPolicy example my-elb:80:my-policy
 * ```
 *
 * @deprecated aws.elasticloadbalancing.AppCookieStickinessPolicy has been deprecated in favor of aws.elb.AppCookieStickinessPolicy
 */
export declare class AppCookieStickinessPolicy extends pulumi.CustomResource {
    /**
     * Get an existing AppCookieStickinessPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppCookieStickinessPolicyState, opts?: pulumi.CustomResourceOptions): AppCookieStickinessPolicy;
    /**
     * Returns true if the given object is an instance of AppCookieStickinessPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AppCookieStickinessPolicy;
    /**
     * Application cookie whose lifetime the ELB's cookie should follow.
     */
    readonly cookieName: pulumi.Output<string>;
    /**
     * Load balancer port to which the policy
     * should be applied. This must be an active listener on the load
     * balancer.
     */
    readonly lbPort: pulumi.Output<number>;
    /**
     * Name of load balancer to which the policy
     * should be attached.
     */
    readonly loadBalancer: pulumi.Output<string>;
    /**
     * Name of the stickiness policy.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Create a AppCookieStickinessPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated aws.elasticloadbalancing.AppCookieStickinessPolicy has been deprecated in favor of aws.elb.AppCookieStickinessPolicy */
    constructor(name: string, args: AppCookieStickinessPolicyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering AppCookieStickinessPolicy resources.
 */
export interface AppCookieStickinessPolicyState {
    /**
     * Application cookie whose lifetime the ELB's cookie should follow.
     */
    cookieName?: pulumi.Input<string>;
    /**
     * Load balancer port to which the policy
     * should be applied. This must be an active listener on the load
     * balancer.
     */
    lbPort?: pulumi.Input<number>;
    /**
     * Name of load balancer to which the policy
     * should be attached.
     */
    loadBalancer?: pulumi.Input<string>;
    /**
     * Name of the stickiness policy.
     */
    name?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a AppCookieStickinessPolicy resource.
 */
export interface AppCookieStickinessPolicyArgs {
    /**
     * Application cookie whose lifetime the ELB's cookie should follow.
     */
    cookieName: pulumi.Input<string>;
    /**
     * Load balancer port to which the policy
     * should be applied. This must be an active listener on the load
     * balancer.
     */
    lbPort: pulumi.Input<number>;
    /**
     * Name of load balancer to which the policy
     * should be attached.
     */
    loadBalancer: pulumi.Input<string>;
    /**
     * Name of the stickiness policy.
     */
    name?: pulumi.Input<string>;
}
