"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRegionOutput = exports.getRegion = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * `aws.getRegion` provides details about a specific AWS region.
 *
 * As well as validating a given region name this resource can be used to
 * discover the name of the region configured within the provider. The latter
 * can be useful in a child module which is inheriting an AWS provider
 * configuration from its parent module.
 *
 * ## Example Usage
 *
 * The following example shows how the resource might be used to obtain
 * the name of the AWS region configured on the provider.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const current = pulumi.output(aws.getRegion());
 * ```
 */
function getRegion(args, opts) {
    args = args || {};
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:index/getRegion:getRegion", {
        "endpoint": args.endpoint,
        "name": args.name,
    }, opts);
}
exports.getRegion = getRegion;
function getRegionOutput(args, opts) {
    return pulumi.output(args).apply(a => getRegion(a, opts));
}
exports.getRegionOutput = getRegionOutput;
//# sourceMappingURL=getRegion.js.map