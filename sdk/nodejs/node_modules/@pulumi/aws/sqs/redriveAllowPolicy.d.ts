import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a SQS Queue Redrive Allow Policy resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleQueue = new aws.sqs.Queue("exampleQueue", {});
 * const src = new aws.sqs.Queue("src", {redrivePolicy: exampleQueue.arn.apply(arn => JSON.stringify({
 *     deadLetterTargetArn: arn,
 *     maxReceiveCount: 4,
 * }))});
 * const exampleRedriveAllowPolicy = new aws.sqs.RedriveAllowPolicy("exampleRedriveAllowPolicy", {
 *     queueUrl: exampleQueue.id,
 *     redriveAllowPolicy: src.arn.apply(arn => JSON.stringify({
 *         redrivePermission: "byQueue",
 *         sourceQueueArns: [arn],
 *     })),
 * });
 * ```
 *
 * ## Import
 *
 * SQS Queue Redrive Allow Policies can be imported using the queue URL, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:sqs/redriveAllowPolicy:RedriveAllowPolicy test https://queue.amazonaws.com/0123456789012/myqueue
 * ```
 */
export declare class RedriveAllowPolicy extends pulumi.CustomResource {
    /**
     * Get an existing RedriveAllowPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RedriveAllowPolicyState, opts?: pulumi.CustomResourceOptions): RedriveAllowPolicy;
    /**
     * Returns true if the given object is an instance of RedriveAllowPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is RedriveAllowPolicy;
    /**
     * The URL of the SQS Queue to which to attach the policy
     */
    readonly queueUrl: pulumi.Output<string>;
    /**
     * The JSON redrive allow policy for the SQS queue. Learn more in the [Amazon SQS dead-letter queues documentation](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html).
     */
    readonly redriveAllowPolicy: pulumi.Output<string>;
    /**
     * Create a RedriveAllowPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RedriveAllowPolicyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering RedriveAllowPolicy resources.
 */
export interface RedriveAllowPolicyState {
    /**
     * The URL of the SQS Queue to which to attach the policy
     */
    queueUrl?: pulumi.Input<string>;
    /**
     * The JSON redrive allow policy for the SQS queue. Learn more in the [Amazon SQS dead-letter queues documentation](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html).
     */
    redriveAllowPolicy?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a RedriveAllowPolicy resource.
 */
export interface RedriveAllowPolicyArgs {
    /**
     * The URL of the SQS Queue to which to attach the policy
     */
    queueUrl: pulumi.Input<string>;
    /**
     * The JSON redrive allow policy for the SQS queue. Learn more in the [Amazon SQS dead-letter queues documentation](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html).
     */
    redriveAllowPolicy: pulumi.Input<string>;
}
