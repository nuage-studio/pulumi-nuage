"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RedrivePolicy = exports.RedriveAllowPolicy = exports.QueuePolicy = exports.Queue = exports.getQueueOutput = exports.getQueue = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.getQueue = null;
exports.getQueueOutput = null;
exports.Queue = null;
exports.QueuePolicy = null;
__exportStar(require("./redrive"), exports);
exports.RedriveAllowPolicy = null;
exports.RedrivePolicy = null;
__exportStar(require("./sqsMixins"), exports);
utilities.lazyLoad(exports, ["getQueue", "getQueueOutput"], () => require("./getQueue"));
utilities.lazyLoad(exports, ["Queue"], () => require("./queue"));
utilities.lazyLoad(exports, ["QueuePolicy"], () => require("./queuePolicy"));
utilities.lazyLoad(exports, ["RedriveAllowPolicy"], () => require("./redriveAllowPolicy"));
utilities.lazyLoad(exports, ["RedrivePolicy"], () => require("./redrivePolicy"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:sqs/queue:Queue":
                return new exports.Queue(name, undefined, { urn });
            case "aws:sqs/queuePolicy:QueuePolicy":
                return new exports.QueuePolicy(name, undefined, { urn });
            case "aws:sqs/redriveAllowPolicy:RedriveAllowPolicy":
                return new exports.RedriveAllowPolicy(name, undefined, { urn });
            case "aws:sqs/redrivePolicy:RedrivePolicy":
                return new exports.RedrivePolicy(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "sqs/queue", _module);
pulumi.runtime.registerResourceModule("aws", "sqs/queuePolicy", _module);
pulumi.runtime.registerResourceModule("aws", "sqs/redriveAllowPolicy", _module);
pulumi.runtime.registerResourceModule("aws", "sqs/redrivePolicy", _module);
//# sourceMappingURL=index.js.map