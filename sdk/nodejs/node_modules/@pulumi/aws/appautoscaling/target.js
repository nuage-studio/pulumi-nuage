"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Target = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides an Application AutoScaling ScalableTarget resource. To manage policies which get attached to the target, see the `aws.appautoscaling.Policy` resource.
 *
 * > **NOTE:** The [Application Auto Scaling service automatically attempts to manage IAM Service-Linked Roles](https://docs.aws.amazon.com/autoscaling/application/userguide/security_iam_service-with-iam.html#security_iam_service-with-iam-roles) when registering certain service namespaces for the first time. To manually manage this role, see the `aws.iam.ServiceLinkedRole` resource.
 *
 * ## Example Usage
 * ### DynamoDB Table Autoscaling
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const dynamodbTableReadTarget = new aws.appautoscaling.Target("dynamodb_table_read_target", {
 *     maxCapacity: 100,
 *     minCapacity: 5,
 *     resourceId: pulumi.interpolate`table/${aws_dynamodb_table_example.name}`,
 *     scalableDimension: "dynamodb:table:ReadCapacityUnits",
 *     serviceNamespace: "dynamodb",
 * });
 * ```
 * ### DynamoDB Index Autoscaling
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const dynamodbIndexReadTarget = new aws.appautoscaling.Target("dynamodb_index_read_target", {
 *     maxCapacity: 100,
 *     minCapacity: 5,
 *     resourceId: pulumi.interpolate`table/${aws_dynamodb_table_example.name}/index/${var_index_name}`,
 *     scalableDimension: "dynamodb:index:ReadCapacityUnits",
 *     serviceNamespace: "dynamodb",
 * });
 * ```
 * ### ECS Service Autoscaling
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const ecsTarget = new aws.appautoscaling.Target("ecs_target", {
 *     maxCapacity: 4,
 *     minCapacity: 1,
 *     resourceId: pulumi.interpolate`service/${aws_ecs_cluster_example.name}/${aws_ecs_service_example.name}`,
 *     scalableDimension: "ecs:service:DesiredCount",
 *     serviceNamespace: "ecs",
 * });
 * ```
 * ### Aurora Read Replica Autoscaling
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const replicas = new aws.appautoscaling.Target("replicas", {
 *     maxCapacity: 15,
 *     minCapacity: 1,
 *     resourceId: pulumi.interpolate`cluster:${aws_rds_cluster_example.id}`,
 *     scalableDimension: "rds:cluster:ReadReplicaCount",
 *     serviceNamespace: "rds",
 * });
 * ```
 * ### MSK / Kafka Autoscaling
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const mskTarget = new aws.appautoscaling.Target("msk_target", {
 *     maxCapacity: 8,
 *     minCapacity: 1,
 *     resourceId: aws_msk_cluster_example.arn,
 *     scalableDimension: "kafka:broker-storage:VolumeSize",
 *     serviceNamespace: "kafka",
 * });
 * ```
 *
 * ## Import
 *
 * Application AutoScaling Target can be imported using the `service-namespace` , `resource-id` and `scalable-dimension` separated by `/`.
 *
 * ```sh
 *  $ pulumi import aws:appautoscaling/target:Target test-target service-namespace/resource-id/scalable-dimension
 * ```
 */
class Target extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["maxCapacity"] = state ? state.maxCapacity : undefined;
            resourceInputs["minCapacity"] = state ? state.minCapacity : undefined;
            resourceInputs["resourceId"] = state ? state.resourceId : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
            resourceInputs["scalableDimension"] = state ? state.scalableDimension : undefined;
            resourceInputs["serviceNamespace"] = state ? state.serviceNamespace : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.maxCapacity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'maxCapacity'");
            }
            if ((!args || args.minCapacity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'minCapacity'");
            }
            if ((!args || args.resourceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceId'");
            }
            if ((!args || args.scalableDimension === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scalableDimension'");
            }
            if ((!args || args.serviceNamespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceNamespace'");
            }
            resourceInputs["maxCapacity"] = args ? args.maxCapacity : undefined;
            resourceInputs["minCapacity"] = args ? args.minCapacity : undefined;
            resourceInputs["resourceId"] = args ? args.resourceId : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["scalableDimension"] = args ? args.scalableDimension : undefined;
            resourceInputs["serviceNamespace"] = args ? args.serviceNamespace : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Target.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing Target resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Target(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Target.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Target.__pulumiType;
    }
}
exports.Target = Target;
/** @internal */
Target.__pulumiType = 'aws:appautoscaling/target:Target';
//# sourceMappingURL=target.js.map