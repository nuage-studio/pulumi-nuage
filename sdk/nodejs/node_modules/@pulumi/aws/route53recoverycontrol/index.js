"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SafetyRule = exports.RoutingControl = exports.ControlPanel = exports.Cluster = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Cluster = null;
exports.ControlPanel = null;
exports.RoutingControl = null;
exports.SafetyRule = null;
utilities.lazyLoad(exports, ["Cluster"], () => require("./cluster"));
utilities.lazyLoad(exports, ["ControlPanel"], () => require("./controlPanel"));
utilities.lazyLoad(exports, ["RoutingControl"], () => require("./routingControl"));
utilities.lazyLoad(exports, ["SafetyRule"], () => require("./safetyRule"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:route53recoverycontrol/cluster:Cluster":
                return new exports.Cluster(name, undefined, { urn });
            case "aws:route53recoverycontrol/controlPanel:ControlPanel":
                return new exports.ControlPanel(name, undefined, { urn });
            case "aws:route53recoverycontrol/routingControl:RoutingControl":
                return new exports.RoutingControl(name, undefined, { urn });
            case "aws:route53recoverycontrol/safetyRule:SafetyRule":
                return new exports.SafetyRule(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "route53recoverycontrol/cluster", _module);
pulumi.runtime.registerResourceModule("aws", "route53recoverycontrol/controlPanel", _module);
pulumi.runtime.registerResourceModule("aws", "route53recoverycontrol/routingControl", _module);
pulumi.runtime.registerResourceModule("aws", "route53recoverycontrol/safetyRule", _module);
//# sourceMappingURL=index.js.map