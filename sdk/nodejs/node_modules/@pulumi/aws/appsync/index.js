"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Resolver = exports.GraphQLApi = exports.Function = exports.DomainNameApiAssociation = exports.DomainName = exports.DataSource = exports.ApiKey = exports.ApiCache = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.ApiCache = null;
exports.ApiKey = null;
exports.DataSource = null;
exports.DomainName = null;
exports.DomainNameApiAssociation = null;
exports.Function = null;
exports.GraphQLApi = null;
exports.Resolver = null;
utilities.lazyLoad(exports, ["ApiCache"], () => require("./apiCache"));
utilities.lazyLoad(exports, ["ApiKey"], () => require("./apiKey"));
utilities.lazyLoad(exports, ["DataSource"], () => require("./dataSource"));
utilities.lazyLoad(exports, ["DomainName"], () => require("./domainName"));
utilities.lazyLoad(exports, ["DomainNameApiAssociation"], () => require("./domainNameApiAssociation"));
utilities.lazyLoad(exports, ["Function"], () => require("./function"));
utilities.lazyLoad(exports, ["GraphQLApi"], () => require("./graphQLApi"));
utilities.lazyLoad(exports, ["Resolver"], () => require("./resolver"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:appsync/apiCache:ApiCache":
                return new exports.ApiCache(name, undefined, { urn });
            case "aws:appsync/apiKey:ApiKey":
                return new exports.ApiKey(name, undefined, { urn });
            case "aws:appsync/dataSource:DataSource":
                return new exports.DataSource(name, undefined, { urn });
            case "aws:appsync/domainName:DomainName":
                return new exports.DomainName(name, undefined, { urn });
            case "aws:appsync/domainNameApiAssociation:DomainNameApiAssociation":
                return new exports.DomainNameApiAssociation(name, undefined, { urn });
            case "aws:appsync/function:Function":
                return new exports.Function(name, undefined, { urn });
            case "aws:appsync/graphQLApi:GraphQLApi":
                return new exports.GraphQLApi(name, undefined, { urn });
            case "aws:appsync/resolver:Resolver":
                return new exports.Resolver(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "appsync/apiCache", _module);
pulumi.runtime.registerResourceModule("aws", "appsync/apiKey", _module);
pulumi.runtime.registerResourceModule("aws", "appsync/dataSource", _module);
pulumi.runtime.registerResourceModule("aws", "appsync/domainName", _module);
pulumi.runtime.registerResourceModule("aws", "appsync/domainNameApiAssociation", _module);
pulumi.runtime.registerResourceModule("aws", "appsync/function", _module);
pulumi.runtime.registerResourceModule("aws", "appsync/graphQLApi", _module);
pulumi.runtime.registerResourceModule("aws", "appsync/resolver", _module);
//# sourceMappingURL=index.js.map