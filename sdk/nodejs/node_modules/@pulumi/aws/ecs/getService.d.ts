import * as pulumi from "@pulumi/pulumi";
/**
 * The ECS Service data source allows access to details of a specific
 * Service within a AWS ECS Cluster.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ecs.getService({
 *     serviceName: "example",
 *     clusterArn: data.aws_ecs_cluster.example.arn,
 * });
 * ```
 */
export declare function getService(args: GetServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceResult>;
/**
 * A collection of arguments for invoking getService.
 */
export interface GetServiceArgs {
    /**
     * ARN of the ECS Cluster
     */
    clusterArn: string;
    /**
     * Name of the ECS Service
     */
    serviceName: string;
    /**
     * Resource tags.
     */
    tags?: {
        [key: string]: string;
    };
}
/**
 * A collection of values returned by getService.
 */
export interface GetServiceResult {
    /**
     * ARN of the ECS Service
     */
    readonly arn: string;
    readonly clusterArn: string;
    /**
     * Number of tasks for the ECS Service
     */
    readonly desiredCount: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Launch type for the ECS Service
     */
    readonly launchType: string;
    /**
     * Scheduling strategy for the ECS Service
     */
    readonly schedulingStrategy: string;
    readonly serviceName: string;
    /**
     * Resource tags.
     */
    readonly tags: {
        [key: string]: string;
    };
    /**
     * Family for the latest ACTIVE revision
     */
    readonly taskDefinition: string;
}
export declare function getServiceOutput(args: GetServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceResult>;
/**
 * A collection of arguments for invoking getService.
 */
export interface GetServiceOutputArgs {
    /**
     * ARN of the ECS Cluster
     */
    clusterArn: pulumi.Input<string>;
    /**
     * Name of the ECS Service
     */
    serviceName: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
