"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.OntapStorageVirtualMachine = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a FSx Storage Virtual Machine.
 * See the [FSx ONTAP User Guide](https://docs.aws.amazon.com/fsx/latest/ONTAPGuide/managing-svms.html) for more information.
 *
 * ## Example Usage
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.fsx.OntapStorageVirtualMachine("test", {fileSystemId: aws_fsx_ontap_file_system.test.id});
 * ```
 * ### Using a Self-Managed Microsoft Active Directory
 *
 * Additional information for using AWS Directory Service with ONTAP File Systems can be found in the [FSx ONTAP Guide](https://docs.aws.amazon.com/fsx/latest/ONTAPGuide/self-managed-AD.html).
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.fsx.OntapStorageVirtualMachine("test", {
 *     fileSystemId: aws_fsx_ontap_file_system.test.id,
 *     activeDirectoryConfiguration: {
 *         netbiosName: "mysvm",
 *         selfManagedActiveDirectoryConfiguration: {
 *             dnsIps: [
 *                 "10.0.0.111",
 *                 "10.0.0.222",
 *             ],
 *             domainName: "corp.example.com",
 *             password: "avoid-plaintext-passwords",
 *             username: "Admin",
 *         },
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * FSx Storage Virtual Machine can be imported using the `id`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:fsx/ontapStorageVirtualMachine:OntapStorageVirtualMachine example svm-12345678abcdef123
 * ```
 *
 *  Certain resource arguments, like `svm_admin_password` and the `self_managed_active_directory` configuation block `password`, do not have a FSx API method for reading the information after creation. If these arguments are set in the Terraform configuration on an imported resource, Terraform will always show a difference. To workaround this behavior, either omit the argument from the Terraform configuration or use [`ignore_changes`](https://www.terraform.io/docs/configuration/meta-arguments/lifecycle.html#ignore_changes) to hide the difference, e.g., terraform resource "aws_fsx_ontap_storage_virtual_machine" "example" {
 *
 * # ... other configuration ...
 *
 *  svm_admin_password = "avoid-plaintext-passwords"
 *
 * # There is no FSx API for reading svm_admin_password
 *
 *  lifecycle {
 *
 *  ignore_changes = [svm_admin_password]
 *
 *  } }
 */
class OntapStorageVirtualMachine extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["activeDirectoryConfiguration"] = state ? state.activeDirectoryConfiguration : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["endpoints"] = state ? state.endpoints : undefined;
            resourceInputs["fileSystemId"] = state ? state.fileSystemId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["rootVolumeSecurityStyle"] = state ? state.rootVolumeSecurityStyle : undefined;
            resourceInputs["subtype"] = state ? state.subtype : undefined;
            resourceInputs["svmAdminPassword"] = state ? state.svmAdminPassword : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.fileSystemId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fileSystemId'");
            }
            resourceInputs["activeDirectoryConfiguration"] = args ? args.activeDirectoryConfiguration : undefined;
            resourceInputs["fileSystemId"] = args ? args.fileSystemId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["rootVolumeSecurityStyle"] = args ? args.rootVolumeSecurityStyle : undefined;
            resourceInputs["svmAdminPassword"] = args ? args.svmAdminPassword : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["endpoints"] = undefined /*out*/;
            resourceInputs["subtype"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
            resourceInputs["uuid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OntapStorageVirtualMachine.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing OntapStorageVirtualMachine resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new OntapStorageVirtualMachine(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of OntapStorageVirtualMachine.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OntapStorageVirtualMachine.__pulumiType;
    }
}
exports.OntapStorageVirtualMachine = OntapStorageVirtualMachine;
/** @internal */
OntapStorageVirtualMachine.__pulumiType = 'aws:fsx/ontapStorageVirtualMachine:OntapStorageVirtualMachine';
//# sourceMappingURL=ontapStorageVirtualMachine.js.map