"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getOpenZfsSnapshotOutput = exports.getOpenZfsSnapshot = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Use this data source to get information about an Amazon FSx for OpenZFS Snapshot for use when provisioning new Volumes.
 *
 * ## Example Usage
 * ### Root volume Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = pulumi.output(aws.fsx.getOpenZfsSnapshot({
 *     filters: [{
 *         name: "volume-id",
 *         values: ["fsvol-073a32b6098a73feb"],
 *     }],
 *     mostRecent: true,
 * }));
 * ```
 */
function getOpenZfsSnapshot(args, opts) {
    args = args || {};
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:fsx/getOpenZfsSnapshot:getOpenZfsSnapshot", {
        "filters": args.filters,
        "mostRecent": args.mostRecent,
        "name": args.name,
        "snapshotIds": args.snapshotIds,
        "tags": args.tags,
    }, opts);
}
exports.getOpenZfsSnapshot = getOpenZfsSnapshot;
function getOpenZfsSnapshotOutput(args, opts) {
    return pulumi.output(args).apply(a => getOpenZfsSnapshot(a, opts));
}
exports.getOpenZfsSnapshotOutput = getOpenZfsSnapshotOutput;
//# sourceMappingURL=getOpenZfsSnapshot.js.map