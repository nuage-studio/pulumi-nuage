import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a FSx Backup resource.
 *
 * ## Windows Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleWindowsFileSystem = new aws.fsx.WindowsFileSystem("exampleWindowsFileSystem", {
 *     activeDirectoryId: aws_directory_service_directory.eample.id,
 *     skipFinalBackup: true,
 *     storageCapacity: 32,
 *     subnetIds: [aws_subnet.example1.id],
 *     throughputCapacity: 8,
 * });
 * const exampleBackup = new aws.fsx.Backup("exampleBackup", {fileSystemId: exampleWindowsFileSystem.id});
 * ```
 *
 * ## ONTAP Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleOntapVolume = new aws.fsx.OntapVolume("exampleOntapVolume", {
 *     junctionPath: "/example",
 *     sizeInMegabytes: 1024,
 *     storageEfficiencyEnabled: true,
 *     storageVirtualMachineId: aws_fsx_ontap_storage_virtual_machine.test.id,
 * });
 * const exampleBackup = new aws.fsx.Backup("exampleBackup", {volumeId: exampleOntapVolume.id});
 * ```
 *
 * ## Import
 *
 * FSx Backups can be imported using the `id`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:fsx/backup:Backup example fs-543ab12b1ca672f33
 * ```
 */
export declare class Backup extends pulumi.CustomResource {
    /**
     * Get an existing Backup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BackupState, opts?: pulumi.CustomResourceOptions): Backup;
    /**
     * Returns true if the given object is an instance of Backup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Backup;
    /**
     * Amazon Resource Name of the backup.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The ID of the file system to back up. Required if backing up Lustre or Windows file systems.
     */
    readonly fileSystemId: pulumi.Output<string | undefined>;
    /**
     * The ID of the AWS Key Management Service (AWS KMS) key used to encrypt the backup of the Amazon FSx file system's data at rest.
     */
    readonly kmsKeyId: pulumi.Output<string>;
    /**
     * AWS account identifier that created the file system.
     */
    readonly ownerId: pulumi.Output<string>;
    /**
     * A map of tags to assign to the file system. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level. If you have set `copyTagsToBackups` to true, and you specify one or more tags, no existing file system tags are copied from the file system to the backup.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    readonly tagsAll: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * The type of the file system backup.
     */
    readonly type: pulumi.Output<string>;
    /**
     * The ID of the volume to back up. Required if backing up a ONTAP Volume.
     */
    readonly volumeId: pulumi.Output<string | undefined>;
    /**
     * Create a Backup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: BackupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Backup resources.
 */
export interface BackupState {
    /**
     * Amazon Resource Name of the backup.
     */
    arn?: pulumi.Input<string>;
    /**
     * The ID of the file system to back up. Required if backing up Lustre or Windows file systems.
     */
    fileSystemId?: pulumi.Input<string>;
    /**
     * The ID of the AWS Key Management Service (AWS KMS) key used to encrypt the backup of the Amazon FSx file system's data at rest.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * AWS account identifier that created the file system.
     */
    ownerId?: pulumi.Input<string>;
    /**
     * A map of tags to assign to the file system. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level. If you have set `copyTagsToBackups` to true, and you specify one or more tags, no existing file system tags are copied from the file system to the backup.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The type of the file system backup.
     */
    type?: pulumi.Input<string>;
    /**
     * The ID of the volume to back up. Required if backing up a ONTAP Volume.
     */
    volumeId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Backup resource.
 */
export interface BackupArgs {
    /**
     * The ID of the file system to back up. Required if backing up Lustre or Windows file systems.
     */
    fileSystemId?: pulumi.Input<string>;
    /**
     * A map of tags to assign to the file system. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level. If you have set `copyTagsToBackups` to true, and you specify one or more tags, no existing file system tags are copied from the file system to the backup.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The ID of the volume to back up. Required if backing up a ONTAP Volume.
     */
    volumeId?: pulumi.Input<string>;
}
