"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.FindingAggregator = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Security Hub finding aggregator. Security Hub needs to be enabled in a region in order for the aggregator to pull through findings.
 *
 * ## Example Usage
 * ### All Regions Usage
 *
 * The following example will enable the aggregator for every region.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleAccount = new aws.securityhub.Account("exampleAccount", {});
 * const exampleFindingAggregator = new aws.securityhub.FindingAggregator("exampleFindingAggregator", {linkingMode: "ALL_REGIONS"}, {
 *     dependsOn: [exampleAccount],
 * });
 * ```
 * ### All Regions Except Specified Regions Usage
 *
 * The following example will enable the aggregator for every region except those specified in `specifiedRegions`.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleAccount = new aws.securityhub.Account("exampleAccount", {});
 * const exampleFindingAggregator = new aws.securityhub.FindingAggregator("exampleFindingAggregator", {
 *     linkingMode: "ALL_REGIONS_EXCEPT_SPECIFIED",
 *     specifiedRegions: [
 *         "eu-west-1",
 *         "eu-west-2",
 *     ],
 * }, {
 *     dependsOn: [exampleAccount],
 * });
 * ```
 * ### Specified Regions Usage
 *
 * The following example will enable the aggregator for every region specified in `specifiedRegions`.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleAccount = new aws.securityhub.Account("exampleAccount", {});
 * const exampleFindingAggregator = new aws.securityhub.FindingAggregator("exampleFindingAggregator", {
 *     linkingMode: "SPECIFIED_REGIONS",
 *     specifiedRegions: [
 *         "eu-west-1",
 *         "eu-west-2",
 *     ],
 * }, {
 *     dependsOn: [exampleAccount],
 * });
 * ```
 *
 * ## Import
 *
 * An existing Security Hub finding aggregator can be imported using the `arn`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:securityhub/findingAggregator:FindingAggregator example arn:aws:securityhub:eu-west-1:123456789098:finding-aggregator/abcd1234-abcd-1234-1234-abcdef123456
 * ```
 */
class FindingAggregator extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["linkingMode"] = state ? state.linkingMode : undefined;
            resourceInputs["specifiedRegions"] = state ? state.specifiedRegions : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.linkingMode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'linkingMode'");
            }
            resourceInputs["linkingMode"] = args ? args.linkingMode : undefined;
            resourceInputs["specifiedRegions"] = args ? args.specifiedRegions : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FindingAggregator.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing FindingAggregator resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new FindingAggregator(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of FindingAggregator.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FindingAggregator.__pulumiType;
    }
}
exports.FindingAggregator = FindingAggregator;
/** @internal */
FindingAggregator.__pulumiType = 'aws:securityhub/findingAggregator:FindingAggregator';
//# sourceMappingURL=findingAggregator.js.map