"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProductSubscription = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Subscribes to a Security Hub product.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleAccount = new aws.securityhub.Account("exampleAccount", {});
 * const current = aws.getRegion({});
 * const exampleProductSubscription = new aws.securityhub.ProductSubscription("exampleProductSubscription", {productArn: current.then(current => `arn:aws:securityhub:${current.name}:733251395267:product/alertlogic/althreatmanagement`)}, {
 *     dependsOn: [exampleAccount],
 * });
 * ```
 *
 * ## Import
 *
 * Security Hub product subscriptions can be imported in the form `product_arn,arn`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:securityhub/productSubscription:ProductSubscription example arn:aws:securityhub:eu-west-1:733251395267:product/alertlogic/althreatmanagement,arn:aws:securityhub:eu-west-1:123456789012:product-subscription/alertlogic/althreatmanagement
 * ```
 */
class ProductSubscription extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["productArn"] = state ? state.productArn : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.productArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'productArn'");
            }
            resourceInputs["productArn"] = args ? args.productArn : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ProductSubscription.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing ProductSubscription resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ProductSubscription(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ProductSubscription.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProductSubscription.__pulumiType;
    }
}
exports.ProductSubscription = ProductSubscription;
/** @internal */
ProductSubscription.__pulumiType = 'aws:securityhub/productSubscription:ProductSubscription';
//# sourceMappingURL=productSubscription.js.map