import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a Security Hub member resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleAccount = new aws.securityhub.Account("exampleAccount", {});
 * const exampleMember = new aws.securityhub.Member("exampleMember", {
 *     accountId: "123456789012",
 *     email: "example@example.com",
 *     invite: true,
 * }, {
 *     dependsOn: [exampleAccount],
 * });
 * ```
 *
 * ## Import
 *
 * Security Hub members can be imported using their account ID, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:securityhub/member:Member example 123456789012
 * ```
 */
export declare class Member extends pulumi.CustomResource {
    /**
     * Get an existing Member resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MemberState, opts?: pulumi.CustomResourceOptions): Member;
    /**
     * Returns true if the given object is an instance of Member.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Member;
    /**
     * The ID of the member AWS account.
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * The email of the member AWS account.
     */
    readonly email: pulumi.Output<string>;
    /**
     * Boolean whether to invite the account to Security Hub as a member. Defaults to `false`.
     */
    readonly invite: pulumi.Output<boolean | undefined>;
    /**
     * The ID of the master Security Hub AWS account.
     */
    readonly masterId: pulumi.Output<string>;
    /**
     * The status of the member account relationship.
     */
    readonly memberStatus: pulumi.Output<string>;
    /**
     * Create a Member resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MemberArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Member resources.
 */
export interface MemberState {
    /**
     * The ID of the member AWS account.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The email of the member AWS account.
     */
    email?: pulumi.Input<string>;
    /**
     * Boolean whether to invite the account to Security Hub as a member. Defaults to `false`.
     */
    invite?: pulumi.Input<boolean>;
    /**
     * The ID of the master Security Hub AWS account.
     */
    masterId?: pulumi.Input<string>;
    /**
     * The status of the member account relationship.
     */
    memberStatus?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Member resource.
 */
export interface MemberArgs {
    /**
     * The ID of the member AWS account.
     */
    accountId: pulumi.Input<string>;
    /**
     * The email of the member AWS account.
     */
    email: pulumi.Input<string>;
    /**
     * Boolean whether to invite the account to Security Hub as a member. Defaults to `false`.
     */
    invite?: pulumi.Input<boolean>;
}
