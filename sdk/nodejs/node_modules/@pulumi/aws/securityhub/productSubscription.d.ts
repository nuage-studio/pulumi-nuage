import * as pulumi from "@pulumi/pulumi";
/**
 * Subscribes to a Security Hub product.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleAccount = new aws.securityhub.Account("exampleAccount", {});
 * const current = aws.getRegion({});
 * const exampleProductSubscription = new aws.securityhub.ProductSubscription("exampleProductSubscription", {productArn: current.then(current => `arn:aws:securityhub:${current.name}:733251395267:product/alertlogic/althreatmanagement`)}, {
 *     dependsOn: [exampleAccount],
 * });
 * ```
 *
 * ## Import
 *
 * Security Hub product subscriptions can be imported in the form `product_arn,arn`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:securityhub/productSubscription:ProductSubscription example arn:aws:securityhub:eu-west-1:733251395267:product/alertlogic/althreatmanagement,arn:aws:securityhub:eu-west-1:123456789012:product-subscription/alertlogic/althreatmanagement
 * ```
 */
export declare class ProductSubscription extends pulumi.CustomResource {
    /**
     * Get an existing ProductSubscription resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProductSubscriptionState, opts?: pulumi.CustomResourceOptions): ProductSubscription;
    /**
     * Returns true if the given object is an instance of ProductSubscription.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ProductSubscription;
    /**
     * The ARN of a resource that represents your subscription to the product that generates the findings that you want to import into Security Hub.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The ARN of the product that generates findings that you want to import into Security Hub - see below.
     */
    readonly productArn: pulumi.Output<string>;
    /**
     * Create a ProductSubscription resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProductSubscriptionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ProductSubscription resources.
 */
export interface ProductSubscriptionState {
    /**
     * The ARN of a resource that represents your subscription to the product that generates the findings that you want to import into Security Hub.
     */
    arn?: pulumi.Input<string>;
    /**
     * The ARN of the product that generates findings that you want to import into Security Hub - see below.
     */
    productArn?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ProductSubscription resource.
 */
export interface ProductSubscriptionArgs {
    /**
     * The ARN of the product that generates findings that you want to import into Security Hub - see below.
     */
    productArn: pulumi.Input<string>;
}
