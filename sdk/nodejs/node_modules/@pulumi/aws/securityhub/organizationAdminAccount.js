"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.OrganizationAdminAccount = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Security Hub administrator account for an organization. The AWS account utilizing this resource must be an Organizations primary account. More information about Organizations support in Security Hub can be found in the [Security Hub User Guide](https://docs.aws.amazon.com/securityhub/latest/userguide/designate-orgs-admin-account.html).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleOrganization = new aws.organizations.Organization("exampleOrganization", {
 *     awsServiceAccessPrincipals: ["securityhub.amazonaws.com"],
 *     featureSet: "ALL",
 * });
 * const exampleAccount = new aws.securityhub.Account("exampleAccount", {});
 * const exampleOrganizationAdminAccount = new aws.securityhub.OrganizationAdminAccount("exampleOrganizationAdminAccount", {adminAccountId: "123456789012"}, {
 *     dependsOn: [exampleOrganization],
 * });
 * // Auto enable security hub in organization member accounts
 * const exampleOrganizationConfiguration = new aws.securityhub.OrganizationConfiguration("exampleOrganizationConfiguration", {autoEnable: true});
 * ```
 *
 * ## Import
 *
 * Security Hub Organization Admin Accounts can be imported using the AWS account ID, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:securityhub/organizationAdminAccount:OrganizationAdminAccount example 123456789012
 * ```
 */
class OrganizationAdminAccount extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["adminAccountId"] = state ? state.adminAccountId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.adminAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'adminAccountId'");
            }
            resourceInputs["adminAccountId"] = args ? args.adminAccountId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OrganizationAdminAccount.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing OrganizationAdminAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new OrganizationAdminAccount(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of OrganizationAdminAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrganizationAdminAccount.__pulumiType;
    }
}
exports.OrganizationAdminAccount = OrganizationAdminAccount;
/** @internal */
OrganizationAdminAccount.__pulumiType = 'aws:securityhub/organizationAdminAccount:OrganizationAdminAccount';
//# sourceMappingURL=organizationAdminAccount.js.map