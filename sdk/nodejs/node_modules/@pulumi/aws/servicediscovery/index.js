"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Service = exports.PublicDnsNamespace = exports.PrivateDnsNamespace = exports.Instance = exports.HttpNamespace = exports.getServiceOutput = exports.getService = exports.getHttpNamespaceOutput = exports.getHttpNamespace = exports.getDnsNamespaceOutput = exports.getDnsNamespace = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.getDnsNamespace = null;
exports.getDnsNamespaceOutput = null;
exports.getHttpNamespace = null;
exports.getHttpNamespaceOutput = null;
exports.getService = null;
exports.getServiceOutput = null;
exports.HttpNamespace = null;
exports.Instance = null;
exports.PrivateDnsNamespace = null;
exports.PublicDnsNamespace = null;
exports.Service = null;
utilities.lazyLoad(exports, ["getDnsNamespace", "getDnsNamespaceOutput"], () => require("./getDnsNamespace"));
utilities.lazyLoad(exports, ["getHttpNamespace", "getHttpNamespaceOutput"], () => require("./getHttpNamespace"));
utilities.lazyLoad(exports, ["getService", "getServiceOutput"], () => require("./getService"));
utilities.lazyLoad(exports, ["HttpNamespace"], () => require("./httpNamespace"));
utilities.lazyLoad(exports, ["Instance"], () => require("./instance"));
utilities.lazyLoad(exports, ["PrivateDnsNamespace"], () => require("./privateDnsNamespace"));
utilities.lazyLoad(exports, ["PublicDnsNamespace"], () => require("./publicDnsNamespace"));
utilities.lazyLoad(exports, ["Service"], () => require("./service"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:servicediscovery/httpNamespace:HttpNamespace":
                return new exports.HttpNamespace(name, undefined, { urn });
            case "aws:servicediscovery/instance:Instance":
                return new exports.Instance(name, undefined, { urn });
            case "aws:servicediscovery/privateDnsNamespace:PrivateDnsNamespace":
                return new exports.PrivateDnsNamespace(name, undefined, { urn });
            case "aws:servicediscovery/publicDnsNamespace:PublicDnsNamespace":
                return new exports.PublicDnsNamespace(name, undefined, { urn });
            case "aws:servicediscovery/service:Service":
                return new exports.Service(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "servicediscovery/httpNamespace", _module);
pulumi.runtime.registerResourceModule("aws", "servicediscovery/instance", _module);
pulumi.runtime.registerResourceModule("aws", "servicediscovery/privateDnsNamespace", _module);
pulumi.runtime.registerResourceModule("aws", "servicediscovery/publicDnsNamespace", _module);
pulumi.runtime.registerResourceModule("aws", "servicediscovery/service", _module);
//# sourceMappingURL=index.js.map