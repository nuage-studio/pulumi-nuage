"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ObjectLambdaAccessPointPolicy = exports.ObjectLambdaAccessPoint = exports.MultiRegionAccessPointPolicy = exports.MultiRegionAccessPoint = exports.BucketPolicy = exports.BucketLifecycleConfiguration = exports.Bucket = exports.AccessPointPolicy = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.AccessPointPolicy = null;
exports.Bucket = null;
exports.BucketLifecycleConfiguration = null;
exports.BucketPolicy = null;
exports.MultiRegionAccessPoint = null;
exports.MultiRegionAccessPointPolicy = null;
exports.ObjectLambdaAccessPoint = null;
exports.ObjectLambdaAccessPointPolicy = null;
utilities.lazyLoad(exports, ["AccessPointPolicy"], () => require("./accessPointPolicy"));
utilities.lazyLoad(exports, ["Bucket"], () => require("./bucket"));
utilities.lazyLoad(exports, ["BucketLifecycleConfiguration"], () => require("./bucketLifecycleConfiguration"));
utilities.lazyLoad(exports, ["BucketPolicy"], () => require("./bucketPolicy"));
utilities.lazyLoad(exports, ["MultiRegionAccessPoint"], () => require("./multiRegionAccessPoint"));
utilities.lazyLoad(exports, ["MultiRegionAccessPointPolicy"], () => require("./multiRegionAccessPointPolicy"));
utilities.lazyLoad(exports, ["ObjectLambdaAccessPoint"], () => require("./objectLambdaAccessPoint"));
utilities.lazyLoad(exports, ["ObjectLambdaAccessPointPolicy"], () => require("./objectLambdaAccessPointPolicy"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:s3control/accessPointPolicy:AccessPointPolicy":
                return new exports.AccessPointPolicy(name, undefined, { urn });
            case "aws:s3control/bucket:Bucket":
                return new exports.Bucket(name, undefined, { urn });
            case "aws:s3control/bucketLifecycleConfiguration:BucketLifecycleConfiguration":
                return new exports.BucketLifecycleConfiguration(name, undefined, { urn });
            case "aws:s3control/bucketPolicy:BucketPolicy":
                return new exports.BucketPolicy(name, undefined, { urn });
            case "aws:s3control/multiRegionAccessPoint:MultiRegionAccessPoint":
                return new exports.MultiRegionAccessPoint(name, undefined, { urn });
            case "aws:s3control/multiRegionAccessPointPolicy:MultiRegionAccessPointPolicy":
                return new exports.MultiRegionAccessPointPolicy(name, undefined, { urn });
            case "aws:s3control/objectLambdaAccessPoint:ObjectLambdaAccessPoint":
                return new exports.ObjectLambdaAccessPoint(name, undefined, { urn });
            case "aws:s3control/objectLambdaAccessPointPolicy:ObjectLambdaAccessPointPolicy":
                return new exports.ObjectLambdaAccessPointPolicy(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "s3control/accessPointPolicy", _module);
pulumi.runtime.registerResourceModule("aws", "s3control/bucket", _module);
pulumi.runtime.registerResourceModule("aws", "s3control/bucketLifecycleConfiguration", _module);
pulumi.runtime.registerResourceModule("aws", "s3control/bucketPolicy", _module);
pulumi.runtime.registerResourceModule("aws", "s3control/multiRegionAccessPoint", _module);
pulumi.runtime.registerResourceModule("aws", "s3control/multiRegionAccessPointPolicy", _module);
pulumi.runtime.registerResourceModule("aws", "s3control/objectLambdaAccessPoint", _module);
pulumi.runtime.registerResourceModule("aws", "s3control/objectLambdaAccessPointPolicy", _module);
//# sourceMappingURL=index.js.map