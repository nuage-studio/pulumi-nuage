"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.MultiRegionAccessPointPolicy = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a resource to manage an S3 Multi-Region Access Point access control policy.
 *
 * ## Example Usage
 * ### Basic Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const currentCallerIdentity = aws.getCallerIdentity({});
 * const currentPartition = aws.getPartition({});
 * const fooBucket = new aws.s3.BucketV2("fooBucket", {});
 * const exampleMultiRegionAccessPoint = new aws.s3control.MultiRegionAccessPoint("exampleMultiRegionAccessPoint", {details: {
 *     name: "example",
 *     regions: [{
 *         bucket: fooBucket.id,
 *     }],
 * }});
 * const exampleMultiRegionAccessPointPolicy = new aws.s3control.MultiRegionAccessPointPolicy("exampleMultiRegionAccessPointPolicy", {details: {
 *     name: exampleMultiRegionAccessPoint.id.apply(id => id.split(":"))[1],
 *     policy: pulumi.all([currentCallerIdentity, currentPartition, currentCallerIdentity, exampleMultiRegionAccessPoint.alias]).apply(([currentCallerIdentity, currentPartition, currentCallerIdentity1, alias]) => JSON.stringify({
 *         Version: "2012-10-17",
 *         Statement: [{
 *             Sid: "Example",
 *             Effect: "Allow",
 *             Principal: {
 *                 AWS: currentCallerIdentity.accountId,
 *             },
 *             Action: [
 *                 "s3:GetObject",
 *                 "s3:PutObject",
 *             ],
 *             Resource: `arn:${currentPartition.partition}:s3::${currentCallerIdentity1.accountId}:accesspoint/${alias}/object/*`,
 *         }],
 *     })),
 * }});
 * ```
 *
 * ## Import
 *
 * Multi-Region Access Point Policies can be imported using the `account_id` and `name` of the Multi-Region Access Point separated by a colon (`:`), e.g.
 *
 * ```sh
 *  $ pulumi import aws:s3control/multiRegionAccessPointPolicy:MultiRegionAccessPointPolicy example 123456789012:example
 * ```
 */
class MultiRegionAccessPointPolicy extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["details"] = state ? state.details : undefined;
            resourceInputs["established"] = state ? state.established : undefined;
            resourceInputs["proposed"] = state ? state.proposed : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.details === undefined) && !opts.urn) {
                throw new Error("Missing required property 'details'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["details"] = args ? args.details : undefined;
            resourceInputs["established"] = undefined /*out*/;
            resourceInputs["proposed"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MultiRegionAccessPointPolicy.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing MultiRegionAccessPointPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new MultiRegionAccessPointPolicy(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of MultiRegionAccessPointPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MultiRegionAccessPointPolicy.__pulumiType;
    }
}
exports.MultiRegionAccessPointPolicy = MultiRegionAccessPointPolicy;
/** @internal */
MultiRegionAccessPointPolicy.__pulumiType = 'aws:s3control/multiRegionAccessPointPolicy:MultiRegionAccessPointPolicy';
//# sourceMappingURL=multiRegionAccessPointPolicy.js.map