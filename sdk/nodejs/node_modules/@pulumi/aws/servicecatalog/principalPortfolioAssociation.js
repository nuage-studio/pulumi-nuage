"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.PrincipalPortfolioAssociation = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Service Catalog Principal Portfolio Association.
 *
 * ## Example Usage
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.servicecatalog.PrincipalPortfolioAssociation("example", {
 *     portfolioId: "port-68656c6c6f",
 *     principalArn: "arn:aws:iam::123456789012:user/Eleanor",
 * });
 * ```
 *
 * ## Import
 *
 * `aws_servicecatalog_principal_portfolio_association` can be imported using the accept language, principal ARN, and portfolio ID, separated by a comma, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:servicecatalog/principalPortfolioAssociation:PrincipalPortfolioAssociation example en,arn:aws:iam::123456789012:user/Eleanor,port-68656c6c6f
 * ```
 */
class PrincipalPortfolioAssociation extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["acceptLanguage"] = state ? state.acceptLanguage : undefined;
            resourceInputs["portfolioId"] = state ? state.portfolioId : undefined;
            resourceInputs["principalArn"] = state ? state.principalArn : undefined;
            resourceInputs["principalType"] = state ? state.principalType : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.portfolioId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'portfolioId'");
            }
            if ((!args || args.principalArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'principalArn'");
            }
            resourceInputs["acceptLanguage"] = args ? args.acceptLanguage : undefined;
            resourceInputs["portfolioId"] = args ? args.portfolioId : undefined;
            resourceInputs["principalArn"] = args ? args.principalArn : undefined;
            resourceInputs["principalType"] = args ? args.principalType : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PrincipalPortfolioAssociation.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing PrincipalPortfolioAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new PrincipalPortfolioAssociation(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of PrincipalPortfolioAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PrincipalPortfolioAssociation.__pulumiType;
    }
}
exports.PrincipalPortfolioAssociation = PrincipalPortfolioAssociation;
/** @internal */
PrincipalPortfolioAssociation.__pulumiType = 'aws:servicecatalog/principalPortfolioAssociation:PrincipalPortfolioAssociation';
//# sourceMappingURL=principalPortfolioAssociation.js.map