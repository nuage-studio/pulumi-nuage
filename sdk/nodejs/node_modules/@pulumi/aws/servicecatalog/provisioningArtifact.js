"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProvisioningArtifact = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Service Catalog Provisioning Artifact for a specified product.
 *
 * > A "provisioning artifact" is also referred to as a "version."
 *
 * > **NOTE:** You cannot create a provisioning artifact for a product that was shared with you.
 *
 * > **NOTE:** The user or role that use this resource must have the `cloudformation:GetTemplate` IAM policy permission. This policy permission is required when using the `templatePhysicalId` argument.
 *
 * ## Example Usage
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.servicecatalog.ProvisioningArtifact("example", {
 *     productId: aws_servicecatalog_product.example.id,
 *     type: "CLOUD_FORMATION_TEMPLATE",
 *     templateUrl: `https://${aws_s3_bucket.example.bucket_regional_domain_name}/${aws_s3_object.example.key}`,
 * });
 * ```
 *
 * ## Import
 *
 * `aws_servicecatalog_provisioning_artifact` can be imported using the provisioning artifact ID and product ID separated by a colon, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:servicecatalog/provisioningArtifact:ProvisioningArtifact example pa-ij2b6lusy6dec:prod-el3an0rma3
 * ```
 */
class ProvisioningArtifact extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["acceptLanguage"] = state ? state.acceptLanguage : undefined;
            resourceInputs["active"] = state ? state.active : undefined;
            resourceInputs["createdTime"] = state ? state.createdTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["disableTemplateValidation"] = state ? state.disableTemplateValidation : undefined;
            resourceInputs["guidance"] = state ? state.guidance : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["productId"] = state ? state.productId : undefined;
            resourceInputs["templatePhysicalId"] = state ? state.templatePhysicalId : undefined;
            resourceInputs["templateUrl"] = state ? state.templateUrl : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.productId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'productId'");
            }
            resourceInputs["acceptLanguage"] = args ? args.acceptLanguage : undefined;
            resourceInputs["active"] = args ? args.active : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["disableTemplateValidation"] = args ? args.disableTemplateValidation : undefined;
            resourceInputs["guidance"] = args ? args.guidance : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["productId"] = args ? args.productId : undefined;
            resourceInputs["templatePhysicalId"] = args ? args.templatePhysicalId : undefined;
            resourceInputs["templateUrl"] = args ? args.templateUrl : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["createdTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ProvisioningArtifact.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing ProvisioningArtifact resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ProvisioningArtifact(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ProvisioningArtifact.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProvisioningArtifact.__pulumiType;
    }
}
exports.ProvisioningArtifact = ProvisioningArtifact;
/** @internal */
ProvisioningArtifact.__pulumiType = 'aws:servicecatalog/provisioningArtifact:ProvisioningArtifact';
//# sourceMappingURL=provisioningArtifact.js.map