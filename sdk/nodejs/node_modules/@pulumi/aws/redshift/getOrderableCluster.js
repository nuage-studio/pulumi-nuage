"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getOrderableClusterOutput = exports.getOrderableCluster = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Information about Redshift Orderable Clusters and valid parameter combinations.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = pulumi.output(aws.redshift.getOrderableCluster({
 *     clusterType: "multi-node",
 *     preferredNodeTypes: [
 *         "dc2.large",
 *         "ds2.xlarge",
 *     ],
 * }));
 * ```
 */
function getOrderableCluster(args, opts) {
    args = args || {};
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:redshift/getOrderableCluster:getOrderableCluster", {
        "clusterType": args.clusterType,
        "clusterVersion": args.clusterVersion,
        "nodeType": args.nodeType,
        "preferredNodeTypes": args.preferredNodeTypes,
    }, opts);
}
exports.getOrderableCluster = getOrderableCluster;
function getOrderableClusterOutput(args, opts) {
    return pulumi.output(args).apply(a => getOrderableCluster(a, opts));
}
exports.getOrderableClusterOutput = getOrderableClusterOutput;
//# sourceMappingURL=getOrderableCluster.js.map