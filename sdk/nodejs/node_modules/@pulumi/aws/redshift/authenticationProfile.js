"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticationProfile = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Creates a Redshift authentication profile
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.redshift.AuthenticationProfile("example", {
 *     authenticationProfileName: "example",
 *     authenticationProfileContent: JSON.stringify({
 *         AllowDBUserOverride: "1",
 *         Client_ID: "ExampleClientID",
 *         App_ID: "example",
 *     }),
 * });
 * ```
 *
 * ## Import
 *
 * Redshift Authentication Profiles support import by `authentication_profile_name`, e.g., console
 *
 * ```sh
 *  $ pulumi import aws:redshift/authenticationProfile:AuthenticationProfile test example
 * ```
 */
class AuthenticationProfile extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["authenticationProfileContent"] = state ? state.authenticationProfileContent : undefined;
            resourceInputs["authenticationProfileName"] = state ? state.authenticationProfileName : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.authenticationProfileContent === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authenticationProfileContent'");
            }
            if ((!args || args.authenticationProfileName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authenticationProfileName'");
            }
            resourceInputs["authenticationProfileContent"] = args ? args.authenticationProfileContent : undefined;
            resourceInputs["authenticationProfileName"] = args ? args.authenticationProfileName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AuthenticationProfile.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing AuthenticationProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new AuthenticationProfile(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of AuthenticationProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AuthenticationProfile.__pulumiType;
    }
}
exports.AuthenticationProfile = AuthenticationProfile;
/** @internal */
AuthenticationProfile.__pulumiType = 'aws:redshift/authenticationProfile:AuthenticationProfile';
//# sourceMappingURL=authenticationProfile.js.map