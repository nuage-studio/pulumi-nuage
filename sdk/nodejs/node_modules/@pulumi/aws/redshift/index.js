"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.UsageLimit = exports.SubnetGroup = exports.SnapshotScheduleAssociation = exports.SnapshotSchedule = exports.SnapshotCopyGrant = exports.SecurityGroup = exports.ScheduledAction = exports.ParameterGroup = exports.HsmConfiguration = exports.HsmClientCertificate = exports.getSubnetGroupOutput = exports.getSubnetGroup = exports.getServiceAccountOutput = exports.getServiceAccount = exports.getOrderableClusterOutput = exports.getOrderableCluster = exports.getClusterCredentialsOutput = exports.getClusterCredentials = exports.getClusterOutput = exports.getCluster = exports.EventSubscription = exports.EndpointAccess = exports.ClusterIamRoles = exports.Cluster = exports.AuthenticationProfile = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.AuthenticationProfile = null;
exports.Cluster = null;
exports.ClusterIamRoles = null;
exports.EndpointAccess = null;
exports.EventSubscription = null;
exports.getCluster = null;
exports.getClusterOutput = null;
exports.getClusterCredentials = null;
exports.getClusterCredentialsOutput = null;
exports.getOrderableCluster = null;
exports.getOrderableClusterOutput = null;
exports.getServiceAccount = null;
exports.getServiceAccountOutput = null;
exports.getSubnetGroup = null;
exports.getSubnetGroupOutput = null;
exports.HsmClientCertificate = null;
exports.HsmConfiguration = null;
exports.ParameterGroup = null;
exports.ScheduledAction = null;
exports.SecurityGroup = null;
exports.SnapshotCopyGrant = null;
exports.SnapshotSchedule = null;
exports.SnapshotScheduleAssociation = null;
exports.SubnetGroup = null;
exports.UsageLimit = null;
utilities.lazyLoad(exports, ["AuthenticationProfile"], () => require("./authenticationProfile"));
utilities.lazyLoad(exports, ["Cluster"], () => require("./cluster"));
utilities.lazyLoad(exports, ["ClusterIamRoles"], () => require("./clusterIamRoles"));
utilities.lazyLoad(exports, ["EndpointAccess"], () => require("./endpointAccess"));
utilities.lazyLoad(exports, ["EventSubscription"], () => require("./eventSubscription"));
utilities.lazyLoad(exports, ["getCluster", "getClusterOutput"], () => require("./getCluster"));
utilities.lazyLoad(exports, ["getClusterCredentials", "getClusterCredentialsOutput"], () => require("./getClusterCredentials"));
utilities.lazyLoad(exports, ["getOrderableCluster", "getOrderableClusterOutput"], () => require("./getOrderableCluster"));
utilities.lazyLoad(exports, ["getServiceAccount", "getServiceAccountOutput"], () => require("./getServiceAccount"));
utilities.lazyLoad(exports, ["getSubnetGroup", "getSubnetGroupOutput"], () => require("./getSubnetGroup"));
utilities.lazyLoad(exports, ["HsmClientCertificate"], () => require("./hsmClientCertificate"));
utilities.lazyLoad(exports, ["HsmConfiguration"], () => require("./hsmConfiguration"));
utilities.lazyLoad(exports, ["ParameterGroup"], () => require("./parameterGroup"));
utilities.lazyLoad(exports, ["ScheduledAction"], () => require("./scheduledAction"));
utilities.lazyLoad(exports, ["SecurityGroup"], () => require("./securityGroup"));
utilities.lazyLoad(exports, ["SnapshotCopyGrant"], () => require("./snapshotCopyGrant"));
utilities.lazyLoad(exports, ["SnapshotSchedule"], () => require("./snapshotSchedule"));
utilities.lazyLoad(exports, ["SnapshotScheduleAssociation"], () => require("./snapshotScheduleAssociation"));
utilities.lazyLoad(exports, ["SubnetGroup"], () => require("./subnetGroup"));
utilities.lazyLoad(exports, ["UsageLimit"], () => require("./usageLimit"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:redshift/authenticationProfile:AuthenticationProfile":
                return new exports.AuthenticationProfile(name, undefined, { urn });
            case "aws:redshift/cluster:Cluster":
                return new exports.Cluster(name, undefined, { urn });
            case "aws:redshift/clusterIamRoles:ClusterIamRoles":
                return new exports.ClusterIamRoles(name, undefined, { urn });
            case "aws:redshift/endpointAccess:EndpointAccess":
                return new exports.EndpointAccess(name, undefined, { urn });
            case "aws:redshift/eventSubscription:EventSubscription":
                return new exports.EventSubscription(name, undefined, { urn });
            case "aws:redshift/hsmClientCertificate:HsmClientCertificate":
                return new exports.HsmClientCertificate(name, undefined, { urn });
            case "aws:redshift/hsmConfiguration:HsmConfiguration":
                return new exports.HsmConfiguration(name, undefined, { urn });
            case "aws:redshift/parameterGroup:ParameterGroup":
                return new exports.ParameterGroup(name, undefined, { urn });
            case "aws:redshift/scheduledAction:ScheduledAction":
                return new exports.ScheduledAction(name, undefined, { urn });
            case "aws:redshift/securityGroup:SecurityGroup":
                return new exports.SecurityGroup(name, undefined, { urn });
            case "aws:redshift/snapshotCopyGrant:SnapshotCopyGrant":
                return new exports.SnapshotCopyGrant(name, undefined, { urn });
            case "aws:redshift/snapshotSchedule:SnapshotSchedule":
                return new exports.SnapshotSchedule(name, undefined, { urn });
            case "aws:redshift/snapshotScheduleAssociation:SnapshotScheduleAssociation":
                return new exports.SnapshotScheduleAssociation(name, undefined, { urn });
            case "aws:redshift/subnetGroup:SubnetGroup":
                return new exports.SubnetGroup(name, undefined, { urn });
            case "aws:redshift/usageLimit:UsageLimit":
                return new exports.UsageLimit(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "redshift/authenticationProfile", _module);
pulumi.runtime.registerResourceModule("aws", "redshift/cluster", _module);
pulumi.runtime.registerResourceModule("aws", "redshift/clusterIamRoles", _module);
pulumi.runtime.registerResourceModule("aws", "redshift/endpointAccess", _module);
pulumi.runtime.registerResourceModule("aws", "redshift/eventSubscription", _module);
pulumi.runtime.registerResourceModule("aws", "redshift/hsmClientCertificate", _module);
pulumi.runtime.registerResourceModule("aws", "redshift/hsmConfiguration", _module);
pulumi.runtime.registerResourceModule("aws", "redshift/parameterGroup", _module);
pulumi.runtime.registerResourceModule("aws", "redshift/scheduledAction", _module);
pulumi.runtime.registerResourceModule("aws", "redshift/securityGroup", _module);
pulumi.runtime.registerResourceModule("aws", "redshift/snapshotCopyGrant", _module);
pulumi.runtime.registerResourceModule("aws", "redshift/snapshotSchedule", _module);
pulumi.runtime.registerResourceModule("aws", "redshift/snapshotScheduleAssociation", _module);
pulumi.runtime.registerResourceModule("aws", "redshift/subnetGroup", _module);
pulumi.runtime.registerResourceModule("aws", "redshift/usageLimit", _module);
//# sourceMappingURL=index.js.map