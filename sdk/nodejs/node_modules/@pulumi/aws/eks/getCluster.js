"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getClusterOutput = exports.getCluster = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Retrieve information about an EKS Cluster.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * export = async () => {
 *     const example = await aws.eks.getCluster({
 *         name: "example",
 *     });
 *     const endpoint = example.endpoint;
 *     const kubeconfig_certificate_authority_data = example.certificateAuthorities?[0]?.data;
 *     const identity_oidc_issuer = example.identities?[0]?.oidcs?[0]?.issuer;
 *     return {
 *         endpoint: endpoint,
 *         "kubeconfig-certificate-authority-data": kubeconfig_certificate_authority_data,
 *         "identity-oidc-issuer": identity_oidc_issuer,
 *     };
 * }
 * ```
 */
function getCluster(args, opts) {
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:eks/getCluster:getCluster", {
        "name": args.name,
        "tags": args.tags,
    }, opts);
}
exports.getCluster = getCluster;
function getClusterOutput(args, opts) {
    return pulumi.output(args).apply(a => getCluster(a, opts));
}
exports.getClusterOutput = getClusterOutput;
//# sourceMappingURL=getCluster.js.map