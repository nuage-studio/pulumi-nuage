import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Creates a new Amazon Redshift Serverless Workgroup.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.redshiftserverless.Workgroup("example", {
 *     namespaceName: "concurrency-scaling",
 *     workgroupName: "concurrency-scaling",
 * });
 * ```
 *
 * ## Import
 *
 * Redshift Serverless Workgroups can be imported using the `workgroup_name`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:redshiftserverless/workgroup:Workgroup example example
 * ```
 */
export declare class Workgroup extends pulumi.CustomResource {
    /**
     * Get an existing Workgroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkgroupState, opts?: pulumi.CustomResourceOptions): Workgroup;
    /**
     * Returns true if the given object is an instance of Workgroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Workgroup;
    /**
     * Amazon Resource Name (ARN) of the Redshift Serverless Workgroup.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The base data warehouse capacity of the workgroup in Redshift Processing Units (RPUs).
     */
    readonly baseCapacity: pulumi.Output<number>;
    /**
     * An array of parameters to set for more control over a serverless database. See `Config Parameter` below.
     */
    readonly configParameters: pulumi.Output<outputs.redshiftserverless.WorkgroupConfigParameter[]>;
    /**
     * The endpoint that is created from the workgroup. See `Endpoint` below.
     */
    readonly endpoints: pulumi.Output<outputs.redshiftserverless.WorkgroupEndpoint[]>;
    /**
     * The value that specifies whether to turn on enhanced virtual private cloud (VPC) routing, which forces Amazon Redshift Serverless to route traffic through your VPC instead of over the internet.
     */
    readonly enhancedVpcRouting: pulumi.Output<boolean | undefined>;
    readonly namespaceName: pulumi.Output<string>;
    /**
     * A value that specifies whether the workgroup can be accessed from a public network.
     */
    readonly publiclyAccessible: pulumi.Output<boolean | undefined>;
    /**
     * An array of security group IDs to associate with the workgroup.
     */
    readonly securityGroupIds: pulumi.Output<string[]>;
    /**
     * An array of VPC subnet IDs to associate with the workgroup.
     */
    readonly subnetIds: pulumi.Output<string[]>;
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    readonly tagsAll: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * The Redshift Workgroup ID.
     */
    readonly workgroupId: pulumi.Output<string>;
    /**
     * The name of the workgroup.
     */
    readonly workgroupName: pulumi.Output<string>;
    /**
     * Create a Workgroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkgroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Workgroup resources.
 */
export interface WorkgroupState {
    /**
     * Amazon Resource Name (ARN) of the Redshift Serverless Workgroup.
     */
    arn?: pulumi.Input<string>;
    /**
     * The base data warehouse capacity of the workgroup in Redshift Processing Units (RPUs).
     */
    baseCapacity?: pulumi.Input<number>;
    /**
     * An array of parameters to set for more control over a serverless database. See `Config Parameter` below.
     */
    configParameters?: pulumi.Input<pulumi.Input<inputs.redshiftserverless.WorkgroupConfigParameter>[]>;
    /**
     * The endpoint that is created from the workgroup. See `Endpoint` below.
     */
    endpoints?: pulumi.Input<pulumi.Input<inputs.redshiftserverless.WorkgroupEndpoint>[]>;
    /**
     * The value that specifies whether to turn on enhanced virtual private cloud (VPC) routing, which forces Amazon Redshift Serverless to route traffic through your VPC instead of over the internet.
     */
    enhancedVpcRouting?: pulumi.Input<boolean>;
    namespaceName?: pulumi.Input<string>;
    /**
     * A value that specifies whether the workgroup can be accessed from a public network.
     */
    publiclyAccessible?: pulumi.Input<boolean>;
    /**
     * An array of security group IDs to associate with the workgroup.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An array of VPC subnet IDs to associate with the workgroup.
     */
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The Redshift Workgroup ID.
     */
    workgroupId?: pulumi.Input<string>;
    /**
     * The name of the workgroup.
     */
    workgroupName?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Workgroup resource.
 */
export interface WorkgroupArgs {
    /**
     * The base data warehouse capacity of the workgroup in Redshift Processing Units (RPUs).
     */
    baseCapacity?: pulumi.Input<number>;
    /**
     * An array of parameters to set for more control over a serverless database. See `Config Parameter` below.
     */
    configParameters?: pulumi.Input<pulumi.Input<inputs.redshiftserverless.WorkgroupConfigParameter>[]>;
    /**
     * The value that specifies whether to turn on enhanced virtual private cloud (VPC) routing, which forces Amazon Redshift Serverless to route traffic through your VPC instead of over the internet.
     */
    enhancedVpcRouting?: pulumi.Input<boolean>;
    namespaceName: pulumi.Input<string>;
    /**
     * A value that specifies whether the workgroup can be accessed from a public network.
     */
    publiclyAccessible?: pulumi.Input<boolean>;
    /**
     * An array of security group IDs to associate with the workgroup.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An array of VPC subnet IDs to associate with the workgroup.
     */
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The name of the workgroup.
     */
    workgroupName: pulumi.Input<string>;
}
