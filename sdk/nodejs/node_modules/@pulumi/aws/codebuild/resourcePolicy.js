"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResourcePolicy = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a CodeBuild Resource Policy Resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleReportGroup = new aws.codebuild.ReportGroup("exampleReportGroup", {
 *     type: "TEST",
 *     exportConfig: {
 *         type: "NO_EXPORT",
 *     },
 * });
 * const currentPartition = aws.getPartition({});
 * const currentCallerIdentity = aws.getCallerIdentity({});
 * const exampleResourcePolicy = new aws.codebuild.ResourcePolicy("exampleResourcePolicy", {
 *     resourceArn: exampleReportGroup.arn,
 *     policy: pulumi.all([currentPartition, currentCallerIdentity, exampleReportGroup.arn]).apply(([currentPartition, currentCallerIdentity, arn]) => JSON.stringify({
 *         Version: "2012-10-17",
 *         Id: "default",
 *         Statement: [{
 *             Sid: "default",
 *             Effect: "Allow",
 *             Principal: {
 *                 AWS: `arn:${currentPartition.partition}:iam::${currentCallerIdentity.accountId}:root`,
 *             },
 *             Action: [
 *                 "codebuild:BatchGetReportGroups",
 *                 "codebuild:BatchGetReports",
 *                 "codebuild:ListReportsForReportGroup",
 *                 "codebuild:DescribeTestCases",
 *             ],
 *             Resource: arn,
 *         }],
 *     })),
 * });
 * ```
 *
 * ## Import
 *
 * CodeBuild Resource Policy can be imported using the CodeBuild Resource Policy arn, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:codebuild/resourcePolicy:ResourcePolicy example arn:aws:codebuild:us-west-2:123456789:report-group/report-group-name
 * ```
 */
class ResourcePolicy extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["policy"] = state ? state.policy : undefined;
            resourceInputs["resourceArn"] = state ? state.resourceArn : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.policy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policy'");
            }
            if ((!args || args.resourceArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceArn'");
            }
            resourceInputs["policy"] = args ? args.policy : undefined;
            resourceInputs["resourceArn"] = args ? args.resourceArn : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ResourcePolicy.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing ResourcePolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ResourcePolicy(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ResourcePolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResourcePolicy.__pulumiType;
    }
}
exports.ResourcePolicy = ResourcePolicy;
/** @internal */
ResourcePolicy.__pulumiType = 'aws:codebuild/resourcePolicy:ResourcePolicy';
//# sourceMappingURL=resourcePolicy.js.map