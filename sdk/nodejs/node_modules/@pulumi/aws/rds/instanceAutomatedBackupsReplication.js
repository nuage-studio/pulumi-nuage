"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.InstanceAutomatedBackupsReplication = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manage cross-region replication of automated backups to a different AWS Region. Documentation for cross-region automated backup replication can be found at:
 *
 * * [Replicating automated backups to another AWS Region](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReplicateBackups.html)
 *
 * > **Note:** This resource has to be created in the destination region.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const defaultInstanceAutomatedBackupsReplication = new aws.rds.InstanceAutomatedBackupsReplication("default", {
 *     retentionPeriod: 14,
 *     sourceDbInstanceArn: "arn:aws:rds:us-west-2:123456789012:db:mydatabase",
 * });
 * ```
 * ## Encrypting the automated backup with KMS
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const defaultInstanceAutomatedBackupsReplication = new aws.rds.InstanceAutomatedBackupsReplication("default", {
 *     kmsKeyId: "arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012",
 *     sourceDbInstanceArn: "arn:aws:rds:us-west-2:123456789012:db:mydatabase",
 * });
 * ```
 *
 * ## Example including a RDS DB instance
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const replica = new aws.Provider("replica", {region: "us-west-2"});
 * const defaultInstance = new aws.rds.Instance("defaultInstance", {
 *     allocatedStorage: 10,
 *     identifier: "mydb",
 *     engine: "postgres",
 *     engineVersion: "13.4",
 *     instanceClass: "db.t3.micro",
 *     name: "mydb",
 *     username: "masterusername",
 *     password: "mustbeeightcharacters",
 *     backupRetentionPeriod: 7,
 *     storageEncrypted: true,
 *     skipFinalSnapshot: true,
 * });
 * const defaultKey = new aws.kms.Key("defaultKey", {description: "Encryption key for automated backups"}, {
 *     provider: "aws.replica",
 * });
 * const defaultInstanceAutomatedBackupsReplication = new aws.rds.InstanceAutomatedBackupsReplication("defaultInstanceAutomatedBackupsReplication", {
 *     sourceDbInstanceArn: defaultInstance.arn,
 *     kmsKeyId: defaultKey.arn,
 * }, {
 *     provider: "aws.replica",
 * });
 * ```
 *
 * ## Import
 *
 * RDS instance automated backups replication can be imported using the `arn`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:rds/instanceAutomatedBackupsReplication:InstanceAutomatedBackupsReplication default arn:aws:rds:us-east-1:123456789012:auto-backup:ab-faaa2mgdj1vmp4xflr7yhsrmtbtob7ltrzzz2my
 * ```
 */
class InstanceAutomatedBackupsReplication extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            resourceInputs["preSignedUrl"] = state ? state.preSignedUrl : undefined;
            resourceInputs["retentionPeriod"] = state ? state.retentionPeriod : undefined;
            resourceInputs["sourceDbInstanceArn"] = state ? state.sourceDbInstanceArn : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.sourceDbInstanceArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceDbInstanceArn'");
            }
            resourceInputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            resourceInputs["preSignedUrl"] = args ? args.preSignedUrl : undefined;
            resourceInputs["retentionPeriod"] = args ? args.retentionPeriod : undefined;
            resourceInputs["sourceDbInstanceArn"] = args ? args.sourceDbInstanceArn : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InstanceAutomatedBackupsReplication.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing InstanceAutomatedBackupsReplication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new InstanceAutomatedBackupsReplication(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of InstanceAutomatedBackupsReplication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InstanceAutomatedBackupsReplication.__pulumiType;
    }
}
exports.InstanceAutomatedBackupsReplication = InstanceAutomatedBackupsReplication;
/** @internal */
InstanceAutomatedBackupsReplication.__pulumiType = 'aws:rds/instanceAutomatedBackupsReplication:InstanceAutomatedBackupsReplication';
//# sourceMappingURL=instanceAutomatedBackupsReplication.js.map