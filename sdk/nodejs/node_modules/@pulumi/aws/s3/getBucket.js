"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getBucketOutput = exports.getBucket = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides details about a specific S3 bucket.
 *
 * This resource may prove useful when setting up a Route53 record, or an origin for a CloudFront
 * Distribution.
 *
 * ## Example Usage
 * ### Route53 Record
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const selected = aws.s3.getBucket({
 *     bucket: "bucket.test.com",
 * });
 * const testZone = aws.route53.getZone({
 *     name: "test.com.",
 * });
 * const example = new aws.route53.Record("example", {
 *     zoneId: testZone.then(testZone => testZone.id),
 *     name: "bucket",
 *     type: "A",
 *     aliases: [{
 *         name: selected.then(selected => selected.websiteDomain),
 *         zoneId: selected.then(selected => selected.hostedZoneId),
 *     }],
 * });
 * ```
 * ### CloudFront Origin
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const selected = aws.s3.getBucket({
 *     bucket: "a-test-bucket",
 * });
 * const test = new aws.cloudfront.Distribution("test", {origins: [{
 *     domainName: selected.then(selected => selected.bucketDomainName),
 *     originId: "s3-selected-bucket",
 * }]});
 * ```
 */
function getBucket(args, opts) {
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:s3/getBucket:getBucket", {
        "bucket": args.bucket,
    }, opts);
}
exports.getBucket = getBucket;
function getBucketOutput(args, opts) {
    return pulumi.output(args).apply(a => getBucket(a, opts));
}
exports.getBucketOutput = getBucketOutput;
//# sourceMappingURL=getBucket.js.map