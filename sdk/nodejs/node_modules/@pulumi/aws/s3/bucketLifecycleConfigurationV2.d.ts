import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * ## Import
 *
 * S3 bucket lifecycle configuration can be imported in one of two ways. If the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider, the S3 bucket lifecycle configuration resource should be imported using the `bucket` e.g.,
 *
 * ```sh
 *  $ pulumi import aws:s3/bucketLifecycleConfigurationV2:BucketLifecycleConfigurationV2 example bucket-name
 * ```
 *
 *  If the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider, the S3 bucket lifecycle configuration resource should be imported using the `bucket` and `expected_bucket_owner` separated by a comma (`,`) e.g.,
 *
 * ```sh
 *  $ pulumi import aws:s3/bucketLifecycleConfigurationV2:BucketLifecycleConfigurationV2 example bucket-name,123456789012
 * ```
 */
export declare class BucketLifecycleConfigurationV2 extends pulumi.CustomResource {
    /**
     * Get an existing BucketLifecycleConfigurationV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BucketLifecycleConfigurationV2State, opts?: pulumi.CustomResourceOptions): BucketLifecycleConfigurationV2;
    /**
     * Returns true if the given object is an instance of BucketLifecycleConfigurationV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is BucketLifecycleConfigurationV2;
    /**
     * The name of the source S3 bucket you want Amazon S3 to monitor.
     */
    readonly bucket: pulumi.Output<string>;
    /**
     * The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
     */
    readonly expectedBucketOwner: pulumi.Output<string | undefined>;
    /**
     * List of configuration blocks describing the rules managing the replication documented below.
     */
    readonly rules: pulumi.Output<outputs.s3.BucketLifecycleConfigurationV2Rule[]>;
    /**
     * Create a BucketLifecycleConfigurationV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BucketLifecycleConfigurationV2Args, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering BucketLifecycleConfigurationV2 resources.
 */
export interface BucketLifecycleConfigurationV2State {
    /**
     * The name of the source S3 bucket you want Amazon S3 to monitor.
     */
    bucket?: pulumi.Input<string>;
    /**
     * The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
     */
    expectedBucketOwner?: pulumi.Input<string>;
    /**
     * List of configuration blocks describing the rules managing the replication documented below.
     */
    rules?: pulumi.Input<pulumi.Input<inputs.s3.BucketLifecycleConfigurationV2Rule>[]>;
}
/**
 * The set of arguments for constructing a BucketLifecycleConfigurationV2 resource.
 */
export interface BucketLifecycleConfigurationV2Args {
    /**
     * The name of the source S3 bucket you want Amazon S3 to monitor.
     */
    bucket: pulumi.Input<string>;
    /**
     * The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
     */
    expectedBucketOwner?: pulumi.Input<string>;
    /**
     * List of configuration blocks describing the rules managing the replication documented below.
     */
    rules: pulumi.Input<pulumi.Input<inputs.s3.BucketLifecycleConfigurationV2Rule>[]>;
}
