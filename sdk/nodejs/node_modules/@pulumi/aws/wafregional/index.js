"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.XssMatchSet = exports.WebAclAssociation = exports.WebAcl = exports.SqlInjectionMatchSet = exports.SizeConstraintSet = exports.RuleGroup = exports.Rule = exports.RegexPatternSet = exports.RegexMatchSet = exports.RateBasedRule = exports.IpSet = exports.getWebAclOutput = exports.getWebAcl = exports.getSubscribedRuleGroupOutput = exports.getSubscribedRuleGroup = exports.getRuleOutput = exports.getRule = exports.getRateBasedModOutput = exports.getRateBasedMod = exports.getIpsetOutput = exports.getIpset = exports.GeoMatchSet = exports.ByteMatchSet = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.ByteMatchSet = null;
exports.GeoMatchSet = null;
exports.getIpset = null;
exports.getIpsetOutput = null;
exports.getRateBasedMod = null;
exports.getRateBasedModOutput = null;
exports.getRule = null;
exports.getRuleOutput = null;
exports.getSubscribedRuleGroup = null;
exports.getSubscribedRuleGroupOutput = null;
exports.getWebAcl = null;
exports.getWebAclOutput = null;
exports.IpSet = null;
exports.RateBasedRule = null;
exports.RegexMatchSet = null;
exports.RegexPatternSet = null;
exports.Rule = null;
exports.RuleGroup = null;
exports.SizeConstraintSet = null;
exports.SqlInjectionMatchSet = null;
exports.WebAcl = null;
exports.WebAclAssociation = null;
exports.XssMatchSet = null;
utilities.lazyLoad(exports, ["ByteMatchSet"], () => require("./byteMatchSet"));
utilities.lazyLoad(exports, ["GeoMatchSet"], () => require("./geoMatchSet"));
utilities.lazyLoad(exports, ["getIpset", "getIpsetOutput"], () => require("./getIpset"));
utilities.lazyLoad(exports, ["getRateBasedMod", "getRateBasedModOutput"], () => require("./getRateBasedMod"));
utilities.lazyLoad(exports, ["getRule", "getRuleOutput"], () => require("./getRule"));
utilities.lazyLoad(exports, ["getSubscribedRuleGroup", "getSubscribedRuleGroupOutput"], () => require("./getSubscribedRuleGroup"));
utilities.lazyLoad(exports, ["getWebAcl", "getWebAclOutput"], () => require("./getWebAcl"));
utilities.lazyLoad(exports, ["IpSet"], () => require("./ipSet"));
utilities.lazyLoad(exports, ["RateBasedRule"], () => require("./rateBasedRule"));
utilities.lazyLoad(exports, ["RegexMatchSet"], () => require("./regexMatchSet"));
utilities.lazyLoad(exports, ["RegexPatternSet"], () => require("./regexPatternSet"));
utilities.lazyLoad(exports, ["Rule"], () => require("./rule"));
utilities.lazyLoad(exports, ["RuleGroup"], () => require("./ruleGroup"));
utilities.lazyLoad(exports, ["SizeConstraintSet"], () => require("./sizeConstraintSet"));
utilities.lazyLoad(exports, ["SqlInjectionMatchSet"], () => require("./sqlInjectionMatchSet"));
utilities.lazyLoad(exports, ["WebAcl"], () => require("./webAcl"));
utilities.lazyLoad(exports, ["WebAclAssociation"], () => require("./webAclAssociation"));
utilities.lazyLoad(exports, ["XssMatchSet"], () => require("./xssMatchSet"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:wafregional/byteMatchSet:ByteMatchSet":
                return new exports.ByteMatchSet(name, undefined, { urn });
            case "aws:wafregional/geoMatchSet:GeoMatchSet":
                return new exports.GeoMatchSet(name, undefined, { urn });
            case "aws:wafregional/ipSet:IpSet":
                return new exports.IpSet(name, undefined, { urn });
            case "aws:wafregional/rateBasedRule:RateBasedRule":
                return new exports.RateBasedRule(name, undefined, { urn });
            case "aws:wafregional/regexMatchSet:RegexMatchSet":
                return new exports.RegexMatchSet(name, undefined, { urn });
            case "aws:wafregional/regexPatternSet:RegexPatternSet":
                return new exports.RegexPatternSet(name, undefined, { urn });
            case "aws:wafregional/rule:Rule":
                return new exports.Rule(name, undefined, { urn });
            case "aws:wafregional/ruleGroup:RuleGroup":
                return new exports.RuleGroup(name, undefined, { urn });
            case "aws:wafregional/sizeConstraintSet:SizeConstraintSet":
                return new exports.SizeConstraintSet(name, undefined, { urn });
            case "aws:wafregional/sqlInjectionMatchSet:SqlInjectionMatchSet":
                return new exports.SqlInjectionMatchSet(name, undefined, { urn });
            case "aws:wafregional/webAcl:WebAcl":
                return new exports.WebAcl(name, undefined, { urn });
            case "aws:wafregional/webAclAssociation:WebAclAssociation":
                return new exports.WebAclAssociation(name, undefined, { urn });
            case "aws:wafregional/xssMatchSet:XssMatchSet":
                return new exports.XssMatchSet(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "wafregional/byteMatchSet", _module);
pulumi.runtime.registerResourceModule("aws", "wafregional/geoMatchSet", _module);
pulumi.runtime.registerResourceModule("aws", "wafregional/ipSet", _module);
pulumi.runtime.registerResourceModule("aws", "wafregional/rateBasedRule", _module);
pulumi.runtime.registerResourceModule("aws", "wafregional/regexMatchSet", _module);
pulumi.runtime.registerResourceModule("aws", "wafregional/regexPatternSet", _module);
pulumi.runtime.registerResourceModule("aws", "wafregional/rule", _module);
pulumi.runtime.registerResourceModule("aws", "wafregional/ruleGroup", _module);
pulumi.runtime.registerResourceModule("aws", "wafregional/sizeConstraintSet", _module);
pulumi.runtime.registerResourceModule("aws", "wafregional/sqlInjectionMatchSet", _module);
pulumi.runtime.registerResourceModule("aws", "wafregional/webAcl", _module);
pulumi.runtime.registerResourceModule("aws", "wafregional/webAclAssociation", _module);
pulumi.runtime.registerResourceModule("aws", "wafregional/xssMatchSet", _module);
//# sourceMappingURL=index.js.map