"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.IndexingConfiguration = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Managing [IoT Thing indexing](https://docs.aws.amazon.com/iot/latest/developerguide/managing-index.html).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.iot.IndexingConfiguration("example", {
 *     thingIndexingConfiguration: {
 *         customFields: [
 *             {
 *                 name: "shadow.desired.power",
 *                 type: "Boolean",
 *             },
 *             {
 *                 name: "attributes.version",
 *                 type: "Number",
 *             },
 *             {
 *                 name: "shadow.name.thing1shadow.desired.DefaultDesired",
 *                 type: "String",
 *             },
 *             {
 *                 name: "deviceDefender.securityProfile1.NUMBER_VALUE_BEHAVIOR.lastViolationValue.number",
 *                 type: "Number",
 *             },
 *         ],
 *         deviceDefenderIndexingMode: "VIOLATIONS",
 *         namedShadowIndexingMode: "ON",
 *         thingConnectivityIndexingMode: "STATUS",
 *         thingIndexingMode: "REGISTRY_AND_SHADOW",
 *     },
 * });
 * ```
 */
class IndexingConfiguration extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["thingGroupIndexingConfiguration"] = state ? state.thingGroupIndexingConfiguration : undefined;
            resourceInputs["thingIndexingConfiguration"] = state ? state.thingIndexingConfiguration : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["thingGroupIndexingConfiguration"] = args ? args.thingGroupIndexingConfiguration : undefined;
            resourceInputs["thingIndexingConfiguration"] = args ? args.thingIndexingConfiguration : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IndexingConfiguration.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing IndexingConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new IndexingConfiguration(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of IndexingConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IndexingConfiguration.__pulumiType;
    }
}
exports.IndexingConfiguration = IndexingConfiguration;
/** @internal */
IndexingConfiguration.__pulumiType = 'aws:iot/indexingConfiguration:IndexingConfiguration';
//# sourceMappingURL=indexingConfiguration.js.map