import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a Lambda Layer Version Permission resource. It allows you to share you own Lambda Layers to another account by account ID, to all accounts in AWS organization or even to all AWS accounts.
 *
 * For information about Lambda Layer Permissions and how to use them, see [Using Resource-based Policies for AWS Lambda][1]
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const lambdaLayerPermission = new aws.lambda.LayerVersionPermission("lambda_layer_permission", {
 *     action: "lambda:GetLayerVersion",
 *     layerName: "arn:aws:lambda:us-west-2:123456654321:layer:test_layer1",
 *     principal: "111111111111",
 *     statementId: "dev-account",
 *     versionNumber: 1,
 * });
 * ```
 *
 * ## Import
 *
 * Lambda Layer Permissions can be imported using `layer_name` and `version_number`, separated by a comma (`,`).
 *
 * ```sh
 *  $ pulumi import aws:lambda/layerVersionPermission:LayerVersionPermission example arn:aws:lambda:us-west-2:123456654321:layer:test_layer1,1
 * ```
 *
 *  [1]https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html#permissions-resource-xaccountlayer
 */
export declare class LayerVersionPermission extends pulumi.CustomResource {
    /**
     * Get an existing LayerVersionPermission resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LayerVersionPermissionState, opts?: pulumi.CustomResourceOptions): LayerVersionPermission;
    /**
     * Returns true if the given object is an instance of LayerVersionPermission.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is LayerVersionPermission;
    /**
     * Action, which will be allowed. `lambda:GetLayerVersion` value is suggested by AWS documantation.
     */
    readonly action: pulumi.Output<string>;
    /**
     * The name or ARN of the Lambda Layer, which you want to grant access to.
     */
    readonly layerName: pulumi.Output<string>;
    /**
     * An identifier of AWS Organization, which should be able to use your Lambda Layer. `principal` should be equal to `*` if `organizationId` provided.
     */
    readonly organizationId: pulumi.Output<string | undefined>;
    /**
     * Full Lambda Layer Permission policy.
     */
    readonly policy: pulumi.Output<string>;
    /**
     * AWS account ID which should be able to use your Lambda Layer. `*` can be used here, if you want to share your Lambda Layer widely.
     */
    readonly principal: pulumi.Output<string>;
    /**
     * A unique identifier for the current revision of the policy.
     */
    readonly revisionId: pulumi.Output<string>;
    /**
     * The name of Lambda Layer Permission, for example `dev-account` - human readable note about what is this permission for.
     */
    readonly statementId: pulumi.Output<string>;
    /**
     * Version of Lambda Layer, which you want to grant access to. Note: permissions only apply to a single version of a layer.
     */
    readonly versionNumber: pulumi.Output<number>;
    /**
     * Create a LayerVersionPermission resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LayerVersionPermissionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering LayerVersionPermission resources.
 */
export interface LayerVersionPermissionState {
    /**
     * Action, which will be allowed. `lambda:GetLayerVersion` value is suggested by AWS documantation.
     */
    action?: pulumi.Input<string>;
    /**
     * The name or ARN of the Lambda Layer, which you want to grant access to.
     */
    layerName?: pulumi.Input<string>;
    /**
     * An identifier of AWS Organization, which should be able to use your Lambda Layer. `principal` should be equal to `*` if `organizationId` provided.
     */
    organizationId?: pulumi.Input<string>;
    /**
     * Full Lambda Layer Permission policy.
     */
    policy?: pulumi.Input<string>;
    /**
     * AWS account ID which should be able to use your Lambda Layer. `*` can be used here, if you want to share your Lambda Layer widely.
     */
    principal?: pulumi.Input<string>;
    /**
     * A unique identifier for the current revision of the policy.
     */
    revisionId?: pulumi.Input<string>;
    /**
     * The name of Lambda Layer Permission, for example `dev-account` - human readable note about what is this permission for.
     */
    statementId?: pulumi.Input<string>;
    /**
     * Version of Lambda Layer, which you want to grant access to. Note: permissions only apply to a single version of a layer.
     */
    versionNumber?: pulumi.Input<number>;
}
/**
 * The set of arguments for constructing a LayerVersionPermission resource.
 */
export interface LayerVersionPermissionArgs {
    /**
     * Action, which will be allowed. `lambda:GetLayerVersion` value is suggested by AWS documantation.
     */
    action: pulumi.Input<string>;
    /**
     * The name or ARN of the Lambda Layer, which you want to grant access to.
     */
    layerName: pulumi.Input<string>;
    /**
     * An identifier of AWS Organization, which should be able to use your Lambda Layer. `principal` should be equal to `*` if `organizationId` provided.
     */
    organizationId?: pulumi.Input<string>;
    /**
     * AWS account ID which should be able to use your Lambda Layer. `*` can be used here, if you want to share your Lambda Layer widely.
     */
    principal: pulumi.Input<string>;
    /**
     * The name of Lambda Layer Permission, for example `dev-account` - human readable note about what is this permission for.
     */
    statementId: pulumi.Input<string>;
    /**
     * Version of Lambda Layer, which you want to grant access to. Note: permissions only apply to a single version of a layer.
     */
    versionNumber: pulumi.Input<number>;
}
