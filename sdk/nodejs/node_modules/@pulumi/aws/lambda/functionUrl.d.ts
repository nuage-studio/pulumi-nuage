import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Provides a Lambda function URL resource. A function URL is a dedicated HTTP(S) endpoint for a Lambda function.
 *
 * See the [AWS Lambda documentation](https://docs.aws.amazon.com/lambda/latest/dg/lambda-urls.html) for more information.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const testLatest = new aws.lambda.FunctionUrl("testLatest", {
 *     functionName: aws_lambda_function.test.function_name,
 *     authorizationType: "NONE",
 * });
 * const testLive = new aws.lambda.FunctionUrl("testLive", {
 *     functionName: aws_lambda_function.test.function_name,
 *     qualifier: "my_alias",
 *     authorizationType: "AWS_IAM",
 *     cors: {
 *         allowCredentials: true,
 *         allowOrigins: ["*"],
 *         allowMethods: ["*"],
 *         allowHeaders: [
 *             "date",
 *             "keep-alive",
 *         ],
 *         exposeHeaders: [
 *             "keep-alive",
 *             "date",
 *         ],
 *         maxAge: 86400,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Lambda function URLs can be imported using the `function_name` or `function_name/qualifier`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:lambda/functionUrl:FunctionUrl test_lambda_url my_test_lambda_function
 * ```
 */
export declare class FunctionUrl extends pulumi.CustomResource {
    /**
     * Get an existing FunctionUrl resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FunctionUrlState, opts?: pulumi.CustomResourceOptions): FunctionUrl;
    /**
     * Returns true if the given object is an instance of FunctionUrl.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is FunctionUrl;
    /**
     * The type of authentication that the function URL uses. Set to `"AWS_IAM"` to restrict access to authenticated IAM users only. Set to `"NONE"` to bypass IAM authentication and create a public endpoint. See the [AWS documentation](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html) for more details.
     */
    readonly authorizationType: pulumi.Output<string>;
    /**
     * The [cross-origin resource sharing (CORS)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) settings for the function URL. Documented below.
     */
    readonly cors: pulumi.Output<outputs.lambda.FunctionUrlCors | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the function.
     */
    readonly functionArn: pulumi.Output<string>;
    /**
     * The name (or ARN) of the Lambda function.
     */
    readonly functionName: pulumi.Output<string>;
    /**
     * The HTTP URL endpoint for the function in the format `https://<url_id>.lambda-url.<region>.on.aws`.
     */
    readonly functionUrl: pulumi.Output<string>;
    /**
     * The alias name or `"$LATEST"`.
     */
    readonly qualifier: pulumi.Output<string | undefined>;
    /**
     * A generated ID for the endpoint.
     */
    readonly urlId: pulumi.Output<string>;
    /**
     * Create a FunctionUrl resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FunctionUrlArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering FunctionUrl resources.
 */
export interface FunctionUrlState {
    /**
     * The type of authentication that the function URL uses. Set to `"AWS_IAM"` to restrict access to authenticated IAM users only. Set to `"NONE"` to bypass IAM authentication and create a public endpoint. See the [AWS documentation](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html) for more details.
     */
    authorizationType?: pulumi.Input<string>;
    /**
     * The [cross-origin resource sharing (CORS)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) settings for the function URL. Documented below.
     */
    cors?: pulumi.Input<inputs.lambda.FunctionUrlCors>;
    /**
     * The Amazon Resource Name (ARN) of the function.
     */
    functionArn?: pulumi.Input<string>;
    /**
     * The name (or ARN) of the Lambda function.
     */
    functionName?: pulumi.Input<string>;
    /**
     * The HTTP URL endpoint for the function in the format `https://<url_id>.lambda-url.<region>.on.aws`.
     */
    functionUrl?: pulumi.Input<string>;
    /**
     * The alias name or `"$LATEST"`.
     */
    qualifier?: pulumi.Input<string>;
    /**
     * A generated ID for the endpoint.
     */
    urlId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a FunctionUrl resource.
 */
export interface FunctionUrlArgs {
    /**
     * The type of authentication that the function URL uses. Set to `"AWS_IAM"` to restrict access to authenticated IAM users only. Set to `"NONE"` to bypass IAM authentication and create a public endpoint. See the [AWS documentation](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html) for more details.
     */
    authorizationType: pulumi.Input<string>;
    /**
     * The [cross-origin resource sharing (CORS)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) settings for the function URL. Documented below.
     */
    cors?: pulumi.Input<inputs.lambda.FunctionUrlCors>;
    /**
     * The name (or ARN) of the Lambda function.
     */
    functionName: pulumi.Input<string>;
    /**
     * The alias name or `"$LATEST"`.
     */
    qualifier?: pulumi.Input<string>;
}
