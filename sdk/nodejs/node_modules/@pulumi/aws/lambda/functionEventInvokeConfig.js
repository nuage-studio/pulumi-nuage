"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.FunctionEventInvokeConfig = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages an asynchronous invocation configuration for a Lambda Function or Alias. More information about asynchronous invocations and the configurable values can be found in the [Lambda Developer Guide](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html).
 *
 * ## Example Usage
 * ### Destination Configuration
 *
 * > **NOTE:** Ensure the Lambda Function IAM Role has necessary permissions for the destination, such as `sqs:SendMessage` or `sns:Publish`, otherwise the API will return a generic `InvalidParameterValueException: The destination ARN arn:PARTITION:SERVICE:REGION:ACCOUNT:RESOURCE is invalid.` error.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.lambda.FunctionEventInvokeConfig("example", {
 *     functionName: aws_lambda_alias.example.function_name,
 *     destinationConfig: {
 *         onFailure: {
 *             destination: aws_sqs_queue.example.arn,
 *         },
 *         onSuccess: {
 *             destination: aws_sns_topic.example.arn,
 *         },
 *     },
 * });
 * ```
 * ### Error Handling Configuration
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.lambda.FunctionEventInvokeConfig("example", {
 *     functionName: aws_lambda_alias.example.function_name,
 *     maximumEventAgeInSeconds: 60,
 *     maximumRetryAttempts: 0,
 * });
 * ```
 * ### Configuration for Alias Name
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.lambda.FunctionEventInvokeConfig("example", {
 *     functionName: aws_lambda_alias.example.function_name,
 *     qualifier: aws_lambda_alias.example.name,
 * });
 * // ... other configuration ...
 * ```
 * ### Configuration for Function Latest Unpublished Version
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.lambda.FunctionEventInvokeConfig("example", {
 *     functionName: aws_lambda_function.example.function_name,
 *     qualifier: `$LATEST`,
 * });
 * // ... other configuration ...
 * ```
 * ### Configuration for Function Published Version
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.lambda.FunctionEventInvokeConfig("example", {
 *     functionName: aws_lambda_function.example.function_name,
 *     qualifier: aws_lambda_function.example.version,
 * });
 * // ... other configuration ...
 * ```
 *
 * ## Import
 *
 * Lambda Function Event Invoke Configs can be imported using the fully qualified Function name or Amazon Resource Name (ARN), e.g., ARN without qualifier (all versions and aliases)
 *
 * ```sh
 *  $ pulumi import aws:lambda/functionEventInvokeConfig:FunctionEventInvokeConfig example arn:aws:us-east-1:123456789012:function:my_function
 * ```
 *
 *  ARN with qualifier
 *
 * ```sh
 *  $ pulumi import aws:lambda/functionEventInvokeConfig:FunctionEventInvokeConfig example arn:aws:us-east-1:123456789012:function:my_function:production
 * ```
 *
 *  Name without qualifier (all versions and aliases)
 *
 * ```sh
 *  $ pulumi import aws:lambda/functionEventInvokeConfig:FunctionEventInvokeConfig example my_function
 * ```
 *
 *  Name with qualifier
 *
 * ```sh
 *  $ pulumi import aws:lambda/functionEventInvokeConfig:FunctionEventInvokeConfig example my_function:production
 * ```
 */
class FunctionEventInvokeConfig extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["destinationConfig"] = state ? state.destinationConfig : undefined;
            resourceInputs["functionName"] = state ? state.functionName : undefined;
            resourceInputs["maximumEventAgeInSeconds"] = state ? state.maximumEventAgeInSeconds : undefined;
            resourceInputs["maximumRetryAttempts"] = state ? state.maximumRetryAttempts : undefined;
            resourceInputs["qualifier"] = state ? state.qualifier : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.functionName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'functionName'");
            }
            resourceInputs["destinationConfig"] = args ? args.destinationConfig : undefined;
            resourceInputs["functionName"] = args ? args.functionName : undefined;
            resourceInputs["maximumEventAgeInSeconds"] = args ? args.maximumEventAgeInSeconds : undefined;
            resourceInputs["maximumRetryAttempts"] = args ? args.maximumRetryAttempts : undefined;
            resourceInputs["qualifier"] = args ? args.qualifier : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FunctionEventInvokeConfig.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing FunctionEventInvokeConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new FunctionEventInvokeConfig(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of FunctionEventInvokeConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FunctionEventInvokeConfig.__pulumiType;
    }
}
exports.FunctionEventInvokeConfig = FunctionEventInvokeConfig;
/** @internal */
FunctionEventInvokeConfig.__pulumiType = 'aws:lambda/functionEventInvokeConfig:FunctionEventInvokeConfig';
//# sourceMappingURL=functionEventInvokeConfig.js.map