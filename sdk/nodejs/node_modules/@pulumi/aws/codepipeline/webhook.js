"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Webhook = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a CodePipeline Webhook.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * import * as github from "@pulumi/github";
 *
 * const barPipeline = new aws.codepipeline.Pipeline("barPipeline", {
 *     roleArn: aws_iam_role.bar.arn,
 *     artifactStores: [{
 *         location: aws_s3_bucket.bar.bucket,
 *         type: "S3",
 *         encryptionKey: {
 *             id: data.aws_kms_alias.s3kmskey.arn,
 *             type: "KMS",
 *         },
 *     }],
 *     stages: [
 *         {
 *             name: "Source",
 *             actions: [{
 *                 name: "Source",
 *                 category: "Source",
 *                 owner: "ThirdParty",
 *                 provider: "GitHub",
 *                 version: "1",
 *                 outputArtifacts: ["test"],
 *                 configuration: {
 *                     Owner: "my-organization",
 *                     Repo: "test",
 *                     Branch: "master",
 *                 },
 *             }],
 *         },
 *         {
 *             name: "Build",
 *             actions: [{
 *                 name: "Build",
 *                 category: "Build",
 *                 owner: "AWS",
 *                 provider: "CodeBuild",
 *                 inputArtifacts: ["test"],
 *                 version: "1",
 *                 configuration: {
 *                     ProjectName: "test",
 *                 },
 *             }],
 *         },
 *     ],
 * });
 * const webhookSecret = "super-secret";
 * const barWebhook = new aws.codepipeline.Webhook("barWebhook", {
 *     authentication: "GITHUB_HMAC",
 *     targetAction: "Source",
 *     targetPipeline: barPipeline.name,
 *     authenticationConfiguration: {
 *         secretToken: webhookSecret,
 *     },
 *     filters: [{
 *         jsonPath: `$.ref`,
 *         matchEquals: "refs/heads/{Branch}",
 *     }],
 * });
 * // Wire the CodePipeline webhook into a GitHub repository.
 * const barRepositoryWebhook = new github.RepositoryWebhook("barRepositoryWebhook", {
 *     repository: github_repository.repo.name,
 *     configuration: {
 *         url: barWebhook.url,
 *         contentType: "json",
 *         insecureSsl: true,
 *         secret: webhookSecret,
 *     },
 *     events: ["push"],
 * });
 * ```
 *
 * ## Import
 *
 * CodePipeline Webhooks can be imported by their ARN, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:codepipeline/webhook:Webhook example arn:aws:codepipeline:us-west-2:123456789012:webhook:example
 * ```
 */
class Webhook extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["authentication"] = state ? state.authentication : undefined;
            resourceInputs["authenticationConfiguration"] = state ? state.authenticationConfiguration : undefined;
            resourceInputs["filters"] = state ? state.filters : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["targetAction"] = state ? state.targetAction : undefined;
            resourceInputs["targetPipeline"] = state ? state.targetPipeline : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.authentication === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authentication'");
            }
            if ((!args || args.filters === undefined) && !opts.urn) {
                throw new Error("Missing required property 'filters'");
            }
            if ((!args || args.targetAction === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetAction'");
            }
            if ((!args || args.targetPipeline === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetPipeline'");
            }
            resourceInputs["authentication"] = args ? args.authentication : undefined;
            resourceInputs["authenticationConfiguration"] = args ? args.authenticationConfiguration : undefined;
            resourceInputs["filters"] = args ? args.filters : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["targetAction"] = args ? args.targetAction : undefined;
            resourceInputs["targetPipeline"] = args ? args.targetPipeline : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
            resourceInputs["url"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Webhook.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing Webhook resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Webhook(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Webhook.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Webhook.__pulumiType;
    }
}
exports.Webhook = Webhook;
/** @internal */
Webhook.__pulumiType = 'aws:codepipeline/webhook:Webhook';
//# sourceMappingURL=webhook.js.map