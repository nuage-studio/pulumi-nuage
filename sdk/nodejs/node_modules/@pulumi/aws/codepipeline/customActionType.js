"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomActionType = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a CodeDeploy CustomActionType
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.codepipeline.CustomActionType("example", {
 *     category: "Build",
 *     inputArtifactDetails: {
 *         maximumCount: 1,
 *         minimumCount: 0,
 *     },
 *     outputArtifactDetails: {
 *         maximumCount: 1,
 *         minimumCount: 0,
 *     },
 *     providerName: "example",
 *     version: "1",
 * });
 * ```
 *
 * ## Import
 *
 * CodeDeploy CustomActionType can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import aws:codepipeline/customActionType:CustomActionType example Build:terraform:1
 * ```
 */
class CustomActionType extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["category"] = state ? state.category : undefined;
            resourceInputs["configurationProperties"] = state ? state.configurationProperties : undefined;
            resourceInputs["inputArtifactDetails"] = state ? state.inputArtifactDetails : undefined;
            resourceInputs["outputArtifactDetails"] = state ? state.outputArtifactDetails : undefined;
            resourceInputs["owner"] = state ? state.owner : undefined;
            resourceInputs["providerName"] = state ? state.providerName : undefined;
            resourceInputs["settings"] = state ? state.settings : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.category === undefined) && !opts.urn) {
                throw new Error("Missing required property 'category'");
            }
            if ((!args || args.inputArtifactDetails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'inputArtifactDetails'");
            }
            if ((!args || args.outputArtifactDetails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'outputArtifactDetails'");
            }
            if ((!args || args.providerName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'providerName'");
            }
            if ((!args || args.version === undefined) && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            resourceInputs["category"] = args ? args.category : undefined;
            resourceInputs["configurationProperties"] = args ? args.configurationProperties : undefined;
            resourceInputs["inputArtifactDetails"] = args ? args.inputArtifactDetails : undefined;
            resourceInputs["outputArtifactDetails"] = args ? args.outputArtifactDetails : undefined;
            resourceInputs["providerName"] = args ? args.providerName : undefined;
            resourceInputs["settings"] = args ? args.settings : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tagsAll"] = args ? args.tagsAll : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["owner"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomActionType.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing CustomActionType resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new CustomActionType(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of CustomActionType.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomActionType.__pulumiType;
    }
}
exports.CustomActionType = CustomActionType;
/** @internal */
CustomActionType.__pulumiType = 'aws:codepipeline/customActionType:CustomActionType';
//# sourceMappingURL=customActionType.js.map