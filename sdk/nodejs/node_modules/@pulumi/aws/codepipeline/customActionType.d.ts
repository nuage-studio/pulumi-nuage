import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Provides a CodeDeploy CustomActionType
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.codepipeline.CustomActionType("example", {
 *     category: "Build",
 *     inputArtifactDetails: {
 *         maximumCount: 1,
 *         minimumCount: 0,
 *     },
 *     outputArtifactDetails: {
 *         maximumCount: 1,
 *         minimumCount: 0,
 *     },
 *     providerName: "example",
 *     version: "1",
 * });
 * ```
 *
 * ## Import
 *
 * CodeDeploy CustomActionType can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import aws:codepipeline/customActionType:CustomActionType example Build:terraform:1
 * ```
 */
export declare class CustomActionType extends pulumi.CustomResource {
    /**
     * Get an existing CustomActionType resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomActionTypeState, opts?: pulumi.CustomResourceOptions): CustomActionType;
    /**
     * Returns true if the given object is an instance of CustomActionType.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CustomActionType;
    /**
     * The action ARN.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The category of the custom action. Valid values: `Source`, `Build`, `Deploy`, `Test`, `Invoke`, `Approval`
     */
    readonly category: pulumi.Output<string>;
    /**
     * The configuration properties for the custom action. Max 10 items.
     */
    readonly configurationProperties: pulumi.Output<outputs.codepipeline.CustomActionTypeConfigurationProperty[] | undefined>;
    /**
     * The details of the input artifact for the action.
     */
    readonly inputArtifactDetails: pulumi.Output<outputs.codepipeline.CustomActionTypeInputArtifactDetails>;
    /**
     * The details of the output artifact of the action.
     */
    readonly outputArtifactDetails: pulumi.Output<outputs.codepipeline.CustomActionTypeOutputArtifactDetails>;
    /**
     * The creator of the action being called.
     */
    readonly owner: pulumi.Output<string>;
    /**
     * The provider of the service used in the custom action
     */
    readonly providerName: pulumi.Output<string>;
    /**
     * The settings for an action type.
     */
    readonly settings: pulumi.Output<outputs.codepipeline.CustomActionTypeSettings | undefined>;
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    readonly tagsAll: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * The version identifier of the custom action.
     */
    readonly version: pulumi.Output<string>;
    /**
     * Create a CustomActionType resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomActionTypeArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering CustomActionType resources.
 */
export interface CustomActionTypeState {
    /**
     * The action ARN.
     */
    arn?: pulumi.Input<string>;
    /**
     * The category of the custom action. Valid values: `Source`, `Build`, `Deploy`, `Test`, `Invoke`, `Approval`
     */
    category?: pulumi.Input<string>;
    /**
     * The configuration properties for the custom action. Max 10 items.
     */
    configurationProperties?: pulumi.Input<pulumi.Input<inputs.codepipeline.CustomActionTypeConfigurationProperty>[]>;
    /**
     * The details of the input artifact for the action.
     */
    inputArtifactDetails?: pulumi.Input<inputs.codepipeline.CustomActionTypeInputArtifactDetails>;
    /**
     * The details of the output artifact of the action.
     */
    outputArtifactDetails?: pulumi.Input<inputs.codepipeline.CustomActionTypeOutputArtifactDetails>;
    /**
     * The creator of the action being called.
     */
    owner?: pulumi.Input<string>;
    /**
     * The provider of the service used in the custom action
     */
    providerName?: pulumi.Input<string>;
    /**
     * The settings for an action type.
     */
    settings?: pulumi.Input<inputs.codepipeline.CustomActionTypeSettings>;
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    tagsAll?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The version identifier of the custom action.
     */
    version?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a CustomActionType resource.
 */
export interface CustomActionTypeArgs {
    /**
     * The category of the custom action. Valid values: `Source`, `Build`, `Deploy`, `Test`, `Invoke`, `Approval`
     */
    category: pulumi.Input<string>;
    /**
     * The configuration properties for the custom action. Max 10 items.
     */
    configurationProperties?: pulumi.Input<pulumi.Input<inputs.codepipeline.CustomActionTypeConfigurationProperty>[]>;
    /**
     * The details of the input artifact for the action.
     */
    inputArtifactDetails: pulumi.Input<inputs.codepipeline.CustomActionTypeInputArtifactDetails>;
    /**
     * The details of the output artifact of the action.
     */
    outputArtifactDetails: pulumi.Input<inputs.codepipeline.CustomActionTypeOutputArtifactDetails>;
    /**
     * The provider of the service used in the custom action
     */
    providerName: pulumi.Input<string>;
    /**
     * The settings for an action type.
     */
    settings?: pulumi.Input<inputs.codepipeline.CustomActionTypeSettings>;
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    tagsAll?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The version identifier of the custom action.
     */
    version: pulumi.Input<string>;
}
