"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VaultLockConfiguration = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides an AWS Backup vault lock configuration resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.backup.VaultLockConfiguration("test", {
 *     backupVaultName: "example_backup_vault",
 *     changeableForDays: 3,
 *     maxRetentionDays: 1200,
 *     minRetentionDays: 7,
 * });
 * ```
 *
 * ## Import
 *
 * Backup vault lock configuration can be imported using the `name`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:backup/vaultLockConfiguration:VaultLockConfiguration test TestVault
 * ```
 */
class VaultLockConfiguration extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["backupVaultArn"] = state ? state.backupVaultArn : undefined;
            resourceInputs["backupVaultName"] = state ? state.backupVaultName : undefined;
            resourceInputs["changeableForDays"] = state ? state.changeableForDays : undefined;
            resourceInputs["maxRetentionDays"] = state ? state.maxRetentionDays : undefined;
            resourceInputs["minRetentionDays"] = state ? state.minRetentionDays : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.backupVaultName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backupVaultName'");
            }
            resourceInputs["backupVaultName"] = args ? args.backupVaultName : undefined;
            resourceInputs["changeableForDays"] = args ? args.changeableForDays : undefined;
            resourceInputs["maxRetentionDays"] = args ? args.maxRetentionDays : undefined;
            resourceInputs["minRetentionDays"] = args ? args.minRetentionDays : undefined;
            resourceInputs["backupVaultArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VaultLockConfiguration.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing VaultLockConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new VaultLockConfiguration(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of VaultLockConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VaultLockConfiguration.__pulumiType;
    }
}
exports.VaultLockConfiguration = VaultLockConfiguration;
/** @internal */
VaultLockConfiguration.__pulumiType = 'aws:backup/vaultLockConfiguration:VaultLockConfiguration';
//# sourceMappingURL=vaultLockConfiguration.js.map