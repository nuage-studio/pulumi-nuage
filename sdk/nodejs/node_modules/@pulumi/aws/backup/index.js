"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VaultPolicy = exports.VaultNotifications = exports.VaultLockConfiguration = exports.Vault = exports.Selection = exports.ReportPlan = exports.RegionSettings = exports.Plan = exports.GlobalSettings = exports.getVaultOutput = exports.getVault = exports.getSelectionOutput = exports.getSelection = exports.getReportPlanOutput = exports.getReportPlan = exports.getPlanOutput = exports.getPlan = exports.getFrameworkOutput = exports.getFramework = exports.Framework = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Framework = null;
exports.getFramework = null;
exports.getFrameworkOutput = null;
exports.getPlan = null;
exports.getPlanOutput = null;
exports.getReportPlan = null;
exports.getReportPlanOutput = null;
exports.getSelection = null;
exports.getSelectionOutput = null;
exports.getVault = null;
exports.getVaultOutput = null;
exports.GlobalSettings = null;
exports.Plan = null;
exports.RegionSettings = null;
exports.ReportPlan = null;
exports.Selection = null;
exports.Vault = null;
exports.VaultLockConfiguration = null;
exports.VaultNotifications = null;
exports.VaultPolicy = null;
utilities.lazyLoad(exports, ["Framework"], () => require("./framework"));
utilities.lazyLoad(exports, ["getFramework", "getFrameworkOutput"], () => require("./getFramework"));
utilities.lazyLoad(exports, ["getPlan", "getPlanOutput"], () => require("./getPlan"));
utilities.lazyLoad(exports, ["getReportPlan", "getReportPlanOutput"], () => require("./getReportPlan"));
utilities.lazyLoad(exports, ["getSelection", "getSelectionOutput"], () => require("./getSelection"));
utilities.lazyLoad(exports, ["getVault", "getVaultOutput"], () => require("./getVault"));
utilities.lazyLoad(exports, ["GlobalSettings"], () => require("./globalSettings"));
utilities.lazyLoad(exports, ["Plan"], () => require("./plan"));
utilities.lazyLoad(exports, ["RegionSettings"], () => require("./regionSettings"));
utilities.lazyLoad(exports, ["ReportPlan"], () => require("./reportPlan"));
utilities.lazyLoad(exports, ["Selection"], () => require("./selection"));
utilities.lazyLoad(exports, ["Vault"], () => require("./vault"));
utilities.lazyLoad(exports, ["VaultLockConfiguration"], () => require("./vaultLockConfiguration"));
utilities.lazyLoad(exports, ["VaultNotifications"], () => require("./vaultNotifications"));
utilities.lazyLoad(exports, ["VaultPolicy"], () => require("./vaultPolicy"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:backup/framework:Framework":
                return new exports.Framework(name, undefined, { urn });
            case "aws:backup/globalSettings:GlobalSettings":
                return new exports.GlobalSettings(name, undefined, { urn });
            case "aws:backup/plan:Plan":
                return new exports.Plan(name, undefined, { urn });
            case "aws:backup/regionSettings:RegionSettings":
                return new exports.RegionSettings(name, undefined, { urn });
            case "aws:backup/reportPlan:ReportPlan":
                return new exports.ReportPlan(name, undefined, { urn });
            case "aws:backup/selection:Selection":
                return new exports.Selection(name, undefined, { urn });
            case "aws:backup/vault:Vault":
                return new exports.Vault(name, undefined, { urn });
            case "aws:backup/vaultLockConfiguration:VaultLockConfiguration":
                return new exports.VaultLockConfiguration(name, undefined, { urn });
            case "aws:backup/vaultNotifications:VaultNotifications":
                return new exports.VaultNotifications(name, undefined, { urn });
            case "aws:backup/vaultPolicy:VaultPolicy":
                return new exports.VaultPolicy(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "backup/framework", _module);
pulumi.runtime.registerResourceModule("aws", "backup/globalSettings", _module);
pulumi.runtime.registerResourceModule("aws", "backup/plan", _module);
pulumi.runtime.registerResourceModule("aws", "backup/regionSettings", _module);
pulumi.runtime.registerResourceModule("aws", "backup/reportPlan", _module);
pulumi.runtime.registerResourceModule("aws", "backup/selection", _module);
pulumi.runtime.registerResourceModule("aws", "backup/vault", _module);
pulumi.runtime.registerResourceModule("aws", "backup/vaultLockConfiguration", _module);
pulumi.runtime.registerResourceModule("aws", "backup/vaultNotifications", _module);
pulumi.runtime.registerResourceModule("aws", "backup/vaultPolicy", _module);
//# sourceMappingURL=index.js.map