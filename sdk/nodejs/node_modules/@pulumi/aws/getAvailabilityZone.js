"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAvailabilityZoneOutput = exports.getAvailabilityZone = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * `aws.getAvailabilityZone` provides details about a specific availability zone (AZ)
 * in the current region.
 *
 * This can be used both to validate an availability zone given in a variable
 * and to split the AZ name into its component parts of an AWS region and an
 * AZ identifier letter. The latter may be useful e.g., for implementing a
 * consistent subnet numbering scheme across several regions by mapping both
 * the region and the subnet letter to network numbers.
 *
 * This is different from the `aws.getAvailabilityZones` (plural) data source,
 * which provides a list of the available zones.
 */
function getAvailabilityZone(args, opts) {
    args = args || {};
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:index/getAvailabilityZone:getAvailabilityZone", {
        "allAvailabilityZones": args.allAvailabilityZones,
        "filters": args.filters,
        "name": args.name,
        "state": args.state,
        "zoneId": args.zoneId,
    }, opts);
}
exports.getAvailabilityZone = getAvailabilityZone;
function getAvailabilityZoneOutput(args, opts) {
    return pulumi.output(args).apply(a => getAvailabilityZone(a, opts));
}
exports.getAvailabilityZoneOutput = getAvailabilityZoneOutput;
//# sourceMappingURL=getAvailabilityZone.js.map