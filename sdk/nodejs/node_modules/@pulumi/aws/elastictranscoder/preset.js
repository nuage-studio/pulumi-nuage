"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Preset = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides an Elastic Transcoder preset resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const bar = new aws.elastictranscoder.Preset("bar", {
 *     audio: {
 *         audioPackingMode: "SingleTrack",
 *         bitRate: "96",
 *         channels: "2",
 *         codec: "AAC",
 *         sampleRate: "44100",
 *     },
 *     audioCodecOptions: {
 *         profile: "AAC-LC",
 *     },
 *     container: "mp4",
 *     description: "Sample Preset",
 *     thumbnails: {
 *         format: "png",
 *         interval: "120",
 *         maxHeight: "auto",
 *         maxWidth: "auto",
 *         paddingPolicy: "Pad",
 *         sizingPolicy: "Fit",
 *     },
 *     video: {
 *         bitRate: "1600",
 *         codec: "H.264",
 *         displayAspectRatio: "16:9",
 *         fixedGop: "false",
 *         frameRate: "auto",
 *         keyframesMaxDist: "240",
 *         maxFrameRate: "60",
 *         maxHeight: "auto",
 *         maxWidth: "auto",
 *         paddingPolicy: "Pad",
 *         sizingPolicy: "Fit",
 *     },
 *     videoCodecOptions: {
 *         ColorSpaceConversionMode: "None",
 *         InterlacedMode: "Progressive",
 *         Level: "2.2",
 *         MaxReferenceFrames: 3,
 *         Profile: "main",
 *     },
 *     videoWatermarks: [{
 *         horizontalAlign: "Right",
 *         horizontalOffset: "10px",
 *         id: "Test",
 *         maxHeight: "20%",
 *         maxWidth: "20%",
 *         opacity: "55.5",
 *         sizingPolicy: "ShrinkToFit",
 *         target: "Content",
 *         verticalAlign: "Bottom",
 *         verticalOffset: "10px",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Elastic Transcoder presets can be imported using the `id`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:elastictranscoder/preset:Preset basic_preset 1407981661351-cttk8b
 * ```
 */
class Preset extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["audio"] = state ? state.audio : undefined;
            resourceInputs["audioCodecOptions"] = state ? state.audioCodecOptions : undefined;
            resourceInputs["container"] = state ? state.container : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["thumbnails"] = state ? state.thumbnails : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["video"] = state ? state.video : undefined;
            resourceInputs["videoCodecOptions"] = state ? state.videoCodecOptions : undefined;
            resourceInputs["videoWatermarks"] = state ? state.videoWatermarks : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.container === undefined) && !opts.urn) {
                throw new Error("Missing required property 'container'");
            }
            resourceInputs["audio"] = args ? args.audio : undefined;
            resourceInputs["audioCodecOptions"] = args ? args.audioCodecOptions : undefined;
            resourceInputs["container"] = args ? args.container : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["thumbnails"] = args ? args.thumbnails : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["video"] = args ? args.video : undefined;
            resourceInputs["videoCodecOptions"] = args ? args.videoCodecOptions : undefined;
            resourceInputs["videoWatermarks"] = args ? args.videoWatermarks : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Preset.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing Preset resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Preset(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Preset.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Preset.__pulumiType;
    }
}
exports.Preset = Preset;
/** @internal */
Preset.__pulumiType = 'aws:elastictranscoder/preset:Preset';
//# sourceMappingURL=preset.js.map