export { AmiArgs, AmiState } from "./ami";
export declare type Ami = import("./ami").Ami;
export declare const Ami: typeof import("./ami").Ami;
export { AmiCopyArgs, AmiCopyState } from "./amiCopy";
export declare type AmiCopy = import("./amiCopy").AmiCopy;
export declare const AmiCopy: typeof import("./amiCopy").AmiCopy;
export { AmiFromInstanceArgs, AmiFromInstanceState } from "./amiFromInstance";
export declare type AmiFromInstance = import("./amiFromInstance").AmiFromInstance;
export declare const AmiFromInstance: typeof import("./amiFromInstance").AmiFromInstance;
export { AmiLaunchPermissionArgs, AmiLaunchPermissionState } from "./amiLaunchPermission";
export declare type AmiLaunchPermission = import("./amiLaunchPermission").AmiLaunchPermission;
export declare const AmiLaunchPermission: typeof import("./amiLaunchPermission").AmiLaunchPermission;
export { AvailabilityZoneGroupArgs, AvailabilityZoneGroupState } from "./availabilityZoneGroup";
export declare type AvailabilityZoneGroup = import("./availabilityZoneGroup").AvailabilityZoneGroup;
export declare const AvailabilityZoneGroup: typeof import("./availabilityZoneGroup").AvailabilityZoneGroup;
export { CapacityReservationArgs, CapacityReservationState } from "./capacityReservation";
export declare type CapacityReservation = import("./capacityReservation").CapacityReservation;
export declare const CapacityReservation: typeof import("./capacityReservation").CapacityReservation;
export { CarrierGatewayArgs, CarrierGatewayState } from "./carrierGateway";
export declare type CarrierGateway = import("./carrierGateway").CarrierGateway;
export declare const CarrierGateway: typeof import("./carrierGateway").CarrierGateway;
export { CustomerGatewayArgs, CustomerGatewayState } from "./customerGateway";
export declare type CustomerGateway = import("./customerGateway").CustomerGateway;
export declare const CustomerGateway: typeof import("./customerGateway").CustomerGateway;
export { DedicatedHostArgs, DedicatedHostState } from "./dedicatedHost";
export declare type DedicatedHost = import("./dedicatedHost").DedicatedHost;
export declare const DedicatedHost: typeof import("./dedicatedHost").DedicatedHost;
export { DefaultNetworkAclArgs, DefaultNetworkAclState } from "./defaultNetworkAcl";
export declare type DefaultNetworkAcl = import("./defaultNetworkAcl").DefaultNetworkAcl;
export declare const DefaultNetworkAcl: typeof import("./defaultNetworkAcl").DefaultNetworkAcl;
export { DefaultRouteTableArgs, DefaultRouteTableState } from "./defaultRouteTable";
export declare type DefaultRouteTable = import("./defaultRouteTable").DefaultRouteTable;
export declare const DefaultRouteTable: typeof import("./defaultRouteTable").DefaultRouteTable;
export { DefaultSecurityGroupArgs, DefaultSecurityGroupState } from "./defaultSecurityGroup";
export declare type DefaultSecurityGroup = import("./defaultSecurityGroup").DefaultSecurityGroup;
export declare const DefaultSecurityGroup: typeof import("./defaultSecurityGroup").DefaultSecurityGroup;
export { DefaultSubnetArgs, DefaultSubnetState } from "./defaultSubnet";
export declare type DefaultSubnet = import("./defaultSubnet").DefaultSubnet;
export declare const DefaultSubnet: typeof import("./defaultSubnet").DefaultSubnet;
export { DefaultVpcArgs, DefaultVpcState } from "./defaultVpc";
export declare type DefaultVpc = import("./defaultVpc").DefaultVpc;
export declare const DefaultVpc: typeof import("./defaultVpc").DefaultVpc;
export { DefaultVpcDhcpOptionsArgs, DefaultVpcDhcpOptionsState } from "./defaultVpcDhcpOptions";
export declare type DefaultVpcDhcpOptions = import("./defaultVpcDhcpOptions").DefaultVpcDhcpOptions;
export declare const DefaultVpcDhcpOptions: typeof import("./defaultVpcDhcpOptions").DefaultVpcDhcpOptions;
export { EgressOnlyInternetGatewayArgs, EgressOnlyInternetGatewayState } from "./egressOnlyInternetGateway";
export declare type EgressOnlyInternetGateway = import("./egressOnlyInternetGateway").EgressOnlyInternetGateway;
export declare const EgressOnlyInternetGateway: typeof import("./egressOnlyInternetGateway").EgressOnlyInternetGateway;
export { EipArgs, EipState } from "./eip";
export declare type Eip = import("./eip").Eip;
export declare const Eip: typeof import("./eip").Eip;
export { EipAssociationArgs, EipAssociationState } from "./eipAssociation";
export declare type EipAssociation = import("./eipAssociation").EipAssociation;
export declare const EipAssociation: typeof import("./eipAssociation").EipAssociation;
export { FleetArgs, FleetState } from "./fleet";
export declare type Fleet = import("./fleet").Fleet;
export declare const Fleet: typeof import("./fleet").Fleet;
export { FlowLogArgs, FlowLogState } from "./flowLog";
export declare type FlowLog = import("./flowLog").FlowLog;
export declare const FlowLog: typeof import("./flowLog").FlowLog;
export { GetAmiArgs, GetAmiResult, GetAmiOutputArgs } from "./getAmi";
export declare const getAmi: typeof import("./getAmi").getAmi;
export declare const getAmiOutput: typeof import("./getAmi").getAmiOutput;
export { GetAmiIdsArgs, GetAmiIdsResult, GetAmiIdsOutputArgs } from "./getAmiIds";
export declare const getAmiIds: typeof import("./getAmiIds").getAmiIds;
export declare const getAmiIdsOutput: typeof import("./getAmiIds").getAmiIdsOutput;
export { GetCoipPoolArgs, GetCoipPoolResult, GetCoipPoolOutputArgs } from "./getCoipPool";
export declare const getCoipPool: typeof import("./getCoipPool").getCoipPool;
export declare const getCoipPoolOutput: typeof import("./getCoipPool").getCoipPoolOutput;
export { GetCoipPoolsArgs, GetCoipPoolsResult, GetCoipPoolsOutputArgs } from "./getCoipPools";
export declare const getCoipPools: typeof import("./getCoipPools").getCoipPools;
export declare const getCoipPoolsOutput: typeof import("./getCoipPools").getCoipPoolsOutput;
export { GetCustomerGatewayArgs, GetCustomerGatewayResult, GetCustomerGatewayOutputArgs } from "./getCustomerGateway";
export declare const getCustomerGateway: typeof import("./getCustomerGateway").getCustomerGateway;
export declare const getCustomerGatewayOutput: typeof import("./getCustomerGateway").getCustomerGatewayOutput;
export { GetDedicatedHostArgs, GetDedicatedHostResult, GetDedicatedHostOutputArgs } from "./getDedicatedHost";
export declare const getDedicatedHost: typeof import("./getDedicatedHost").getDedicatedHost;
export declare const getDedicatedHostOutput: typeof import("./getDedicatedHost").getDedicatedHostOutput;
export { GetEipsArgs, GetEipsResult, GetEipsOutputArgs } from "./getEips";
export declare const getEips: typeof import("./getEips").getEips;
export declare const getEipsOutput: typeof import("./getEips").getEipsOutput;
export { GetElasticIpArgs, GetElasticIpResult, GetElasticIpOutputArgs } from "./getElasticIp";
export declare const getElasticIp: typeof import("./getElasticIp").getElasticIp;
export declare const getElasticIpOutput: typeof import("./getElasticIp").getElasticIpOutput;
export { GetInstanceArgs, GetInstanceResult, GetInstanceOutputArgs } from "./getInstance";
export declare const getInstance: typeof import("./getInstance").getInstance;
export declare const getInstanceOutput: typeof import("./getInstance").getInstanceOutput;
export { GetInstanceTypeArgs, GetInstanceTypeResult, GetInstanceTypeOutputArgs } from "./getInstanceType";
export declare const getInstanceType: typeof import("./getInstanceType").getInstanceType;
export declare const getInstanceTypeOutput: typeof import("./getInstanceType").getInstanceTypeOutput;
export { GetInstanceTypeOfferingArgs, GetInstanceTypeOfferingResult, GetInstanceTypeOfferingOutputArgs } from "./getInstanceTypeOffering";
export declare const getInstanceTypeOffering: typeof import("./getInstanceTypeOffering").getInstanceTypeOffering;
export declare const getInstanceTypeOfferingOutput: typeof import("./getInstanceTypeOffering").getInstanceTypeOfferingOutput;
export { GetInstanceTypeOfferingsArgs, GetInstanceTypeOfferingsResult, GetInstanceTypeOfferingsOutputArgs } from "./getInstanceTypeOfferings";
export declare const getInstanceTypeOfferings: typeof import("./getInstanceTypeOfferings").getInstanceTypeOfferings;
export declare const getInstanceTypeOfferingsOutput: typeof import("./getInstanceTypeOfferings").getInstanceTypeOfferingsOutput;
export { GetInstanceTypesArgs, GetInstanceTypesResult, GetInstanceTypesOutputArgs } from "./getInstanceTypes";
export declare const getInstanceTypes: typeof import("./getInstanceTypes").getInstanceTypes;
export declare const getInstanceTypesOutput: typeof import("./getInstanceTypes").getInstanceTypesOutput;
export { GetInstancesArgs, GetInstancesResult, GetInstancesOutputArgs } from "./getInstances";
export declare const getInstances: typeof import("./getInstances").getInstances;
export declare const getInstancesOutput: typeof import("./getInstances").getInstancesOutput;
export { GetInternetGatewayArgs, GetInternetGatewayResult, GetInternetGatewayOutputArgs } from "./getInternetGateway";
export declare const getInternetGateway: typeof import("./getInternetGateway").getInternetGateway;
export declare const getInternetGatewayOutput: typeof import("./getInternetGateway").getInternetGatewayOutput;
export { GetIpamPreviewNextCidrArgs, GetIpamPreviewNextCidrResult, GetIpamPreviewNextCidrOutputArgs } from "./getIpamPreviewNextCidr";
export declare const getIpamPreviewNextCidr: typeof import("./getIpamPreviewNextCidr").getIpamPreviewNextCidr;
export declare const getIpamPreviewNextCidrOutput: typeof import("./getIpamPreviewNextCidr").getIpamPreviewNextCidrOutput;
export { GetKeyPairArgs, GetKeyPairResult, GetKeyPairOutputArgs } from "./getKeyPair";
export declare const getKeyPair: typeof import("./getKeyPair").getKeyPair;
export declare const getKeyPairOutput: typeof import("./getKeyPair").getKeyPairOutput;
export { GetLaunchConfigurationArgs, GetLaunchConfigurationResult, GetLaunchConfigurationOutputArgs } from "./getLaunchConfiguration";
export declare const getLaunchConfiguration: typeof import("./getLaunchConfiguration").getLaunchConfiguration;
export declare const getLaunchConfigurationOutput: typeof import("./getLaunchConfiguration").getLaunchConfigurationOutput;
export { GetLaunchTemplateArgs, GetLaunchTemplateResult, GetLaunchTemplateOutputArgs } from "./getLaunchTemplate";
export declare const getLaunchTemplate: typeof import("./getLaunchTemplate").getLaunchTemplate;
export declare const getLaunchTemplateOutput: typeof import("./getLaunchTemplate").getLaunchTemplateOutput;
export { GetLocalGatewayArgs, GetLocalGatewayResult, GetLocalGatewayOutputArgs } from "./getLocalGateway";
export declare const getLocalGateway: typeof import("./getLocalGateway").getLocalGateway;
export declare const getLocalGatewayOutput: typeof import("./getLocalGateway").getLocalGatewayOutput;
export { GetLocalGatewayRouteTableArgs, GetLocalGatewayRouteTableResult, GetLocalGatewayRouteTableOutputArgs } from "./getLocalGatewayRouteTable";
export declare const getLocalGatewayRouteTable: typeof import("./getLocalGatewayRouteTable").getLocalGatewayRouteTable;
export declare const getLocalGatewayRouteTableOutput: typeof import("./getLocalGatewayRouteTable").getLocalGatewayRouteTableOutput;
export { GetLocalGatewayRouteTablesArgs, GetLocalGatewayRouteTablesResult, GetLocalGatewayRouteTablesOutputArgs } from "./getLocalGatewayRouteTables";
export declare const getLocalGatewayRouteTables: typeof import("./getLocalGatewayRouteTables").getLocalGatewayRouteTables;
export declare const getLocalGatewayRouteTablesOutput: typeof import("./getLocalGatewayRouteTables").getLocalGatewayRouteTablesOutput;
export { GetLocalGatewayVirtualInterfaceArgs, GetLocalGatewayVirtualInterfaceResult, GetLocalGatewayVirtualInterfaceOutputArgs } from "./getLocalGatewayVirtualInterface";
export declare const getLocalGatewayVirtualInterface: typeof import("./getLocalGatewayVirtualInterface").getLocalGatewayVirtualInterface;
export declare const getLocalGatewayVirtualInterfaceOutput: typeof import("./getLocalGatewayVirtualInterface").getLocalGatewayVirtualInterfaceOutput;
export { GetLocalGatewayVirtualInterfaceGroupArgs, GetLocalGatewayVirtualInterfaceGroupResult, GetLocalGatewayVirtualInterfaceGroupOutputArgs } from "./getLocalGatewayVirtualInterfaceGroup";
export declare const getLocalGatewayVirtualInterfaceGroup: typeof import("./getLocalGatewayVirtualInterfaceGroup").getLocalGatewayVirtualInterfaceGroup;
export declare const getLocalGatewayVirtualInterfaceGroupOutput: typeof import("./getLocalGatewayVirtualInterfaceGroup").getLocalGatewayVirtualInterfaceGroupOutput;
export { GetLocalGatewayVirtualInterfaceGroupsArgs, GetLocalGatewayVirtualInterfaceGroupsResult, GetLocalGatewayVirtualInterfaceGroupsOutputArgs } from "./getLocalGatewayVirtualInterfaceGroups";
export declare const getLocalGatewayVirtualInterfaceGroups: typeof import("./getLocalGatewayVirtualInterfaceGroups").getLocalGatewayVirtualInterfaceGroups;
export declare const getLocalGatewayVirtualInterfaceGroupsOutput: typeof import("./getLocalGatewayVirtualInterfaceGroups").getLocalGatewayVirtualInterfaceGroupsOutput;
export { GetLocalGatewaysArgs, GetLocalGatewaysResult, GetLocalGatewaysOutputArgs } from "./getLocalGateways";
export declare const getLocalGateways: typeof import("./getLocalGateways").getLocalGateways;
export declare const getLocalGatewaysOutput: typeof import("./getLocalGateways").getLocalGatewaysOutput;
export { GetManagedPrefixListArgs, GetManagedPrefixListResult, GetManagedPrefixListOutputArgs } from "./getManagedPrefixList";
export declare const getManagedPrefixList: typeof import("./getManagedPrefixList").getManagedPrefixList;
export declare const getManagedPrefixListOutput: typeof import("./getManagedPrefixList").getManagedPrefixListOutput;
export { GetManagedPrefixListsArgs, GetManagedPrefixListsResult, GetManagedPrefixListsOutputArgs } from "./getManagedPrefixLists";
export declare const getManagedPrefixLists: typeof import("./getManagedPrefixLists").getManagedPrefixLists;
export declare const getManagedPrefixListsOutput: typeof import("./getManagedPrefixLists").getManagedPrefixListsOutput;
export { GetNatGatewayArgs, GetNatGatewayResult, GetNatGatewayOutputArgs } from "./getNatGateway";
export declare const getNatGateway: typeof import("./getNatGateway").getNatGateway;
export declare const getNatGatewayOutput: typeof import("./getNatGateway").getNatGatewayOutput;
export { GetNatGatewaysArgs, GetNatGatewaysResult, GetNatGatewaysOutputArgs } from "./getNatGateways";
export declare const getNatGateways: typeof import("./getNatGateways").getNatGateways;
export declare const getNatGatewaysOutput: typeof import("./getNatGateways").getNatGatewaysOutput;
export { GetNetworkAclsArgs, GetNetworkAclsResult, GetNetworkAclsOutputArgs } from "./getNetworkAcls";
export declare const getNetworkAcls: typeof import("./getNetworkAcls").getNetworkAcls;
export declare const getNetworkAclsOutput: typeof import("./getNetworkAcls").getNetworkAclsOutput;
export { GetNetworkInsightsAnalysisArgs, GetNetworkInsightsAnalysisResult, GetNetworkInsightsAnalysisOutputArgs } from "./getNetworkInsightsAnalysis";
export declare const getNetworkInsightsAnalysis: typeof import("./getNetworkInsightsAnalysis").getNetworkInsightsAnalysis;
export declare const getNetworkInsightsAnalysisOutput: typeof import("./getNetworkInsightsAnalysis").getNetworkInsightsAnalysisOutput;
export { GetNetworkInsightsPathArgs, GetNetworkInsightsPathResult, GetNetworkInsightsPathOutputArgs } from "./getNetworkInsightsPath";
export declare const getNetworkInsightsPath: typeof import("./getNetworkInsightsPath").getNetworkInsightsPath;
export declare const getNetworkInsightsPathOutput: typeof import("./getNetworkInsightsPath").getNetworkInsightsPathOutput;
export { GetNetworkInterfaceArgs, GetNetworkInterfaceResult, GetNetworkInterfaceOutputArgs } from "./getNetworkInterface";
export declare const getNetworkInterface: typeof import("./getNetworkInterface").getNetworkInterface;
export declare const getNetworkInterfaceOutput: typeof import("./getNetworkInterface").getNetworkInterfaceOutput;
export { GetNetworkInterfacesArgs, GetNetworkInterfacesResult, GetNetworkInterfacesOutputArgs } from "./getNetworkInterfaces";
export declare const getNetworkInterfaces: typeof import("./getNetworkInterfaces").getNetworkInterfaces;
export declare const getNetworkInterfacesOutput: typeof import("./getNetworkInterfaces").getNetworkInterfacesOutput;
export { GetPrefixListArgs, GetPrefixListResult, GetPrefixListOutputArgs } from "./getPrefixList";
export declare const getPrefixList: typeof import("./getPrefixList").getPrefixList;
export declare const getPrefixListOutput: typeof import("./getPrefixList").getPrefixListOutput;
export { GetRouteArgs, GetRouteResult, GetRouteOutputArgs } from "./getRoute";
export declare const getRoute: typeof import("./getRoute").getRoute;
export declare const getRouteOutput: typeof import("./getRoute").getRouteOutput;
export { GetRouteTableArgs, GetRouteTableResult, GetRouteTableOutputArgs } from "./getRouteTable";
export declare const getRouteTable: typeof import("./getRouteTable").getRouteTable;
export declare const getRouteTableOutput: typeof import("./getRouteTable").getRouteTableOutput;
export { GetRouteTablesArgs, GetRouteTablesResult, GetRouteTablesOutputArgs } from "./getRouteTables";
export declare const getRouteTables: typeof import("./getRouteTables").getRouteTables;
export declare const getRouteTablesOutput: typeof import("./getRouteTables").getRouteTablesOutput;
export { GetSecurityGroupArgs, GetSecurityGroupResult, GetSecurityGroupOutputArgs } from "./getSecurityGroup";
export declare const getSecurityGroup: typeof import("./getSecurityGroup").getSecurityGroup;
export declare const getSecurityGroupOutput: typeof import("./getSecurityGroup").getSecurityGroupOutput;
export { GetSecurityGroupsArgs, GetSecurityGroupsResult, GetSecurityGroupsOutputArgs } from "./getSecurityGroups";
export declare const getSecurityGroups: typeof import("./getSecurityGroups").getSecurityGroups;
export declare const getSecurityGroupsOutput: typeof import("./getSecurityGroups").getSecurityGroupsOutput;
export { GetSerialConsoleAccessResult } from "./getSerialConsoleAccess";
export declare const getSerialConsoleAccess: typeof import("./getSerialConsoleAccess").getSerialConsoleAccess;
export { GetSpotPriceArgs, GetSpotPriceResult, GetSpotPriceOutputArgs } from "./getSpotPrice";
export declare const getSpotPrice: typeof import("./getSpotPrice").getSpotPrice;
export declare const getSpotPriceOutput: typeof import("./getSpotPrice").getSpotPriceOutput;
export { GetSubnetArgs, GetSubnetResult, GetSubnetOutputArgs } from "./getSubnet";
export declare const getSubnet: typeof import("./getSubnet").getSubnet;
export declare const getSubnetOutput: typeof import("./getSubnet").getSubnetOutput;
export { GetSubnetIdsArgs, GetSubnetIdsResult, GetSubnetIdsOutputArgs } from "./getSubnetIds";
export declare const getSubnetIds: typeof import("./getSubnetIds").getSubnetIds;
export declare const getSubnetIdsOutput: typeof import("./getSubnetIds").getSubnetIdsOutput;
export { GetSubnetsArgs, GetSubnetsResult, GetSubnetsOutputArgs } from "./getSubnets";
export declare const getSubnets: typeof import("./getSubnets").getSubnets;
export declare const getSubnetsOutput: typeof import("./getSubnets").getSubnetsOutput;
export { GetTransitGatewayRouteTablesArgs, GetTransitGatewayRouteTablesResult, GetTransitGatewayRouteTablesOutputArgs } from "./getTransitGatewayRouteTables";
export declare const getTransitGatewayRouteTables: typeof import("./getTransitGatewayRouteTables").getTransitGatewayRouteTables;
export declare const getTransitGatewayRouteTablesOutput: typeof import("./getTransitGatewayRouteTables").getTransitGatewayRouteTablesOutput;
export { GetVpcArgs, GetVpcResult, GetVpcOutputArgs } from "./getVpc";
export declare const getVpc: typeof import("./getVpc").getVpc;
export declare const getVpcOutput: typeof import("./getVpc").getVpcOutput;
export { GetVpcDhcpOptionsArgs, GetVpcDhcpOptionsResult, GetVpcDhcpOptionsOutputArgs } from "./getVpcDhcpOptions";
export declare const getVpcDhcpOptions: typeof import("./getVpcDhcpOptions").getVpcDhcpOptions;
export declare const getVpcDhcpOptionsOutput: typeof import("./getVpcDhcpOptions").getVpcDhcpOptionsOutput;
export { GetVpcEndpointArgs, GetVpcEndpointResult, GetVpcEndpointOutputArgs } from "./getVpcEndpoint";
export declare const getVpcEndpoint: typeof import("./getVpcEndpoint").getVpcEndpoint;
export declare const getVpcEndpointOutput: typeof import("./getVpcEndpoint").getVpcEndpointOutput;
export { GetVpcEndpointServiceArgs, GetVpcEndpointServiceResult, GetVpcEndpointServiceOutputArgs } from "./getVpcEndpointService";
export declare const getVpcEndpointService: typeof import("./getVpcEndpointService").getVpcEndpointService;
export declare const getVpcEndpointServiceOutput: typeof import("./getVpcEndpointService").getVpcEndpointServiceOutput;
export { GetVpcIamPoolArgs, GetVpcIamPoolResult, GetVpcIamPoolOutputArgs } from "./getVpcIamPool";
export declare const getVpcIamPool: typeof import("./getVpcIamPool").getVpcIamPool;
export declare const getVpcIamPoolOutput: typeof import("./getVpcIamPool").getVpcIamPoolOutput;
export { GetVpcPeeringConnectionArgs, GetVpcPeeringConnectionResult, GetVpcPeeringConnectionOutputArgs } from "./getVpcPeeringConnection";
export declare const getVpcPeeringConnection: typeof import("./getVpcPeeringConnection").getVpcPeeringConnection;
export declare const getVpcPeeringConnectionOutput: typeof import("./getVpcPeeringConnection").getVpcPeeringConnectionOutput;
export { GetVpcPeeringConnectionsArgs, GetVpcPeeringConnectionsResult, GetVpcPeeringConnectionsOutputArgs } from "./getVpcPeeringConnections";
export declare const getVpcPeeringConnections: typeof import("./getVpcPeeringConnections").getVpcPeeringConnections;
export declare const getVpcPeeringConnectionsOutput: typeof import("./getVpcPeeringConnections").getVpcPeeringConnectionsOutput;
export { GetVpcsArgs, GetVpcsResult, GetVpcsOutputArgs } from "./getVpcs";
export declare const getVpcs: typeof import("./getVpcs").getVpcs;
export declare const getVpcsOutput: typeof import("./getVpcs").getVpcsOutput;
export { GetVpnGatewayArgs, GetVpnGatewayResult, GetVpnGatewayOutputArgs } from "./getVpnGateway";
export declare const getVpnGateway: typeof import("./getVpnGateway").getVpnGateway;
export declare const getVpnGatewayOutput: typeof import("./getVpnGateway").getVpnGatewayOutput;
export { InstanceArgs, InstanceState } from "./instance";
export declare type Instance = import("./instance").Instance;
export declare const Instance: typeof import("./instance").Instance;
export * from "./instancePlatform";
export * from "./instanceType";
export { InternetGatewayArgs, InternetGatewayState } from "./internetGateway";
export declare type InternetGateway = import("./internetGateway").InternetGateway;
export declare const InternetGateway: typeof import("./internetGateway").InternetGateway;
export { InternetGatewayAttachmentArgs, InternetGatewayAttachmentState } from "./internetGatewayAttachment";
export declare type InternetGatewayAttachment = import("./internetGatewayAttachment").InternetGatewayAttachment;
export declare const InternetGatewayAttachment: typeof import("./internetGatewayAttachment").InternetGatewayAttachment;
export { KeyPairArgs, KeyPairState } from "./keyPair";
export declare type KeyPair = import("./keyPair").KeyPair;
export declare const KeyPair: typeof import("./keyPair").KeyPair;
export { LaunchConfigurationArgs, LaunchConfigurationState } from "./launchConfiguration";
export declare type LaunchConfiguration = import("./launchConfiguration").LaunchConfiguration;
export declare const LaunchConfiguration: typeof import("./launchConfiguration").LaunchConfiguration;
export { LaunchTemplateArgs, LaunchTemplateState } from "./launchTemplate";
export declare type LaunchTemplate = import("./launchTemplate").LaunchTemplate;
export declare const LaunchTemplate: typeof import("./launchTemplate").LaunchTemplate;
export { LocalGatewayRouteArgs, LocalGatewayRouteState } from "./localGatewayRoute";
export declare type LocalGatewayRoute = import("./localGatewayRoute").LocalGatewayRoute;
export declare const LocalGatewayRoute: typeof import("./localGatewayRoute").LocalGatewayRoute;
export { LocalGatewayRouteTableVpcAssociationArgs, LocalGatewayRouteTableVpcAssociationState } from "./localGatewayRouteTableVpcAssociation";
export declare type LocalGatewayRouteTableVpcAssociation = import("./localGatewayRouteTableVpcAssociation").LocalGatewayRouteTableVpcAssociation;
export declare const LocalGatewayRouteTableVpcAssociation: typeof import("./localGatewayRouteTableVpcAssociation").LocalGatewayRouteTableVpcAssociation;
export { MainRouteTableAssociationArgs, MainRouteTableAssociationState } from "./mainRouteTableAssociation";
export declare type MainRouteTableAssociation = import("./mainRouteTableAssociation").MainRouteTableAssociation;
export declare const MainRouteTableAssociation: typeof import("./mainRouteTableAssociation").MainRouteTableAssociation;
export { ManagedPrefixListArgs, ManagedPrefixListState } from "./managedPrefixList";
export declare type ManagedPrefixList = import("./managedPrefixList").ManagedPrefixList;
export declare const ManagedPrefixList: typeof import("./managedPrefixList").ManagedPrefixList;
export { ManagedPrefixListEntryArgs, ManagedPrefixListEntryState } from "./managedPrefixListEntry";
export declare type ManagedPrefixListEntry = import("./managedPrefixListEntry").ManagedPrefixListEntry;
export declare const ManagedPrefixListEntry: typeof import("./managedPrefixListEntry").ManagedPrefixListEntry;
export { NatGatewayArgs, NatGatewayState } from "./natGateway";
export declare type NatGateway = import("./natGateway").NatGateway;
export declare const NatGateway: typeof import("./natGateway").NatGateway;
export { NetworkAclArgs, NetworkAclState } from "./networkAcl";
export declare type NetworkAcl = import("./networkAcl").NetworkAcl;
export declare const NetworkAcl: typeof import("./networkAcl").NetworkAcl;
export { NetworkAclAssociationArgs, NetworkAclAssociationState } from "./networkAclAssociation";
export declare type NetworkAclAssociation = import("./networkAclAssociation").NetworkAclAssociation;
export declare const NetworkAclAssociation: typeof import("./networkAclAssociation").NetworkAclAssociation;
export { NetworkAclRuleArgs, NetworkAclRuleState } from "./networkAclRule";
export declare type NetworkAclRule = import("./networkAclRule").NetworkAclRule;
export declare const NetworkAclRule: typeof import("./networkAclRule").NetworkAclRule;
export { NetworkInsightsAnalysisArgs, NetworkInsightsAnalysisState } from "./networkInsightsAnalysis";
export declare type NetworkInsightsAnalysis = import("./networkInsightsAnalysis").NetworkInsightsAnalysis;
export declare const NetworkInsightsAnalysis: typeof import("./networkInsightsAnalysis").NetworkInsightsAnalysis;
export { NetworkInsightsPathArgs, NetworkInsightsPathState } from "./networkInsightsPath";
export declare type NetworkInsightsPath = import("./networkInsightsPath").NetworkInsightsPath;
export declare const NetworkInsightsPath: typeof import("./networkInsightsPath").NetworkInsightsPath;
export { NetworkInterfaceArgs, NetworkInterfaceState } from "./networkInterface";
export declare type NetworkInterface = import("./networkInterface").NetworkInterface;
export declare const NetworkInterface: typeof import("./networkInterface").NetworkInterface;
export { NetworkInterfaceAttachmentArgs, NetworkInterfaceAttachmentState } from "./networkInterfaceAttachment";
export declare type NetworkInterfaceAttachment = import("./networkInterfaceAttachment").NetworkInterfaceAttachment;
export declare const NetworkInterfaceAttachment: typeof import("./networkInterfaceAttachment").NetworkInterfaceAttachment;
export { NetworkInterfaceSecurityGroupAttachmentArgs, NetworkInterfaceSecurityGroupAttachmentState } from "./networkInterfaceSecurityGroupAttachment";
export declare type NetworkInterfaceSecurityGroupAttachment = import("./networkInterfaceSecurityGroupAttachment").NetworkInterfaceSecurityGroupAttachment;
export declare const NetworkInterfaceSecurityGroupAttachment: typeof import("./networkInterfaceSecurityGroupAttachment").NetworkInterfaceSecurityGroupAttachment;
export { PeeringConnectionOptionsArgs, PeeringConnectionOptionsState } from "./peeringConnectionOptions";
export declare type PeeringConnectionOptions = import("./peeringConnectionOptions").PeeringConnectionOptions;
export declare const PeeringConnectionOptions: typeof import("./peeringConnectionOptions").PeeringConnectionOptions;
export { PlacementGroupArgs, PlacementGroupState } from "./placementGroup";
export declare type PlacementGroup = import("./placementGroup").PlacementGroup;
export declare const PlacementGroup: typeof import("./placementGroup").PlacementGroup;
export * from "./placementStrategy";
export * from "./protocolType";
export { ProxyProtocolPolicyArgs, ProxyProtocolPolicyState } from "./proxyProtocolPolicy";
export declare type ProxyProtocolPolicy = import("./proxyProtocolPolicy").ProxyProtocolPolicy;
export declare const ProxyProtocolPolicy: typeof import("./proxyProtocolPolicy").ProxyProtocolPolicy;
export { RouteArgs, RouteState } from "./route";
export declare type Route = import("./route").Route;
export declare const Route: typeof import("./route").Route;
export { RouteTableArgs, RouteTableState } from "./routeTable";
export declare type RouteTable = import("./routeTable").RouteTable;
export declare const RouteTable: typeof import("./routeTable").RouteTable;
export { RouteTableAssociationArgs, RouteTableAssociationState } from "./routeTableAssociation";
export declare type RouteTableAssociation = import("./routeTableAssociation").RouteTableAssociation;
export declare const RouteTableAssociation: typeof import("./routeTableAssociation").RouteTableAssociation;
export { SecurityGroupArgs, SecurityGroupState } from "./securityGroup";
export declare type SecurityGroup = import("./securityGroup").SecurityGroup;
export declare const SecurityGroup: typeof import("./securityGroup").SecurityGroup;
export { SecurityGroupAssociationArgs, SecurityGroupAssociationState } from "./securityGroupAssociation";
export declare type SecurityGroupAssociation = import("./securityGroupAssociation").SecurityGroupAssociation;
export declare const SecurityGroupAssociation: typeof import("./securityGroupAssociation").SecurityGroupAssociation;
export { SecurityGroupRuleArgs, SecurityGroupRuleState } from "./securityGroupRule";
export declare type SecurityGroupRule = import("./securityGroupRule").SecurityGroupRule;
export declare const SecurityGroupRule: typeof import("./securityGroupRule").SecurityGroupRule;
export { SerialConsoleAccessArgs, SerialConsoleAccessState } from "./serialConsoleAccess";
export declare type SerialConsoleAccess = import("./serialConsoleAccess").SerialConsoleAccess;
export declare const SerialConsoleAccess: typeof import("./serialConsoleAccess").SerialConsoleAccess;
export { SnapshotCreateVolumePermissionArgs, SnapshotCreateVolumePermissionState } from "./snapshotCreateVolumePermission";
export declare type SnapshotCreateVolumePermission = import("./snapshotCreateVolumePermission").SnapshotCreateVolumePermission;
export declare const SnapshotCreateVolumePermission: typeof import("./snapshotCreateVolumePermission").SnapshotCreateVolumePermission;
export { SpotDatafeedSubscriptionArgs, SpotDatafeedSubscriptionState } from "./spotDatafeedSubscription";
export declare type SpotDatafeedSubscription = import("./spotDatafeedSubscription").SpotDatafeedSubscription;
export declare const SpotDatafeedSubscription: typeof import("./spotDatafeedSubscription").SpotDatafeedSubscription;
export { SpotFleetRequestArgs, SpotFleetRequestState } from "./spotFleetRequest";
export declare type SpotFleetRequest = import("./spotFleetRequest").SpotFleetRequest;
export declare const SpotFleetRequest: typeof import("./spotFleetRequest").SpotFleetRequest;
export { SpotInstanceRequestArgs, SpotInstanceRequestState } from "./spotInstanceRequest";
export declare type SpotInstanceRequest = import("./spotInstanceRequest").SpotInstanceRequest;
export declare const SpotInstanceRequest: typeof import("./spotInstanceRequest").SpotInstanceRequest;
export { SubnetArgs, SubnetState } from "./subnet";
export declare type Subnet = import("./subnet").Subnet;
export declare const Subnet: typeof import("./subnet").Subnet;
export { SubnetCidrReservationArgs, SubnetCidrReservationState } from "./subnetCidrReservation";
export declare type SubnetCidrReservation = import("./subnetCidrReservation").SubnetCidrReservation;
export declare const SubnetCidrReservation: typeof import("./subnetCidrReservation").SubnetCidrReservation;
export { TagArgs, TagState } from "./tag";
export declare type Tag = import("./tag").Tag;
export declare const Tag: typeof import("./tag").Tag;
export * from "./tenancy";
export { TrafficMirrorFilterArgs, TrafficMirrorFilterState } from "./trafficMirrorFilter";
export declare type TrafficMirrorFilter = import("./trafficMirrorFilter").TrafficMirrorFilter;
export declare const TrafficMirrorFilter: typeof import("./trafficMirrorFilter").TrafficMirrorFilter;
export { TrafficMirrorFilterRuleArgs, TrafficMirrorFilterRuleState } from "./trafficMirrorFilterRule";
export declare type TrafficMirrorFilterRule = import("./trafficMirrorFilterRule").TrafficMirrorFilterRule;
export declare const TrafficMirrorFilterRule: typeof import("./trafficMirrorFilterRule").TrafficMirrorFilterRule;
export { TrafficMirrorSessionArgs, TrafficMirrorSessionState } from "./trafficMirrorSession";
export declare type TrafficMirrorSession = import("./trafficMirrorSession").TrafficMirrorSession;
export declare const TrafficMirrorSession: typeof import("./trafficMirrorSession").TrafficMirrorSession;
export { TrafficMirrorTargetArgs, TrafficMirrorTargetState } from "./trafficMirrorTarget";
export declare type TrafficMirrorTarget = import("./trafficMirrorTarget").TrafficMirrorTarget;
export declare const TrafficMirrorTarget: typeof import("./trafficMirrorTarget").TrafficMirrorTarget;
export { TransitGatewayPeeringAttachmentAccepterArgs, TransitGatewayPeeringAttachmentAccepterState } from "./transitGatewayPeeringAttachmentAccepter";
export declare type TransitGatewayPeeringAttachmentAccepter = import("./transitGatewayPeeringAttachmentAccepter").TransitGatewayPeeringAttachmentAccepter;
export declare const TransitGatewayPeeringAttachmentAccepter: typeof import("./transitGatewayPeeringAttachmentAccepter").TransitGatewayPeeringAttachmentAccepter;
export { VolumeAttachmentArgs, VolumeAttachmentState } from "./volumeAttachment";
export declare type VolumeAttachment = import("./volumeAttachment").VolumeAttachment;
export declare const VolumeAttachment: typeof import("./volumeAttachment").VolumeAttachment;
export { VpcArgs, VpcState } from "./vpc";
export declare type Vpc = import("./vpc").Vpc;
export declare const Vpc: typeof import("./vpc").Vpc;
export { VpcDhcpOptionsArgs, VpcDhcpOptionsState } from "./vpcDhcpOptions";
export declare type VpcDhcpOptions = import("./vpcDhcpOptions").VpcDhcpOptions;
export declare const VpcDhcpOptions: typeof import("./vpcDhcpOptions").VpcDhcpOptions;
export { VpcDhcpOptionsAssociationArgs, VpcDhcpOptionsAssociationState } from "./vpcDhcpOptionsAssociation";
export declare type VpcDhcpOptionsAssociation = import("./vpcDhcpOptionsAssociation").VpcDhcpOptionsAssociation;
export declare const VpcDhcpOptionsAssociation: typeof import("./vpcDhcpOptionsAssociation").VpcDhcpOptionsAssociation;
export { VpcEndpointArgs, VpcEndpointState } from "./vpcEndpoint";
export declare type VpcEndpoint = import("./vpcEndpoint").VpcEndpoint;
export declare const VpcEndpoint: typeof import("./vpcEndpoint").VpcEndpoint;
export { VpcEndpointConnectionAccepterArgs, VpcEndpointConnectionAccepterState } from "./vpcEndpointConnectionAccepter";
export declare type VpcEndpointConnectionAccepter = import("./vpcEndpointConnectionAccepter").VpcEndpointConnectionAccepter;
export declare const VpcEndpointConnectionAccepter: typeof import("./vpcEndpointConnectionAccepter").VpcEndpointConnectionAccepter;
export { VpcEndpointConnectionNotificationArgs, VpcEndpointConnectionNotificationState } from "./vpcEndpointConnectionNotification";
export declare type VpcEndpointConnectionNotification = import("./vpcEndpointConnectionNotification").VpcEndpointConnectionNotification;
export declare const VpcEndpointConnectionNotification: typeof import("./vpcEndpointConnectionNotification").VpcEndpointConnectionNotification;
export { VpcEndpointPolicyArgs, VpcEndpointPolicyState } from "./vpcEndpointPolicy";
export declare type VpcEndpointPolicy = import("./vpcEndpointPolicy").VpcEndpointPolicy;
export declare const VpcEndpointPolicy: typeof import("./vpcEndpointPolicy").VpcEndpointPolicy;
export { VpcEndpointRouteTableAssociationArgs, VpcEndpointRouteTableAssociationState } from "./vpcEndpointRouteTableAssociation";
export declare type VpcEndpointRouteTableAssociation = import("./vpcEndpointRouteTableAssociation").VpcEndpointRouteTableAssociation;
export declare const VpcEndpointRouteTableAssociation: typeof import("./vpcEndpointRouteTableAssociation").VpcEndpointRouteTableAssociation;
export { VpcEndpointServiceArgs, VpcEndpointServiceState } from "./vpcEndpointService";
export declare type VpcEndpointService = import("./vpcEndpointService").VpcEndpointService;
export declare const VpcEndpointService: typeof import("./vpcEndpointService").VpcEndpointService;
export { VpcEndpointServiceAllowedPrincipleArgs, VpcEndpointServiceAllowedPrincipleState } from "./vpcEndpointServiceAllowedPrinciple";
export declare type VpcEndpointServiceAllowedPrinciple = import("./vpcEndpointServiceAllowedPrinciple").VpcEndpointServiceAllowedPrinciple;
export declare const VpcEndpointServiceAllowedPrinciple: typeof import("./vpcEndpointServiceAllowedPrinciple").VpcEndpointServiceAllowedPrinciple;
export { VpcEndpointSubnetAssociationArgs, VpcEndpointSubnetAssociationState } from "./vpcEndpointSubnetAssociation";
export declare type VpcEndpointSubnetAssociation = import("./vpcEndpointSubnetAssociation").VpcEndpointSubnetAssociation;
export declare const VpcEndpointSubnetAssociation: typeof import("./vpcEndpointSubnetAssociation").VpcEndpointSubnetAssociation;
export { VpcIpamArgs, VpcIpamState } from "./vpcIpam";
export declare type VpcIpam = import("./vpcIpam").VpcIpam;
export declare const VpcIpam: typeof import("./vpcIpam").VpcIpam;
export { VpcIpamOrganizationAdminAccountArgs, VpcIpamOrganizationAdminAccountState } from "./vpcIpamOrganizationAdminAccount";
export declare type VpcIpamOrganizationAdminAccount = import("./vpcIpamOrganizationAdminAccount").VpcIpamOrganizationAdminAccount;
export declare const VpcIpamOrganizationAdminAccount: typeof import("./vpcIpamOrganizationAdminAccount").VpcIpamOrganizationAdminAccount;
export { VpcIpamPoolArgs, VpcIpamPoolState } from "./vpcIpamPool";
export declare type VpcIpamPool = import("./vpcIpamPool").VpcIpamPool;
export declare const VpcIpamPool: typeof import("./vpcIpamPool").VpcIpamPool;
export { VpcIpamPoolCidrArgs, VpcIpamPoolCidrState } from "./vpcIpamPoolCidr";
export declare type VpcIpamPoolCidr = import("./vpcIpamPoolCidr").VpcIpamPoolCidr;
export declare const VpcIpamPoolCidr: typeof import("./vpcIpamPoolCidr").VpcIpamPoolCidr;
export { VpcIpamPoolCidrAllocationArgs, VpcIpamPoolCidrAllocationState } from "./vpcIpamPoolCidrAllocation";
export declare type VpcIpamPoolCidrAllocation = import("./vpcIpamPoolCidrAllocation").VpcIpamPoolCidrAllocation;
export declare const VpcIpamPoolCidrAllocation: typeof import("./vpcIpamPoolCidrAllocation").VpcIpamPoolCidrAllocation;
export { VpcIpamPreviewNextCidrArgs, VpcIpamPreviewNextCidrState } from "./vpcIpamPreviewNextCidr";
export declare type VpcIpamPreviewNextCidr = import("./vpcIpamPreviewNextCidr").VpcIpamPreviewNextCidr;
export declare const VpcIpamPreviewNextCidr: typeof import("./vpcIpamPreviewNextCidr").VpcIpamPreviewNextCidr;
export { VpcIpamScopeArgs, VpcIpamScopeState } from "./vpcIpamScope";
export declare type VpcIpamScope = import("./vpcIpamScope").VpcIpamScope;
export declare const VpcIpamScope: typeof import("./vpcIpamScope").VpcIpamScope;
export { VpcIpv4CidrBlockAssociationArgs, VpcIpv4CidrBlockAssociationState } from "./vpcIpv4CidrBlockAssociation";
export declare type VpcIpv4CidrBlockAssociation = import("./vpcIpv4CidrBlockAssociation").VpcIpv4CidrBlockAssociation;
export declare const VpcIpv4CidrBlockAssociation: typeof import("./vpcIpv4CidrBlockAssociation").VpcIpv4CidrBlockAssociation;
export { VpcIpv6CidrBlockAssociationArgs, VpcIpv6CidrBlockAssociationState } from "./vpcIpv6CidrBlockAssociation";
export declare type VpcIpv6CidrBlockAssociation = import("./vpcIpv6CidrBlockAssociation").VpcIpv6CidrBlockAssociation;
export declare const VpcIpv6CidrBlockAssociation: typeof import("./vpcIpv6CidrBlockAssociation").VpcIpv6CidrBlockAssociation;
export { VpcPeeringConnectionArgs, VpcPeeringConnectionState } from "./vpcPeeringConnection";
export declare type VpcPeeringConnection = import("./vpcPeeringConnection").VpcPeeringConnection;
export declare const VpcPeeringConnection: typeof import("./vpcPeeringConnection").VpcPeeringConnection;
export { VpcPeeringConnectionAccepterArgs, VpcPeeringConnectionAccepterState } from "./vpcPeeringConnectionAccepter";
export declare type VpcPeeringConnectionAccepter = import("./vpcPeeringConnectionAccepter").VpcPeeringConnectionAccepter;
export declare const VpcPeeringConnectionAccepter: typeof import("./vpcPeeringConnectionAccepter").VpcPeeringConnectionAccepter;
export { VpnConnectionArgs, VpnConnectionState } from "./vpnConnection";
export declare type VpnConnection = import("./vpnConnection").VpnConnection;
export declare const VpnConnection: typeof import("./vpnConnection").VpnConnection;
export { VpnConnectionRouteArgs, VpnConnectionRouteState } from "./vpnConnectionRoute";
export declare type VpnConnectionRoute = import("./vpnConnectionRoute").VpnConnectionRoute;
export declare const VpnConnectionRoute: typeof import("./vpnConnectionRoute").VpnConnectionRoute;
export { VpnGatewayArgs, VpnGatewayState } from "./vpnGateway";
export declare type VpnGateway = import("./vpnGateway").VpnGateway;
export declare const VpnGateway: typeof import("./vpnGateway").VpnGateway;
export { VpnGatewayAttachmentArgs, VpnGatewayAttachmentState } from "./vpnGatewayAttachment";
export declare type VpnGatewayAttachment = import("./vpnGatewayAttachment").VpnGatewayAttachment;
export declare const VpnGatewayAttachment: typeof import("./vpnGatewayAttachment").VpnGatewayAttachment;
export { VpnGatewayRoutePropagationArgs, VpnGatewayRoutePropagationState } from "./vpnGatewayRoutePropagation";
export declare type VpnGatewayRoutePropagation = import("./vpnGatewayRoutePropagation").VpnGatewayRoutePropagation;
export declare const VpnGatewayRoutePropagation: typeof import("./vpnGatewayRoutePropagation").VpnGatewayRoutePropagation;
export * from "../types/enums/ec2";
