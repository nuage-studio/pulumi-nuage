"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SerialConsoleAccess = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.ec2.SerialConsoleAccess("example", {
 *     enabled: true,
 * });
 * ```
 *
 * ## Import
 *
 * Serial console access state can be imported, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:ec2/serialConsoleAccess:SerialConsoleAccess example default
 * ```
 */
class SerialConsoleAccess extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SerialConsoleAccess.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing SerialConsoleAccess resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SerialConsoleAccess(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SerialConsoleAccess.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SerialConsoleAccess.__pulumiType;
    }
}
exports.SerialConsoleAccess = SerialConsoleAccess;
/** @internal */
SerialConsoleAccess.__pulumiType = 'aws:ec2/serialConsoleAccess:SerialConsoleAccess';
//# sourceMappingURL=serialConsoleAccess.js.map