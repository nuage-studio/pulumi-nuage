import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * ## Example Usage
 *
 * Basic usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.ec2.ManagedPrefixList("example", {
 *     addressFamily: "IPv4",
 *     maxEntries: 5,
 *     entries: [
 *         {
 *             cidr: aws_vpc.example.cidr_block,
 *             description: "Primary",
 *         },
 *         {
 *             cidr: aws_vpc_ipv4_cidr_block_association.example.cidr_block,
 *             description: "Secondary",
 *         },
 *     ],
 *     tags: {
 *         Env: "live",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Prefix Lists can be imported using the `id`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:ec2/managedPrefixList:ManagedPrefixList default pl-0570a1d2d725c16be
 * ```
 */
export declare class ManagedPrefixList extends pulumi.CustomResource {
    /**
     * Get an existing ManagedPrefixList resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagedPrefixListState, opts?: pulumi.CustomResourceOptions): ManagedPrefixList;
    /**
     * Returns true if the given object is an instance of ManagedPrefixList.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ManagedPrefixList;
    /**
     * Address family (`IPv4` or `IPv6`) of this prefix list.
     */
    readonly addressFamily: pulumi.Output<string>;
    /**
     * ARN of the prefix list.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * Configuration block for prefix list entry. Detailed below. Different entries may have overlapping CIDR blocks, but a particular CIDR should not be duplicated.
     */
    readonly entries: pulumi.Output<outputs.ec2.ManagedPrefixListEntry[]>;
    /**
     * Maximum number of entries that this prefix list can contain.
     */
    readonly maxEntries: pulumi.Output<number>;
    /**
     * Name of this resource. The name must not start with `com.amazonaws`.
     */
    readonly name: pulumi.Output<string>;
    /**
     * ID of the AWS account that owns this prefix list.
     */
    readonly ownerId: pulumi.Output<string>;
    /**
     * Map of tags to assign to this resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    readonly tagsAll: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * Latest version of this prefix list.
     */
    readonly version: pulumi.Output<number>;
    /**
     * Create a ManagedPrefixList resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagedPrefixListArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ManagedPrefixList resources.
 */
export interface ManagedPrefixListState {
    /**
     * Address family (`IPv4` or `IPv6`) of this prefix list.
     */
    addressFamily?: pulumi.Input<string>;
    /**
     * ARN of the prefix list.
     */
    arn?: pulumi.Input<string>;
    /**
     * Configuration block for prefix list entry. Detailed below. Different entries may have overlapping CIDR blocks, but a particular CIDR should not be duplicated.
     */
    entries?: pulumi.Input<pulumi.Input<inputs.ec2.ManagedPrefixListEntry>[]>;
    /**
     * Maximum number of entries that this prefix list can contain.
     */
    maxEntries?: pulumi.Input<number>;
    /**
     * Name of this resource. The name must not start with `com.amazonaws`.
     */
    name?: pulumi.Input<string>;
    /**
     * ID of the AWS account that owns this prefix list.
     */
    ownerId?: pulumi.Input<string>;
    /**
     * Map of tags to assign to this resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    tagsAll?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Latest version of this prefix list.
     */
    version?: pulumi.Input<number>;
}
/**
 * The set of arguments for constructing a ManagedPrefixList resource.
 */
export interface ManagedPrefixListArgs {
    /**
     * Address family (`IPv4` or `IPv6`) of this prefix list.
     */
    addressFamily: pulumi.Input<string>;
    /**
     * Configuration block for prefix list entry. Detailed below. Different entries may have overlapping CIDR blocks, but a particular CIDR should not be duplicated.
     */
    entries?: pulumi.Input<pulumi.Input<inputs.ec2.ManagedPrefixListEntry>[]>;
    /**
     * Maximum number of entries that this prefix list can contain.
     */
    maxEntries: pulumi.Input<number>;
    /**
     * Name of this resource. The name must not start with `com.amazonaws`.
     */
    name?: pulumi.Input<string>;
    /**
     * Map of tags to assign to this resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
