"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAmiIdsOutput = exports.getAmiIds = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Use this data source to get a list of AMI IDs matching the specified criteria.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const ubuntu = pulumi.output(aws.ec2.getAmiIds({
 *     filters: [{
 *         name: "name",
 *         values: ["ubuntu/images/ubuntu-*-*-amd64-server-*"],
 *     }],
 *     owners: ["099720109477"],
 * }));
 * ```
 */
function getAmiIds(args, opts) {
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:ec2/getAmiIds:getAmiIds", {
        "executableUsers": args.executableUsers,
        "filters": args.filters,
        "nameRegex": args.nameRegex,
        "owners": args.owners,
        "sortAscending": args.sortAscending,
    }, opts);
}
exports.getAmiIds = getAmiIds;
function getAmiIdsOutput(args, opts) {
    return pulumi.output(args).apply(a => getAmiIds(a, opts));
}
exports.getAmiIdsOutput = getAmiIdsOutput;
//# sourceMappingURL=getAmiIds.js.map