"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getVpnGatewayOutput = exports.getVpnGateway = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * The VPN Gateway data source provides details about
 * a specific VPN gateway.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const selected = aws.ec2.getVpnGateway({
 *     filters: [{
 *         name: "tag:Name",
 *         values: ["vpn-gw"],
 *     }],
 * });
 * export const vpnGatewayId = selected.then(selected => selected.id);
 * ```
 */
function getVpnGateway(args, opts) {
    args = args || {};
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:ec2/getVpnGateway:getVpnGateway", {
        "amazonSideAsn": args.amazonSideAsn,
        "attachedVpcId": args.attachedVpcId,
        "availabilityZone": args.availabilityZone,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
        "tags": args.tags,
    }, opts);
}
exports.getVpnGateway = getVpnGateway;
function getVpnGatewayOutput(args, opts) {
    return pulumi.output(args).apply(a => getVpnGateway(a, opts));
}
exports.getVpnGatewayOutput = getVpnGatewayOutput;
//# sourceMappingURL=getVpnGateway.js.map