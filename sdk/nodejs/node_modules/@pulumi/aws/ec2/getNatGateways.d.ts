import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * This resource can be useful for getting back a list of NAT gateway ids to be referenced elsewhere.
 */
export declare function getNatGateways(args?: GetNatGatewaysArgs, opts?: pulumi.InvokeOptions): Promise<GetNatGatewaysResult>;
/**
 * A collection of arguments for invoking getNatGateways.
 */
export interface GetNatGatewaysArgs {
    /**
     * Custom filter block as described below.
     */
    filters?: inputs.ec2.GetNatGatewaysFilter[];
    /**
     * Map of tags, each pair of which must exactly match
     * a pair on the desired NAT Gateways.
     */
    tags?: {
        [key: string]: string;
    };
    /**
     * VPC ID that you want to filter from.
     */
    vpcId?: string;
}
/**
 * A collection of values returned by getNatGateways.
 */
export interface GetNatGatewaysResult {
    readonly filters?: outputs.ec2.GetNatGatewaysFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * List of all the NAT gateway ids found.
     */
    readonly ids: string[];
    readonly tags: {
        [key: string]: string;
    };
    readonly vpcId?: string;
}
export declare function getNatGatewaysOutput(args?: GetNatGatewaysOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNatGatewaysResult>;
/**
 * A collection of arguments for invoking getNatGateways.
 */
export interface GetNatGatewaysOutputArgs {
    /**
     * Custom filter block as described below.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.ec2.GetNatGatewaysFilterArgs>[]>;
    /**
     * Map of tags, each pair of which must exactly match
     * a pair on the desired NAT Gateways.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * VPC ID that you want to filter from.
     */
    vpcId?: pulumi.Input<string>;
}
