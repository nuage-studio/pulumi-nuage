"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getManagedPrefixListOutput = exports.getManagedPrefixList = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * `aws.ec2.ManagedPrefixList` provides details about a specific AWS prefix list or
 * customer-managed prefix list in the current region.
 *
 * ## Example Usage
 * ### Find the regional DynamoDB prefix list
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const current = pulumi.output(aws.getRegion());
 * const example = current.apply(current => aws.ec2.getManagedPrefixList({
 *     name: `com.amazonaws.${current.name!}.dynamodb`,
 * }));
 * ```
 * ### Find a managed prefix list using filters
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = pulumi.output(aws.ec2.getManagedPrefixList({
 *     filters: [{
 *         name: "prefix-list-name",
 *         values: ["my-prefix-list"],
 *     }],
 * }));
 * ```
 */
function getManagedPrefixList(args, opts) {
    args = args || {};
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:ec2/getManagedPrefixList:getManagedPrefixList", {
        "filters": args.filters,
        "id": args.id,
        "name": args.name,
        "tags": args.tags,
    }, opts);
}
exports.getManagedPrefixList = getManagedPrefixList;
function getManagedPrefixListOutput(args, opts) {
    return pulumi.output(args).apply(a => getManagedPrefixList(a, opts));
}
exports.getManagedPrefixListOutput = getManagedPrefixListOutput;
//# sourceMappingURL=getManagedPrefixList.js.map