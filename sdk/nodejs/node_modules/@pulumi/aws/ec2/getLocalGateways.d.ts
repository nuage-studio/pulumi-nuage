import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Provides information for multiple EC2 Local Gateways, such as their identifiers.
 *
 * ## Example Usage
 *
 * The following example retrieves Local Gateways with a resource tag of `service` set to `production`.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const fooLocalGateways = aws.ec2.getLocalGateways({
 *     tags: {
 *         service: "production",
 *     },
 * });
 * export const foo = fooLocalGateways.then(fooLocalGateways => fooLocalGateways.ids);
 * ```
 */
export declare function getLocalGateways(args?: GetLocalGatewaysArgs, opts?: pulumi.InvokeOptions): Promise<GetLocalGatewaysResult>;
/**
 * A collection of arguments for invoking getLocalGateways.
 */
export interface GetLocalGatewaysArgs {
    /**
     * Custom filter block as described below.
     */
    filters?: inputs.ec2.GetLocalGatewaysFilter[];
    /**
     * Mapping of tags, each pair of which must exactly match
     * a pair on the desired local_gateways.
     */
    tags?: {
        [key: string]: string;
    };
}
/**
 * A collection of values returned by getLocalGateways.
 */
export interface GetLocalGatewaysResult {
    readonly filters?: outputs.ec2.GetLocalGatewaysFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Set of all the Local Gateway identifiers
     */
    readonly ids: string[];
    readonly tags: {
        [key: string]: string;
    };
}
export declare function getLocalGatewaysOutput(args?: GetLocalGatewaysOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLocalGatewaysResult>;
/**
 * A collection of arguments for invoking getLocalGateways.
 */
export interface GetLocalGatewaysOutputArgs {
    /**
     * Custom filter block as described below.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.ec2.GetLocalGatewaysFilterArgs>[]>;
    /**
     * Mapping of tags, each pair of which must exactly match
     * a pair on the desired local_gateways.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
