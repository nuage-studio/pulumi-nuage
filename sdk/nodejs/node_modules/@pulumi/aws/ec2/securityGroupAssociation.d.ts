import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const sgEc2 = new aws.ec2.SecurityGroupAssociation("sgEc2", {
 *     vpcEndpointId: aws_vpc_endpoint.ec2.id,
 *     securityGroupId: aws_security_group.sg.id,
 * });
 * ```
 */
export declare class SecurityGroupAssociation extends pulumi.CustomResource {
    /**
     * Get an existing SecurityGroupAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SecurityGroupAssociationState, opts?: pulumi.CustomResourceOptions): SecurityGroupAssociation;
    /**
     * Returns true if the given object is an instance of SecurityGroupAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SecurityGroupAssociation;
    /**
     * Whether this association should replace the association with the VPC's default security group that is created when no security groups are specified during VPC endpoint creation. At most 1 association per-VPC endpoint should be configured with `replaceDefaultAssociation = true`.
     */
    readonly replaceDefaultAssociation: pulumi.Output<boolean | undefined>;
    /**
     * The ID of the security group to be associated with the VPC endpoint.
     */
    readonly securityGroupId: pulumi.Output<string>;
    /**
     * The ID of the VPC endpoint with which the security group will be associated.
     */
    readonly vpcEndpointId: pulumi.Output<string>;
    /**
     * Create a SecurityGroupAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecurityGroupAssociationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering SecurityGroupAssociation resources.
 */
export interface SecurityGroupAssociationState {
    /**
     * Whether this association should replace the association with the VPC's default security group that is created when no security groups are specified during VPC endpoint creation. At most 1 association per-VPC endpoint should be configured with `replaceDefaultAssociation = true`.
     */
    replaceDefaultAssociation?: pulumi.Input<boolean>;
    /**
     * The ID of the security group to be associated with the VPC endpoint.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * The ID of the VPC endpoint with which the security group will be associated.
     */
    vpcEndpointId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a SecurityGroupAssociation resource.
 */
export interface SecurityGroupAssociationArgs {
    /**
     * Whether this association should replace the association with the VPC's default security group that is created when no security groups are specified during VPC endpoint creation. At most 1 association per-VPC endpoint should be configured with `replaceDefaultAssociation = true`.
     */
    replaceDefaultAssociation?: pulumi.Input<boolean>;
    /**
     * The ID of the security group to be associated with the VPC endpoint.
     */
    securityGroupId: pulumi.Input<string>;
    /**
     * The ID of the VPC endpoint with which the security group will be associated.
     */
    vpcEndpointId: pulumi.Input<string>;
}
