"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getVpcEndpointOutput = exports.getVpcEndpoint = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * The VPC Endpoint data source provides details about
 * a specific VPC endpoint.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const s3 = aws.ec2.getVpcEndpoint({
 *     vpcId: aws_vpc.foo.id,
 *     serviceName: "com.amazonaws.us-west-2.s3",
 * });
 * const privateS3 = new aws.ec2.VpcEndpointRouteTableAssociation("privateS3", {
 *     vpcEndpointId: s3.then(s3 => s3.id),
 *     routeTableId: aws_route_table["private"].id,
 * });
 * ```
 */
function getVpcEndpoint(args, opts) {
    args = args || {};
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:ec2/getVpcEndpoint:getVpcEndpoint", {
        "filters": args.filters,
        "id": args.id,
        "serviceName": args.serviceName,
        "state": args.state,
        "tags": args.tags,
        "vpcId": args.vpcId,
    }, opts);
}
exports.getVpcEndpoint = getVpcEndpoint;
function getVpcEndpointOutput(args, opts) {
    return pulumi.output(args).apply(a => getVpcEndpoint(a, opts));
}
exports.getVpcEndpointOutput = getVpcEndpointOutput;
//# sourceMappingURL=getVpcEndpoint.js.map