"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNatGatewayOutput = exports.getNatGateway = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides details about a specific Nat Gateway.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const config = new pulumi.Config();
 * const subnetId = config.requireObject("subnetId");
 * const default = aws.ec2.getNatGateway({
 *     subnetId: aws_subnet["public"].id,
 * });
 * ```
 *
 * Usage with tags:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const default = aws.ec2.getNatGateway({
 *     subnetId: aws_subnet["public"].id,
 *     tags: {
 *         Name: "gw NAT",
 *     },
 * });
 * ```
 */
function getNatGateway(args, opts) {
    args = args || {};
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:ec2/getNatGateway:getNatGateway", {
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
        "subnetId": args.subnetId,
        "tags": args.tags,
        "vpcId": args.vpcId,
    }, opts);
}
exports.getNatGateway = getNatGateway;
function getNatGatewayOutput(args, opts) {
    return pulumi.output(args).apply(a => getNatGateway(a, opts));
}
exports.getNatGatewayOutput = getNatGatewayOutput;
//# sourceMappingURL=getNatGateway.js.map