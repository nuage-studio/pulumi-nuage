"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VpcEndpointConnectionAccepter = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a resource to accept a pending VPC Endpoint Connection accept request to VPC Endpoint Service.
 *
 * ## Example Usage
 * ### Accept cross-account request
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleVpcEndpointService = new aws.ec2.VpcEndpointService("exampleVpcEndpointService", {
 *     acceptanceRequired: false,
 *     networkLoadBalancerArns: [aws_lb.example.arn],
 * });
 * const exampleVpcEndpoint = new aws.ec2.VpcEndpoint("exampleVpcEndpoint", {
 *     vpcId: aws_vpc.test_alternate.id,
 *     serviceName: aws_vpc_endpoint_service.test.service_name,
 *     vpcEndpointType: "Interface",
 *     privateDnsEnabled: false,
 *     securityGroupIds: [aws_security_group.test.id],
 * }, {
 *     provider: "aws.alternate",
 * });
 * const exampleVpcEndpointConnectionAccepter = new aws.ec2.VpcEndpointConnectionAccepter("exampleVpcEndpointConnectionAccepter", {
 *     vpcEndpointServiceId: exampleVpcEndpointService.id,
 *     vpcEndpointId: exampleVpcEndpoint.id,
 * });
 * ```
 *
 * ## Import
 *
 * VPC Endpoint Services can be imported using ID of the connection, which is the `VPC Endpoint Service ID` and `VPC Endpoint ID` separated by underscore (`_`). e.g.
 *
 * ```sh
 *  $ pulumi import aws:ec2/vpcEndpointConnectionAccepter:VpcEndpointConnectionAccepter foo vpce-svc-0f97a19d3fa8220bc_vpce-010601a6db371e263
 * ```
 */
class VpcEndpointConnectionAccepter extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["vpcEndpointId"] = state ? state.vpcEndpointId : undefined;
            resourceInputs["vpcEndpointServiceId"] = state ? state.vpcEndpointServiceId : undefined;
            resourceInputs["vpcEndpointState"] = state ? state.vpcEndpointState : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.vpcEndpointId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcEndpointId'");
            }
            if ((!args || args.vpcEndpointServiceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcEndpointServiceId'");
            }
            resourceInputs["vpcEndpointId"] = args ? args.vpcEndpointId : undefined;
            resourceInputs["vpcEndpointServiceId"] = args ? args.vpcEndpointServiceId : undefined;
            resourceInputs["vpcEndpointState"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpcEndpointConnectionAccepter.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing VpcEndpointConnectionAccepter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new VpcEndpointConnectionAccepter(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of VpcEndpointConnectionAccepter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpcEndpointConnectionAccepter.__pulumiType;
    }
}
exports.VpcEndpointConnectionAccepter = VpcEndpointConnectionAccepter;
/** @internal */
VpcEndpointConnectionAccepter.__pulumiType = 'aws:ec2/vpcEndpointConnectionAccepter:VpcEndpointConnectionAccepter';
//# sourceMappingURL=vpcEndpointConnectionAccepter.js.map