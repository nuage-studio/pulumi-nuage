"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResourceLfTags = exports.Resource = exports.Permissions = exports.LfTag = exports.getResourceOutput = exports.getResource = exports.getPermissionsOutput = exports.getPermissions = exports.getDataLakeSettingsOutput = exports.getDataLakeSettings = exports.DataLakeSettings = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.DataLakeSettings = null;
exports.getDataLakeSettings = null;
exports.getDataLakeSettingsOutput = null;
exports.getPermissions = null;
exports.getPermissionsOutput = null;
exports.getResource = null;
exports.getResourceOutput = null;
exports.LfTag = null;
exports.Permissions = null;
exports.Resource = null;
exports.ResourceLfTags = null;
utilities.lazyLoad(exports, ["DataLakeSettings"], () => require("./dataLakeSettings"));
utilities.lazyLoad(exports, ["getDataLakeSettings", "getDataLakeSettingsOutput"], () => require("./getDataLakeSettings"));
utilities.lazyLoad(exports, ["getPermissions", "getPermissionsOutput"], () => require("./getPermissions"));
utilities.lazyLoad(exports, ["getResource", "getResourceOutput"], () => require("./getResource"));
utilities.lazyLoad(exports, ["LfTag"], () => require("./lfTag"));
utilities.lazyLoad(exports, ["Permissions"], () => require("./permissions"));
utilities.lazyLoad(exports, ["Resource"], () => require("./resource"));
utilities.lazyLoad(exports, ["ResourceLfTags"], () => require("./resourceLfTags"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:lakeformation/dataLakeSettings:DataLakeSettings":
                return new exports.DataLakeSettings(name, undefined, { urn });
            case "aws:lakeformation/lfTag:LfTag":
                return new exports.LfTag(name, undefined, { urn });
            case "aws:lakeformation/permissions:Permissions":
                return new exports.Permissions(name, undefined, { urn });
            case "aws:lakeformation/resource:Resource":
                return new exports.Resource(name, undefined, { urn });
            case "aws:lakeformation/resourceLfTags:ResourceLfTags":
                return new exports.ResourceLfTags(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "lakeformation/dataLakeSettings", _module);
pulumi.runtime.registerResourceModule("aws", "lakeformation/lfTag", _module);
pulumi.runtime.registerResourceModule("aws", "lakeformation/permissions", _module);
pulumi.runtime.registerResourceModule("aws", "lakeformation/resource", _module);
pulumi.runtime.registerResourceModule("aws", "lakeformation/resourceLfTags", _module);
//# sourceMappingURL=index.js.map