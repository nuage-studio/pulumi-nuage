"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VocabularyFilter = exports.Vocabulary = exports.MedicalVocabulary = exports.LanguageModel = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.LanguageModel = null;
exports.MedicalVocabulary = null;
exports.Vocabulary = null;
exports.VocabularyFilter = null;
utilities.lazyLoad(exports, ["LanguageModel"], () => require("./languageModel"));
utilities.lazyLoad(exports, ["MedicalVocabulary"], () => require("./medicalVocabulary"));
utilities.lazyLoad(exports, ["Vocabulary"], () => require("./vocabulary"));
utilities.lazyLoad(exports, ["VocabularyFilter"], () => require("./vocabularyFilter"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:transcribe/languageModel:LanguageModel":
                return new exports.LanguageModel(name, undefined, { urn });
            case "aws:transcribe/medicalVocabulary:MedicalVocabulary":
                return new exports.MedicalVocabulary(name, undefined, { urn });
            case "aws:transcribe/vocabulary:Vocabulary":
                return new exports.Vocabulary(name, undefined, { urn });
            case "aws:transcribe/vocabularyFilter:VocabularyFilter":
                return new exports.VocabularyFilter(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "transcribe/languageModel", _module);
pulumi.runtime.registerResourceModule("aws", "transcribe/medicalVocabulary", _module);
pulumi.runtime.registerResourceModule("aws", "transcribe/vocabulary", _module);
pulumi.runtime.registerResourceModule("aws", "transcribe/vocabularyFilter", _module);
//# sourceMappingURL=index.js.map