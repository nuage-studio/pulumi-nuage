import * as pulumi from "@pulumi/pulumi";
/**
 * Provides an AutoScaling Schedule resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const foobarGroup = new aws.autoscaling.Group("foobarGroup", {
 *     availabilityZones: ["us-west-2a"],
 *     maxSize: 1,
 *     minSize: 1,
 *     healthCheckGracePeriod: 300,
 *     healthCheckType: "ELB",
 *     forceDelete: true,
 *     terminationPolicies: ["OldestInstance"],
 * });
 * const foobarSchedule = new aws.autoscaling.Schedule("foobarSchedule", {
 *     scheduledActionName: "foobar",
 *     minSize: 0,
 *     maxSize: 1,
 *     desiredCapacity: 0,
 *     startTime: "2016-12-11T18:00:00Z",
 *     endTime: "2016-12-12T06:00:00Z",
 *     autoscalingGroupName: foobarGroup.name,
 * });
 * ```
 *
 * ## Import
 *
 * AutoScaling ScheduledAction can be imported using the `auto-scaling-group-name` and `scheduled-action-name`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:autoscaling/schedule:Schedule resource-name auto-scaling-group-name/scheduled-action-name
 * ```
 */
export declare class Schedule extends pulumi.CustomResource {
    /**
     * Get an existing Schedule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ScheduleState, opts?: pulumi.CustomResourceOptions): Schedule;
    /**
     * Returns true if the given object is an instance of Schedule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Schedule;
    /**
     * ARN assigned by AWS to the autoscaling schedule.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * Name or ARN of the Auto Scaling group.
     */
    readonly autoscalingGroupName: pulumi.Output<string>;
    /**
     * Number of EC2 instances that should be running in the group. Default 0.  Set to -1 if you don't want to change the desired capacity at the scheduled time.
     */
    readonly desiredCapacity: pulumi.Output<number>;
    /**
     * Time for this action to end, in "YYYY-MM-DDThh:mm:ssZ" format in UTC/GMT only (for example, 2014-06-01T00:00:00Z ).
     * If you try to schedule your action in the past, Auto Scaling returns an error message.
     */
    readonly endTime: pulumi.Output<string>;
    /**
     * Maximum size for the Auto Scaling group. Default 0.
     * Set to -1 if you don't want to change the maximum size at the scheduled time.
     */
    readonly maxSize: pulumi.Output<number>;
    /**
     * Minimum size for the Auto Scaling group. Default 0.
     * Set to -1 if you don't want to change the minimum size at the scheduled time.
     */
    readonly minSize: pulumi.Output<number>;
    /**
     * Time when recurring future actions will start. Start time is specified by the user following the Unix cron syntax format.
     */
    readonly recurrence: pulumi.Output<string>;
    /**
     * Name of this scaling action.
     */
    readonly scheduledActionName: pulumi.Output<string>;
    /**
     * Time for this action to start, in "YYYY-MM-DDThh:mm:ssZ" format in UTC/GMT only (for example, 2014-06-01T00:00:00Z ).
     * If you try to schedule your action in the past, Auto Scaling returns an error message.
     */
    readonly startTime: pulumi.Output<string>;
    /**
     * The timezone for the cron expression. Valid values are the canonical names of the IANA time zones (such as Etc/GMT+9 or Pacific/Tahiti).
     */
    readonly timeZone: pulumi.Output<string>;
    /**
     * Create a Schedule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScheduleArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Schedule resources.
 */
export interface ScheduleState {
    /**
     * ARN assigned by AWS to the autoscaling schedule.
     */
    arn?: pulumi.Input<string>;
    /**
     * Name or ARN of the Auto Scaling group.
     */
    autoscalingGroupName?: pulumi.Input<string>;
    /**
     * Number of EC2 instances that should be running in the group. Default 0.  Set to -1 if you don't want to change the desired capacity at the scheduled time.
     */
    desiredCapacity?: pulumi.Input<number>;
    /**
     * Time for this action to end, in "YYYY-MM-DDThh:mm:ssZ" format in UTC/GMT only (for example, 2014-06-01T00:00:00Z ).
     * If you try to schedule your action in the past, Auto Scaling returns an error message.
     */
    endTime?: pulumi.Input<string>;
    /**
     * Maximum size for the Auto Scaling group. Default 0.
     * Set to -1 if you don't want to change the maximum size at the scheduled time.
     */
    maxSize?: pulumi.Input<number>;
    /**
     * Minimum size for the Auto Scaling group. Default 0.
     * Set to -1 if you don't want to change the minimum size at the scheduled time.
     */
    minSize?: pulumi.Input<number>;
    /**
     * Time when recurring future actions will start. Start time is specified by the user following the Unix cron syntax format.
     */
    recurrence?: pulumi.Input<string>;
    /**
     * Name of this scaling action.
     */
    scheduledActionName?: pulumi.Input<string>;
    /**
     * Time for this action to start, in "YYYY-MM-DDThh:mm:ssZ" format in UTC/GMT only (for example, 2014-06-01T00:00:00Z ).
     * If you try to schedule your action in the past, Auto Scaling returns an error message.
     */
    startTime?: pulumi.Input<string>;
    /**
     * The timezone for the cron expression. Valid values are the canonical names of the IANA time zones (such as Etc/GMT+9 or Pacific/Tahiti).
     */
    timeZone?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Schedule resource.
 */
export interface ScheduleArgs {
    /**
     * Name or ARN of the Auto Scaling group.
     */
    autoscalingGroupName: pulumi.Input<string>;
    /**
     * Number of EC2 instances that should be running in the group. Default 0.  Set to -1 if you don't want to change the desired capacity at the scheduled time.
     */
    desiredCapacity?: pulumi.Input<number>;
    /**
     * Time for this action to end, in "YYYY-MM-DDThh:mm:ssZ" format in UTC/GMT only (for example, 2014-06-01T00:00:00Z ).
     * If you try to schedule your action in the past, Auto Scaling returns an error message.
     */
    endTime?: pulumi.Input<string>;
    /**
     * Maximum size for the Auto Scaling group. Default 0.
     * Set to -1 if you don't want to change the maximum size at the scheduled time.
     */
    maxSize?: pulumi.Input<number>;
    /**
     * Minimum size for the Auto Scaling group. Default 0.
     * Set to -1 if you don't want to change the minimum size at the scheduled time.
     */
    minSize?: pulumi.Input<number>;
    /**
     * Time when recurring future actions will start. Start time is specified by the user following the Unix cron syntax format.
     */
    recurrence?: pulumi.Input<string>;
    /**
     * Name of this scaling action.
     */
    scheduledActionName: pulumi.Input<string>;
    /**
     * Time for this action to start, in "YYYY-MM-DDThh:mm:ssZ" format in UTC/GMT only (for example, 2014-06-01T00:00:00Z ).
     * If you try to schedule your action in the past, Auto Scaling returns an error message.
     */
    startTime?: pulumi.Input<string>;
    /**
     * The timezone for the cron expression. Valid values are the canonical names of the IANA time zones (such as Etc/GMT+9 or Pacific/Tahiti).
     */
    timeZone?: pulumi.Input<string>;
}
