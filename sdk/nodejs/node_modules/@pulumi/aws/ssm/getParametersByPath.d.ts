import * as pulumi from "@pulumi/pulumi";
export declare function getParametersByPath(args: GetParametersByPathArgs, opts?: pulumi.InvokeOptions): Promise<GetParametersByPathResult>;
/**
 * A collection of arguments for invoking getParametersByPath.
 */
export interface GetParametersByPathArgs {
    /**
     * Prefix path of the parameter.
     */
    path: string;
    /**
     * Whether to recursively return parameters under `path`. Defaults to `false`.
     */
    recursive?: boolean;
    /**
     * Whether to return decrypted `SecureString` value. Defaults to `true`.
     */
    withDecryption?: boolean;
}
/**
 * A collection of values returned by getParametersByPath.
 */
export interface GetParametersByPathResult {
    readonly arns: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly names: string[];
    readonly path: string;
    readonly recursive?: boolean;
    readonly types: string[];
    readonly values: string[];
    readonly withDecryption?: boolean;
}
export declare function getParametersByPathOutput(args: GetParametersByPathOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetParametersByPathResult>;
/**
 * A collection of arguments for invoking getParametersByPath.
 */
export interface GetParametersByPathOutputArgs {
    /**
     * Prefix path of the parameter.
     */
    path: pulumi.Input<string>;
    /**
     * Whether to recursively return parameters under `path`. Defaults to `false`.
     */
    recursive?: pulumi.Input<boolean>;
    /**
     * Whether to return decrypted `SecureString` value. Defaults to `true`.
     */
    withDecryption?: pulumi.Input<boolean>;
}
