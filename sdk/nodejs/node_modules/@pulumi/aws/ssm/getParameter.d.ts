import * as pulumi from "@pulumi/pulumi";
/**
 * Provides an SSM Parameter data source.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const foo = pulumi.output(aws.ssm.getParameter({
 *     name: "foo",
 * }));
 * ```
 *
 * > **Note:** The data source is currently following the behavior of the [SSM API](https://docs.aws.amazon.com/sdk-for-go/api/service/ssm/#Parameter) to return a string value, regardless of parameter type.
 */
export declare function getParameter(args: GetParameterArgs, opts?: pulumi.InvokeOptions): Promise<GetParameterResult>;
/**
 * A collection of arguments for invoking getParameter.
 */
export interface GetParameterArgs {
    /**
     * Name of the parameter.
     */
    name: string;
    /**
     * Whether to return decrypted `SecureString` value. Defaults to `true`.
     */
    withDecryption?: boolean;
}
/**
 * A collection of values returned by getParameter.
 */
export interface GetParameterResult {
    readonly arn: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly type: string;
    readonly value: string;
    readonly version: number;
    readonly withDecryption?: boolean;
}
export declare function getParameterOutput(args: GetParameterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetParameterResult>;
/**
 * A collection of arguments for invoking getParameter.
 */
export interface GetParameterOutputArgs {
    /**
     * Name of the parameter.
     */
    name: pulumi.Input<string>;
    /**
     * Whether to return decrypted `SecureString` value. Defaults to `true`.
     */
    withDecryption?: pulumi.Input<boolean>;
}
