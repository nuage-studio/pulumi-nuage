"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VoiceConnectorGroup = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Creates an Amazon Chime Voice Connector group under the administrator's AWS account. You can associate Amazon Chime Voice Connectors with the Amazon Chime Voice Connector group by including VoiceConnectorItems in the request.
 *
 * You can include Amazon Chime Voice Connectors from different AWS Regions in your group. This creates a fault tolerant mechanism for fallback in case of availability events.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const vc1 = new aws.chime.VoiceConnector("vc1", {
 *     requireEncryption: true,
 *     awsRegion: "us-east-1",
 * });
 * const vc2 = new aws.chime.VoiceConnector("vc2", {
 *     requireEncryption: true,
 *     awsRegion: "us-west-2",
 * });
 * const group = new aws.chime.VoiceConnectorGroup("group", {connectors: [
 *     {
 *         voiceConnectorId: vc1.id,
 *         priority: 1,
 *     },
 *     {
 *         voiceConnectorId: vc2.id,
 *         priority: 3,
 *     },
 * ]});
 * ```
 *
 * ## Import
 *
 * Configuration Recorder can be imported using the name, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:chime/voiceConnectorGroup:VoiceConnectorGroup default example
 * ```
 */
class VoiceConnectorGroup extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["connectors"] = state ? state.connectors : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["connectors"] = args ? args.connectors : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VoiceConnectorGroup.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing VoiceConnectorGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new VoiceConnectorGroup(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of VoiceConnectorGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VoiceConnectorGroup.__pulumiType;
    }
}
exports.VoiceConnectorGroup = VoiceConnectorGroup;
/** @internal */
VoiceConnectorGroup.__pulumiType = 'aws:chime/voiceConnectorGroup:VoiceConnectorGroup';
//# sourceMappingURL=voiceConnectorGroup.js.map