"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.User = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides an Amazon Connect User resource. For more information see
 * [Amazon Connect: Getting Started](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-get-started.html)
 *
 * ## Example Usage
 * ### Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.connect.User("example", {
 *     instanceId: aws_connect_instance.example.id,
 *     password: "Password123",
 *     routingProfileId: aws_connect_routing_profile.example.routing_profile_id,
 *     securityProfileIds: [aws_connect_security_profile.example.security_profile_id],
 *     identityInfo: {
 *         firstName: "example",
 *         lastName: "example2",
 *     },
 *     phoneConfig: {
 *         afterContactWorkTimeLimit: 0,
 *         phoneType: "SOFT_PHONE",
 *     },
 * });
 * ```
 * ### With hierarchyGroupId
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.connect.User("example", {
 *     instanceId: aws_connect_instance.example.id,
 *     password: "Password123",
 *     routingProfileId: aws_connect_routing_profile.example.routing_profile_id,
 *     hierarchyGroupId: aws_connect_user_hierarchy_group.example.hierarchy_group_id,
 *     securityProfileIds: [aws_connect_security_profile.example.security_profile_id],
 *     identityInfo: {
 *         firstName: "example",
 *         lastName: "example2",
 *     },
 *     phoneConfig: {
 *         afterContactWorkTimeLimit: 0,
 *         phoneType: "SOFT_PHONE",
 *     },
 * });
 * ```
 * ### With identityInfo filled
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.connect.User("example", {
 *     instanceId: aws_connect_instance.example.id,
 *     password: "Password123",
 *     routingProfileId: aws_connect_routing_profile.example.routing_profile_id,
 *     securityProfileIds: [aws_connect_security_profile.example.security_profile_id],
 *     identityInfo: {
 *         email: "example@example.com",
 *         firstName: "example",
 *         lastName: "example2",
 *     },
 *     phoneConfig: {
 *         afterContactWorkTimeLimit: 0,
 *         phoneType: "SOFT_PHONE",
 *     },
 * });
 * ```
 * ### With phoneConfig phone type as desk phone
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.connect.User("example", {
 *     instanceId: aws_connect_instance.example.id,
 *     password: "Password123",
 *     routingProfileId: aws_connect_routing_profile.example.routing_profile_id,
 *     securityProfileIds: [aws_connect_security_profile.example.security_profile_id],
 *     phoneConfig: {
 *         afterContactWorkTimeLimit: 0,
 *         phoneType: "SOFT_PHONE",
 *     },
 * });
 * ```
 * ### With multiple Security profile ids specified in securityProfileIds
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.connect.User("example", {
 *     instanceId: aws_connect_instance.example.id,
 *     password: "Password123",
 *     routingProfileId: aws_connect_routing_profile.example.routing_profile_id,
 *     securityProfileIds: [
 *         aws_connect_security_profile.example.security_profile_id,
 *         aws_connect_security_profile.example2.security_profile_id,
 *     ],
 *     phoneConfig: {
 *         afterContactWorkTimeLimit: 0,
 *         autoAccept: false,
 *         deskPhoneNumber: "+112345678912",
 *         phoneType: "DESK_PHONE",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Amazon Connect Users can be imported using the `instance_id` and `user_id` separated by a colon (`:`), e.g.,
 *
 * ```sh
 *  $ pulumi import aws:connect/user:User example f1288a1f-6193-445a-b47e-af739b2:c1d4e5f6-1b3c-1b3c-1b3c-c1d4e5f6c1d4e5
 * ```
 */
class User extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["directoryUserId"] = state ? state.directoryUserId : undefined;
            resourceInputs["hierarchyGroupId"] = state ? state.hierarchyGroupId : undefined;
            resourceInputs["identityInfo"] = state ? state.identityInfo : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["phoneConfig"] = state ? state.phoneConfig : undefined;
            resourceInputs["routingProfileId"] = state ? state.routingProfileId : undefined;
            resourceInputs["securityProfileIds"] = state ? state.securityProfileIds : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["userId"] = state ? state.userId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.phoneConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'phoneConfig'");
            }
            if ((!args || args.routingProfileId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'routingProfileId'");
            }
            if ((!args || args.securityProfileIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityProfileIds'");
            }
            resourceInputs["directoryUserId"] = args ? args.directoryUserId : undefined;
            resourceInputs["hierarchyGroupId"] = args ? args.hierarchyGroupId : undefined;
            resourceInputs["identityInfo"] = args ? args.identityInfo : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["password"] = args ? args.password : undefined;
            resourceInputs["phoneConfig"] = args ? args.phoneConfig : undefined;
            resourceInputs["routingProfileId"] = args ? args.routingProfileId : undefined;
            resourceInputs["securityProfileIds"] = args ? args.securityProfileIds : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
            resourceInputs["userId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(User.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing User resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new User(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of User.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === User.__pulumiType;
    }
}
exports.User = User;
/** @internal */
User.__pulumiType = 'aws:connect/user:User';
//# sourceMappingURL=user.js.map