import * as pulumi from "@pulumi/pulumi";
/**
 * Provides an Amazon Connect Lambda Function Association. For more information see
 * [Amazon Connect: Getting Started](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-get-started.html) and [Invoke AWS Lambda functions](https://docs.aws.amazon.com/connect/latest/adminguide/connect-lambda-functions.html).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.connect.LambdaFunctionAssociation("example", {
 *     functionArn: aws_lambda_function.example.arn,
 *     instanceId: aws_connect_instance.example.id,
 * });
 * ```
 *
 * ## Import
 *
 * `aws_connect_lambda_function_association` can be imported using the `instance_id` and `function_arn` separated by a comma (`,`) e.g.,
 *
 * ```sh
 *  $ pulumi import aws:connect/lambdaFunctionAssociation:LambdaFunctionAssociation example aaaaaaaa-bbbb-cccc-dddd-111111111111,arn:aws:lambda:us-west-2:123456789123:function:example
 * ```
 */
export declare class LambdaFunctionAssociation extends pulumi.CustomResource {
    /**
     * Get an existing LambdaFunctionAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LambdaFunctionAssociationState, opts?: pulumi.CustomResourceOptions): LambdaFunctionAssociation;
    /**
     * Returns true if the given object is an instance of LambdaFunctionAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is LambdaFunctionAssociation;
    /**
     * Amazon Resource Name (ARN) of the Lambda Function, omitting any version or alias qualifier.
     */
    readonly functionArn: pulumi.Output<string>;
    /**
     * The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
     */
    readonly instanceId: pulumi.Output<string>;
    /**
     * Create a LambdaFunctionAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LambdaFunctionAssociationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering LambdaFunctionAssociation resources.
 */
export interface LambdaFunctionAssociationState {
    /**
     * Amazon Resource Name (ARN) of the Lambda Function, omitting any version or alias qualifier.
     */
    functionArn?: pulumi.Input<string>;
    /**
     * The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
     */
    instanceId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a LambdaFunctionAssociation resource.
 */
export interface LambdaFunctionAssociationArgs {
    /**
     * Amazon Resource Name (ARN) of the Lambda Function, omitting any version or alias qualifier.
     */
    functionArn: pulumi.Input<string>;
    /**
     * The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
     */
    instanceId: pulumi.Input<string>;
}
