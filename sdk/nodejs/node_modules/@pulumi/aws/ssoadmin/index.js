"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.PermissionSetInlinePolicy = exports.PermissionSet = exports.ManagedPolicyAttachment = exports.getPermissionSetOutput = exports.getPermissionSet = exports.getInstances = exports.CustomerManagedPolicyAttachment = exports.AccountAssignment = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.AccountAssignment = null;
exports.CustomerManagedPolicyAttachment = null;
exports.getInstances = null;
exports.getPermissionSet = null;
exports.getPermissionSetOutput = null;
exports.ManagedPolicyAttachment = null;
exports.PermissionSet = null;
exports.PermissionSetInlinePolicy = null;
utilities.lazyLoad(exports, ["AccountAssignment"], () => require("./accountAssignment"));
utilities.lazyLoad(exports, ["CustomerManagedPolicyAttachment"], () => require("./customerManagedPolicyAttachment"));
utilities.lazyLoad(exports, ["getInstances"], () => require("./getInstances"));
utilities.lazyLoad(exports, ["getPermissionSet", "getPermissionSetOutput"], () => require("./getPermissionSet"));
utilities.lazyLoad(exports, ["ManagedPolicyAttachment"], () => require("./managedPolicyAttachment"));
utilities.lazyLoad(exports, ["PermissionSet"], () => require("./permissionSet"));
utilities.lazyLoad(exports, ["PermissionSetInlinePolicy"], () => require("./permissionSetInlinePolicy"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:ssoadmin/accountAssignment:AccountAssignment":
                return new exports.AccountAssignment(name, undefined, { urn });
            case "aws:ssoadmin/customerManagedPolicyAttachment:CustomerManagedPolicyAttachment":
                return new exports.CustomerManagedPolicyAttachment(name, undefined, { urn });
            case "aws:ssoadmin/managedPolicyAttachment:ManagedPolicyAttachment":
                return new exports.ManagedPolicyAttachment(name, undefined, { urn });
            case "aws:ssoadmin/permissionSet:PermissionSet":
                return new exports.PermissionSet(name, undefined, { urn });
            case "aws:ssoadmin/permissionSetInlinePolicy:PermissionSetInlinePolicy":
                return new exports.PermissionSetInlinePolicy(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "ssoadmin/accountAssignment", _module);
pulumi.runtime.registerResourceModule("aws", "ssoadmin/customerManagedPolicyAttachment", _module);
pulumi.runtime.registerResourceModule("aws", "ssoadmin/managedPolicyAttachment", _module);
pulumi.runtime.registerResourceModule("aws", "ssoadmin/permissionSet", _module);
pulumi.runtime.registerResourceModule("aws", "ssoadmin/permissionSetInlinePolicy", _module);
//# sourceMappingURL=index.js.map