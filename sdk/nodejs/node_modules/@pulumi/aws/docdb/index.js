"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubnetGroup = exports.GlobalCluster = exports.getOrderableDbInstanceOutput = exports.getOrderableDbInstance = exports.getEngineVersionOutput = exports.getEngineVersion = exports.EventSubscription = exports.ClusterSnapshot = exports.ClusterParameterGroup = exports.ClusterInstance = exports.Cluster = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Cluster = null;
exports.ClusterInstance = null;
exports.ClusterParameterGroup = null;
exports.ClusterSnapshot = null;
exports.EventSubscription = null;
exports.getEngineVersion = null;
exports.getEngineVersionOutput = null;
exports.getOrderableDbInstance = null;
exports.getOrderableDbInstanceOutput = null;
exports.GlobalCluster = null;
exports.SubnetGroup = null;
utilities.lazyLoad(exports, ["Cluster"], () => require("./cluster"));
utilities.lazyLoad(exports, ["ClusterInstance"], () => require("./clusterInstance"));
utilities.lazyLoad(exports, ["ClusterParameterGroup"], () => require("./clusterParameterGroup"));
utilities.lazyLoad(exports, ["ClusterSnapshot"], () => require("./clusterSnapshot"));
utilities.lazyLoad(exports, ["EventSubscription"], () => require("./eventSubscription"));
utilities.lazyLoad(exports, ["getEngineVersion", "getEngineVersionOutput"], () => require("./getEngineVersion"));
utilities.lazyLoad(exports, ["getOrderableDbInstance", "getOrderableDbInstanceOutput"], () => require("./getOrderableDbInstance"));
utilities.lazyLoad(exports, ["GlobalCluster"], () => require("./globalCluster"));
utilities.lazyLoad(exports, ["SubnetGroup"], () => require("./subnetGroup"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:docdb/cluster:Cluster":
                return new exports.Cluster(name, undefined, { urn });
            case "aws:docdb/clusterInstance:ClusterInstance":
                return new exports.ClusterInstance(name, undefined, { urn });
            case "aws:docdb/clusterParameterGroup:ClusterParameterGroup":
                return new exports.ClusterParameterGroup(name, undefined, { urn });
            case "aws:docdb/clusterSnapshot:ClusterSnapshot":
                return new exports.ClusterSnapshot(name, undefined, { urn });
            case "aws:docdb/eventSubscription:EventSubscription":
                return new exports.EventSubscription(name, undefined, { urn });
            case "aws:docdb/globalCluster:GlobalCluster":
                return new exports.GlobalCluster(name, undefined, { urn });
            case "aws:docdb/subnetGroup:SubnetGroup":
                return new exports.SubnetGroup(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "docdb/cluster", _module);
pulumi.runtime.registerResourceModule("aws", "docdb/clusterInstance", _module);
pulumi.runtime.registerResourceModule("aws", "docdb/clusterParameterGroup", _module);
pulumi.runtime.registerResourceModule("aws", "docdb/clusterSnapshot", _module);
pulumi.runtime.registerResourceModule("aws", "docdb/eventSubscription", _module);
pulumi.runtime.registerResourceModule("aws", "docdb/globalCluster", _module);
pulumi.runtime.registerResourceModule("aws", "docdb/subnetGroup", _module);
//# sourceMappingURL=index.js.map