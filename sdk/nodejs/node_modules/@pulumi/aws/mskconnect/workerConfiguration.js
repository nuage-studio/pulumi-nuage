"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkerConfiguration = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides an Amazon MSK Connect Worker Configuration Resource.
 *
 * ## Example Usage
 * ### Basic configuration
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.mskconnect.WorkerConfiguration("example", {
 *     propertiesFileContent: `key.converter=org.apache.kafka.connect.storage.StringConverter
 * value.converter=org.apache.kafka.connect.storage.StringConverter
 * `,
 * });
 * ```
 *
 * ## Import
 *
 * MSK Connect Worker Configuration can be imported using the plugin's `arn`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:mskconnect/workerConfiguration:WorkerConfiguration example 'arn:aws:kafkaconnect:eu-central-1:123456789012:worker-configuration/example/8848493b-7fcc-478c-a646-4a52634e3378-4'
 * ```
 */
class WorkerConfiguration extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["latestRevision"] = state ? state.latestRevision : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["propertiesFileContent"] = state ? state.propertiesFileContent : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.propertiesFileContent === undefined) && !opts.urn) {
                throw new Error("Missing required property 'propertiesFileContent'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["propertiesFileContent"] = args ? args.propertiesFileContent : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["latestRevision"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WorkerConfiguration.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing WorkerConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new WorkerConfiguration(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of WorkerConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkerConfiguration.__pulumiType;
    }
}
exports.WorkerConfiguration = WorkerConfiguration;
/** @internal */
WorkerConfiguration.__pulumiType = 'aws:mskconnect/workerConfiguration:WorkerConfiguration';
//# sourceMappingURL=workerConfiguration.js.map