import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 * ### Basic Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const main = new aws.Provider("main", {region: "us-west-2"});
 * const alt = new aws.Provider("alt", {region: "us-east-2"});
 * const exampleTable = new aws.dynamodb.Table("exampleTable", {
 *     hashKey: "BrodoBaggins",
 *     billingMode: "PAY_PER_REQUEST",
 *     streamEnabled: true,
 *     streamViewType: "NEW_AND_OLD_IMAGES",
 *     attributes: [{
 *         name: "BrodoBaggins",
 *         type: "S",
 *     }],
 * }, {
 *     provider: "aws.main",
 * });
 * const exampleTableReplica = new aws.dynamodb.TableReplica("exampleTableReplica", {
 *     globalTableArn: exampleTable.arn,
 *     tags: {
 *         Name: "IZPAWS",
 *         Pozo: "Amargo",
 *     },
 * }, {
 *     provider: "aws.alt",
 * });
 * ```
 *
 * ## Import
 *
 * DynamoDB table replicas can be imported using the `table-name:main-region`, _e.g._,
 *
 * ```sh
 *  $ pulumi import aws:dynamodb/tableReplica:TableReplica example TestTable:us-west-2
 * ```
 */
export declare class TableReplica extends pulumi.CustomResource {
    /**
     * Get an existing TableReplica resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TableReplicaState, opts?: pulumi.CustomResourceOptions): TableReplica;
    /**
     * Returns true if the given object is an instance of TableReplica.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is TableReplica;
    /**
     * ARN of the table replica.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * ARN of the _main_ or global table which this resource will replicate.
     */
    readonly globalTableArn: pulumi.Output<string>;
    /**
     * ARN of the CMK that should be used for the AWS KMS encryption.
     */
    readonly kmsKeyArn: pulumi.Output<string>;
    /**
     * Whether to enable Point In Time Recovery for the replica. Default is `false`.
     */
    readonly pointInTimeRecovery: pulumi.Output<boolean | undefined>;
    /**
     * Storage class of the table replica. Valid values are `STANDARD` and `STANDARD_INFREQUENT_ACCESS`. If not used, the table replica will use the same class as the global table.
     */
    readonly tableClassOverride: pulumi.Output<string | undefined>;
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    readonly tagsAll: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * Create a TableReplica resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TableReplicaArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering TableReplica resources.
 */
export interface TableReplicaState {
    /**
     * ARN of the table replica.
     */
    arn?: pulumi.Input<string>;
    /**
     * ARN of the _main_ or global table which this resource will replicate.
     */
    globalTableArn?: pulumi.Input<string>;
    /**
     * ARN of the CMK that should be used for the AWS KMS encryption.
     */
    kmsKeyArn?: pulumi.Input<string>;
    /**
     * Whether to enable Point In Time Recovery for the replica. Default is `false`.
     */
    pointInTimeRecovery?: pulumi.Input<boolean>;
    /**
     * Storage class of the table replica. Valid values are `STANDARD` and `STANDARD_INFREQUENT_ACCESS`. If not used, the table replica will use the same class as the global table.
     */
    tableClassOverride?: pulumi.Input<string>;
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    tagsAll?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
/**
 * The set of arguments for constructing a TableReplica resource.
 */
export interface TableReplicaArgs {
    /**
     * ARN of the _main_ or global table which this resource will replicate.
     */
    globalTableArn: pulumi.Input<string>;
    /**
     * ARN of the CMK that should be used for the AWS KMS encryption.
     */
    kmsKeyArn?: pulumi.Input<string>;
    /**
     * Whether to enable Point In Time Recovery for the replica. Default is `false`.
     */
    pointInTimeRecovery?: pulumi.Input<boolean>;
    /**
     * Storage class of the table replica. Valid values are `STANDARD` and `STANDARD_INFREQUENT_ACCESS`. If not used, the table replica will use the same class as the global table.
     */
    tableClassOverride?: pulumi.Input<string>;
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
