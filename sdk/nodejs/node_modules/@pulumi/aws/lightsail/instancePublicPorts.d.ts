import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Opens ports for a specific Amazon Lightsail instance, and specifies the IP addresses allowed to connect to the instance through the ports, and the protocol.
 *
 * > See [What is Amazon Lightsail?](https://lightsail.aws.amazon.com/ls/docs/getting-started/article/what-is-amazon-lightsail) for more information.
 *
 * > **Note:** Lightsail is currently only supported in a limited number of AWS Regions, please see ["Regions and Availability Zones in Amazon Lightsail"](https://lightsail.aws.amazon.com/ls/docs/overview/article/understanding-regions-and-availability-zones-in-amazon-lightsail) for more details.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const testInstance = new aws.lightsail.Instance("testInstance", {
 *     availabilityZone: data.aws_availability_zones.available.names[0],
 *     blueprintId: "amazon_linux",
 *     bundleId: "nano_1_0",
 * });
 * const testInstancePublicPorts = new aws.lightsail.InstancePublicPorts("testInstancePublicPorts", {
 *     instanceName: testInstance.name,
 *     portInfos: [{
 *         protocol: "tcp",
 *         fromPort: 80,
 *         toPort: 80,
 *     }],
 * });
 * ```
 */
export declare class InstancePublicPorts extends pulumi.CustomResource {
    /**
     * Get an existing InstancePublicPorts resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstancePublicPortsState, opts?: pulumi.CustomResourceOptions): InstancePublicPorts;
    /**
     * Returns true if the given object is an instance of InstancePublicPorts.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is InstancePublicPorts;
    /**
     * Name of the Lightsail Instance.
     */
    readonly instanceName: pulumi.Output<string>;
    /**
     * Configuration block with port information. AWS closes all currently open ports that are not included in the `portInfo`. Detailed below.
     */
    readonly portInfos: pulumi.Output<outputs.lightsail.InstancePublicPortsPortInfo[]>;
    /**
     * Create a InstancePublicPorts resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstancePublicPortsArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering InstancePublicPorts resources.
 */
export interface InstancePublicPortsState {
    /**
     * Name of the Lightsail Instance.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * Configuration block with port information. AWS closes all currently open ports that are not included in the `portInfo`. Detailed below.
     */
    portInfos?: pulumi.Input<pulumi.Input<inputs.lightsail.InstancePublicPortsPortInfo>[]>;
}
/**
 * The set of arguments for constructing a InstancePublicPorts resource.
 */
export interface InstancePublicPortsArgs {
    /**
     * Name of the Lightsail Instance.
     */
    instanceName: pulumi.Input<string>;
    /**
     * Configuration block with port information. AWS closes all currently open ports that are not included in the `portInfo`. Detailed below.
     */
    portInfos: pulumi.Input<pulumi.Input<inputs.lightsail.InstancePublicPortsPortInfo>[]>;
}
