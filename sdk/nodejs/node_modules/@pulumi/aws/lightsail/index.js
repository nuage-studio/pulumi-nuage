"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.StaticIpAttachment = exports.StaticIp = exports.KeyPair = exports.InstancePublicPorts = exports.Instance = exports.Domain = exports.Database = exports.ContainerServiceDeploymentVersion = exports.ContainerService = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.ContainerService = null;
exports.ContainerServiceDeploymentVersion = null;
exports.Database = null;
exports.Domain = null;
exports.Instance = null;
exports.InstancePublicPorts = null;
exports.KeyPair = null;
exports.StaticIp = null;
exports.StaticIpAttachment = null;
utilities.lazyLoad(exports, ["ContainerService"], () => require("./containerService"));
utilities.lazyLoad(exports, ["ContainerServiceDeploymentVersion"], () => require("./containerServiceDeploymentVersion"));
utilities.lazyLoad(exports, ["Database"], () => require("./database"));
utilities.lazyLoad(exports, ["Domain"], () => require("./domain"));
utilities.lazyLoad(exports, ["Instance"], () => require("./instance"));
utilities.lazyLoad(exports, ["InstancePublicPorts"], () => require("./instancePublicPorts"));
utilities.lazyLoad(exports, ["KeyPair"], () => require("./keyPair"));
utilities.lazyLoad(exports, ["StaticIp"], () => require("./staticIp"));
utilities.lazyLoad(exports, ["StaticIpAttachment"], () => require("./staticIpAttachment"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:lightsail/containerService:ContainerService":
                return new exports.ContainerService(name, undefined, { urn });
            case "aws:lightsail/containerServiceDeploymentVersion:ContainerServiceDeploymentVersion":
                return new exports.ContainerServiceDeploymentVersion(name, undefined, { urn });
            case "aws:lightsail/database:Database":
                return new exports.Database(name, undefined, { urn });
            case "aws:lightsail/domain:Domain":
                return new exports.Domain(name, undefined, { urn });
            case "aws:lightsail/instance:Instance":
                return new exports.Instance(name, undefined, { urn });
            case "aws:lightsail/instancePublicPorts:InstancePublicPorts":
                return new exports.InstancePublicPorts(name, undefined, { urn });
            case "aws:lightsail/keyPair:KeyPair":
                return new exports.KeyPair(name, undefined, { urn });
            case "aws:lightsail/staticIp:StaticIp":
                return new exports.StaticIp(name, undefined, { urn });
            case "aws:lightsail/staticIpAttachment:StaticIpAttachment":
                return new exports.StaticIpAttachment(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "lightsail/containerService", _module);
pulumi.runtime.registerResourceModule("aws", "lightsail/containerServiceDeploymentVersion", _module);
pulumi.runtime.registerResourceModule("aws", "lightsail/database", _module);
pulumi.runtime.registerResourceModule("aws", "lightsail/domain", _module);
pulumi.runtime.registerResourceModule("aws", "lightsail/instance", _module);
pulumi.runtime.registerResourceModule("aws", "lightsail/instancePublicPorts", _module);
pulumi.runtime.registerResourceModule("aws", "lightsail/keyPair", _module);
pulumi.runtime.registerResourceModule("aws", "lightsail/staticIp", _module);
pulumi.runtime.registerResourceModule("aws", "lightsail/staticIpAttachment", _module);
//# sourceMappingURL=index.js.map