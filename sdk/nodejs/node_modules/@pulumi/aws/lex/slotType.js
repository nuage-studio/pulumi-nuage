"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SlotType = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides an Amazon Lex Slot Type resource. For more information see
 * [Amazon Lex: How It Works](https://docs.aws.amazon.com/lex/latest/dg/how-it-works.html)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const flowerTypes = new aws.lex.SlotType("flower_types", {
 *     createVersion: true,
 *     description: "Types of flowers to order",
 *     enumerationValues: [
 *         {
 *             synonyms: [
 *                 "Lirium",
 *                 "Martagon",
 *             ],
 *             value: "lilies",
 *         },
 *         {
 *             synonyms: [
 *                 "Eduardoregelia",
 *                 "Podonix",
 *             ],
 *             value: "tulips",
 *         },
 *     ],
 *     name: "FlowerTypes",
 *     valueSelectionStrategy: "ORIGINAL_VALUE",
 * });
 * ```
 *
 * ## Import
 *
 * Slot types can be imported using their name.
 *
 * ```sh
 *  $ pulumi import aws:lex/slotType:SlotType flower_types FlowerTypes
 * ```
 */
class SlotType extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["checksum"] = state ? state.checksum : undefined;
            resourceInputs["createVersion"] = state ? state.createVersion : undefined;
            resourceInputs["createdDate"] = state ? state.createdDate : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enumerationValues"] = state ? state.enumerationValues : undefined;
            resourceInputs["lastUpdatedDate"] = state ? state.lastUpdatedDate : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["valueSelectionStrategy"] = state ? state.valueSelectionStrategy : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.enumerationValues === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enumerationValues'");
            }
            resourceInputs["createVersion"] = args ? args.createVersion : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enumerationValues"] = args ? args.enumerationValues : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["valueSelectionStrategy"] = args ? args.valueSelectionStrategy : undefined;
            resourceInputs["checksum"] = undefined /*out*/;
            resourceInputs["createdDate"] = undefined /*out*/;
            resourceInputs["lastUpdatedDate"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SlotType.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing SlotType resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SlotType(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SlotType.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SlotType.__pulumiType;
    }
}
exports.SlotType = SlotType;
/** @internal */
SlotType.__pulumiType = 'aws:lex/slotType:SlotType';
//# sourceMappingURL=slotType.js.map