import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleCluster = new aws.msk.Cluster("exampleCluster", {clientAuthentication: {
 *     sasl: {
 *         scram: true,
 *     },
 * }});
 * const exampleKey = new aws.kms.Key("exampleKey", {description: "Example Key for MSK Cluster Scram Secret Association"});
 * const exampleSecret = new aws.secretsmanager.Secret("exampleSecret", {kmsKeyId: exampleKey.keyId});
 * const exampleSecretVersion = new aws.secretsmanager.SecretVersion("exampleSecretVersion", {
 *     secretId: exampleSecret.id,
 *     secretString: JSON.stringify({
 *         username: "user",
 *         password: "pass",
 *     }),
 * });
 * const exampleScramSecretAssociation = new aws.msk.ScramSecretAssociation("exampleScramSecretAssociation", {
 *     clusterArn: exampleCluster.arn,
 *     secretArnLists: [exampleSecret.arn],
 * }, {
 *     dependsOn: [exampleSecretVersion],
 * });
 * const exampleSecretPolicy = new aws.secretsmanager.SecretPolicy("exampleSecretPolicy", {
 *     secretArn: exampleSecret.arn,
 *     policy: pulumi.interpolate`{
 *   "Version" : "2012-10-17",
 *   "Statement" : [ {
 *     "Sid": "AWSKafkaResourcePolicy",
 *     "Effect" : "Allow",
 *     "Principal" : {
 *       "Service" : "kafka.amazonaws.com"
 *     },
 *     "Action" : "secretsmanager:getSecretValue",
 *     "Resource" : "${exampleSecret.arn}"
 *   } ]
 * }
 * `,
 * });
 * ```
 *
 * ## Import
 *
 * MSK SCRAM Secret Associations can be imported using the `id` e.g.,
 *
 * ```sh
 *  $ pulumi import aws:msk/scramSecretAssociation:ScramSecretAssociation example arn:aws:kafka:us-west-2:123456789012:cluster/example/279c0212-d057-4dba-9aa9-1c4e5a25bfc7-3
 * ```
 */
export declare class ScramSecretAssociation extends pulumi.CustomResource {
    /**
     * Get an existing ScramSecretAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ScramSecretAssociationState, opts?: pulumi.CustomResourceOptions): ScramSecretAssociation;
    /**
     * Returns true if the given object is an instance of ScramSecretAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ScramSecretAssociation;
    /**
     * Amazon Resource Name (ARN) of the MSK cluster.
     */
    readonly clusterArn: pulumi.Output<string>;
    /**
     * List of AWS Secrets Manager secret ARNs.
     */
    readonly secretArnLists: pulumi.Output<string[]>;
    /**
     * Create a ScramSecretAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScramSecretAssociationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ScramSecretAssociation resources.
 */
export interface ScramSecretAssociationState {
    /**
     * Amazon Resource Name (ARN) of the MSK cluster.
     */
    clusterArn?: pulumi.Input<string>;
    /**
     * List of AWS Secrets Manager secret ARNs.
     */
    secretArnLists?: pulumi.Input<pulumi.Input<string>[]>;
}
/**
 * The set of arguments for constructing a ScramSecretAssociation resource.
 */
export interface ScramSecretAssociationArgs {
    /**
     * Amazon Resource Name (ARN) of the MSK cluster.
     */
    clusterArn: pulumi.Input<string>;
    /**
     * List of AWS Secrets Manager secret ARNs.
     */
    secretArnLists: pulumi.Input<pulumi.Input<string>[]>;
}
