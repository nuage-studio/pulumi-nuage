import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Provides an FIS Experiment Template, which can be used to run an experiment.
 * An experiment template contains one or more actions to run on specified targets during an experiment.
 * It also contains the stop conditions that prevent the experiment from going out of bounds.
 * See [Amazon Fault Injection Simulator](https://docs.aws.amazon.com/fis/index.html)
 * for more information.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.fis.ExperimentTemplate("example", {
 *     description: "example",
 *     roleArn: aws_iam_role.example.arn,
 *     stopConditions: [{
 *         source: "none",
 *     }],
 *     actions: [{
 *         name: "example-action",
 *         actionId: "aws:ec2:terminate-instances",
 *         target: {
 *             key: "Instances",
 *             value: "example-target",
 *         },
 *     }],
 *     targets: [{
 *         name: "example-target",
 *         resourceType: "aws:ec2:instance",
 *         selectionMode: "COUNT(1)",
 *         resourceTags: [{
 *             key: "env",
 *             value: "example",
 *         }],
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * FIS Experiment Templates can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import aws:fis/experimentTemplate:ExperimentTemplate template EXT123AbCdEfGhIjK
 * ```
 */
export declare class ExperimentTemplate extends pulumi.CustomResource {
    /**
     * Get an existing ExperimentTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ExperimentTemplateState, opts?: pulumi.CustomResourceOptions): ExperimentTemplate;
    /**
     * Returns true if the given object is an instance of ExperimentTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ExperimentTemplate;
    /**
     * Action to be performed during an experiment. See below.
     */
    readonly actions: pulumi.Output<outputs.fis.ExperimentTemplateAction[]>;
    /**
     * Description of the action.
     */
    readonly description: pulumi.Output<string>;
    /**
     * ARN of an IAM role that grants the AWS FIS service permission to perform service actions on your behalf.
     */
    readonly roleArn: pulumi.Output<string>;
    /**
     * When an ongoing experiment should be stopped. See below.
     */
    readonly stopConditions: pulumi.Output<outputs.fis.ExperimentTemplateStopCondition[]>;
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    readonly tagsAll: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * Action's target, if applicable. See below.
     */
    readonly targets: pulumi.Output<outputs.fis.ExperimentTemplateTarget[] | undefined>;
    /**
     * Create a ExperimentTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExperimentTemplateArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ExperimentTemplate resources.
 */
export interface ExperimentTemplateState {
    /**
     * Action to be performed during an experiment. See below.
     */
    actions?: pulumi.Input<pulumi.Input<inputs.fis.ExperimentTemplateAction>[]>;
    /**
     * Description of the action.
     */
    description?: pulumi.Input<string>;
    /**
     * ARN of an IAM role that grants the AWS FIS service permission to perform service actions on your behalf.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * When an ongoing experiment should be stopped. See below.
     */
    stopConditions?: pulumi.Input<pulumi.Input<inputs.fis.ExperimentTemplateStopCondition>[]>;
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    tagsAll?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Action's target, if applicable. See below.
     */
    targets?: pulumi.Input<pulumi.Input<inputs.fis.ExperimentTemplateTarget>[]>;
}
/**
 * The set of arguments for constructing a ExperimentTemplate resource.
 */
export interface ExperimentTemplateArgs {
    /**
     * Action to be performed during an experiment. See below.
     */
    actions: pulumi.Input<pulumi.Input<inputs.fis.ExperimentTemplateAction>[]>;
    /**
     * Description of the action.
     */
    description: pulumi.Input<string>;
    /**
     * ARN of an IAM role that grants the AWS FIS service permission to perform service actions on your behalf.
     */
    roleArn: pulumi.Input<string>;
    /**
     * When an ongoing experiment should be stopped. See below.
     */
    stopConditions: pulumi.Input<pulumi.Input<inputs.fis.ExperimentTemplateStopCondition>[]>;
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Action's target, if applicable. See below.
     */
    targets?: pulumi.Input<pulumi.Input<inputs.fis.ExperimentTemplateTarget>[]>;
}
