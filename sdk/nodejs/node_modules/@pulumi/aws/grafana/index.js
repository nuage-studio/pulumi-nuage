"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkspaceSamlConfiguration = exports.WorkspaceApiKey = exports.Workspace = exports.RoleAssociation = exports.LicenseAssociation = exports.getWorkspaceOutput = exports.getWorkspace = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.getWorkspace = null;
exports.getWorkspaceOutput = null;
exports.LicenseAssociation = null;
exports.RoleAssociation = null;
exports.Workspace = null;
exports.WorkspaceApiKey = null;
exports.WorkspaceSamlConfiguration = null;
utilities.lazyLoad(exports, ["getWorkspace", "getWorkspaceOutput"], () => require("./getWorkspace"));
utilities.lazyLoad(exports, ["LicenseAssociation"], () => require("./licenseAssociation"));
utilities.lazyLoad(exports, ["RoleAssociation"], () => require("./roleAssociation"));
utilities.lazyLoad(exports, ["Workspace"], () => require("./workspace"));
utilities.lazyLoad(exports, ["WorkspaceApiKey"], () => require("./workspaceApiKey"));
utilities.lazyLoad(exports, ["WorkspaceSamlConfiguration"], () => require("./workspaceSamlConfiguration"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:grafana/licenseAssociation:LicenseAssociation":
                return new exports.LicenseAssociation(name, undefined, { urn });
            case "aws:grafana/roleAssociation:RoleAssociation":
                return new exports.RoleAssociation(name, undefined, { urn });
            case "aws:grafana/workspace:Workspace":
                return new exports.Workspace(name, undefined, { urn });
            case "aws:grafana/workspaceApiKey:WorkspaceApiKey":
                return new exports.WorkspaceApiKey(name, undefined, { urn });
            case "aws:grafana/workspaceSamlConfiguration:WorkspaceSamlConfiguration":
                return new exports.WorkspaceSamlConfiguration(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "grafana/licenseAssociation", _module);
pulumi.runtime.registerResourceModule("aws", "grafana/roleAssociation", _module);
pulumi.runtime.registerResourceModule("aws", "grafana/workspace", _module);
pulumi.runtime.registerResourceModule("aws", "grafana/workspaceApiKey", _module);
pulumi.runtime.registerResourceModule("aws", "grafana/workspaceSamlConfiguration", _module);
//# sourceMappingURL=index.js.map