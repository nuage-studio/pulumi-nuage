"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkspaceSamlConfiguration = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides an Amazon Managed Grafana workspace SAML configuration resource.
 *
 * ## Example Usage
 * ### Basic configuration
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const assume = new aws.iam.Role("assume", {assumeRolePolicy: JSON.stringify({
 *     Version: "2012-10-17",
 *     Statement: [{
 *         Action: "sts:AssumeRole",
 *         Effect: "Allow",
 *         Sid: "",
 *         Principal: {
 *             Service: "grafana.amazonaws.com",
 *         },
 *     }],
 * })});
 * const exampleWorkspace = new aws.grafana.Workspace("exampleWorkspace", {
 *     accountAccessType: "CURRENT_ACCOUNT",
 *     authenticationProviders: ["SAML"],
 *     permissionType: "SERVICE_MANAGED",
 *     roleArn: assume.arn,
 * });
 * const exampleWorkspaceSamlConfiguration = new aws.grafana.WorkspaceSamlConfiguration("exampleWorkspaceSamlConfiguration", {
 *     editorRoleValues: ["editor"],
 *     idpMetadataUrl: "https://my_idp_metadata.url",
 *     workspaceId: exampleWorkspace.id,
 * });
 * ```
 *
 * ## Import
 *
 * Grafana Workspace SAML configuration can be imported using the workspace's `id`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:grafana/workspaceSamlConfiguration:WorkspaceSamlConfiguration example g-2054c75a02
 * ```
 */
class WorkspaceSamlConfiguration extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["adminRoleValues"] = state ? state.adminRoleValues : undefined;
            resourceInputs["allowedOrganizations"] = state ? state.allowedOrganizations : undefined;
            resourceInputs["editorRoleValues"] = state ? state.editorRoleValues : undefined;
            resourceInputs["emailAssertion"] = state ? state.emailAssertion : undefined;
            resourceInputs["groupsAssertion"] = state ? state.groupsAssertion : undefined;
            resourceInputs["idpMetadataUrl"] = state ? state.idpMetadataUrl : undefined;
            resourceInputs["idpMetadataXml"] = state ? state.idpMetadataXml : undefined;
            resourceInputs["loginAssertion"] = state ? state.loginAssertion : undefined;
            resourceInputs["loginValidityDuration"] = state ? state.loginValidityDuration : undefined;
            resourceInputs["nameAssertion"] = state ? state.nameAssertion : undefined;
            resourceInputs["orgAssertion"] = state ? state.orgAssertion : undefined;
            resourceInputs["roleAssertion"] = state ? state.roleAssertion : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["workspaceId"] = state ? state.workspaceId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.editorRoleValues === undefined) && !opts.urn) {
                throw new Error("Missing required property 'editorRoleValues'");
            }
            if ((!args || args.workspaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceId'");
            }
            resourceInputs["adminRoleValues"] = args ? args.adminRoleValues : undefined;
            resourceInputs["allowedOrganizations"] = args ? args.allowedOrganizations : undefined;
            resourceInputs["editorRoleValues"] = args ? args.editorRoleValues : undefined;
            resourceInputs["emailAssertion"] = args ? args.emailAssertion : undefined;
            resourceInputs["groupsAssertion"] = args ? args.groupsAssertion : undefined;
            resourceInputs["idpMetadataUrl"] = args ? args.idpMetadataUrl : undefined;
            resourceInputs["idpMetadataXml"] = args ? args.idpMetadataXml : undefined;
            resourceInputs["loginAssertion"] = args ? args.loginAssertion : undefined;
            resourceInputs["loginValidityDuration"] = args ? args.loginValidityDuration : undefined;
            resourceInputs["nameAssertion"] = args ? args.nameAssertion : undefined;
            resourceInputs["orgAssertion"] = args ? args.orgAssertion : undefined;
            resourceInputs["roleAssertion"] = args ? args.roleAssertion : undefined;
            resourceInputs["workspaceId"] = args ? args.workspaceId : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WorkspaceSamlConfiguration.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing WorkspaceSamlConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new WorkspaceSamlConfiguration(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of WorkspaceSamlConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkspaceSamlConfiguration.__pulumiType;
    }
}
exports.WorkspaceSamlConfiguration = WorkspaceSamlConfiguration;
/** @internal */
WorkspaceSamlConfiguration.__pulumiType = 'aws:grafana/workspaceSamlConfiguration:WorkspaceSamlConfiguration';
//# sourceMappingURL=workspaceSamlConfiguration.js.map