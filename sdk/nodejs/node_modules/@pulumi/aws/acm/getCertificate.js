"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCertificateOutput = exports.getCertificate = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Use this data source to get the ARN of a certificate in AWS Certificate
 * Manager (ACM), you can reference
 * it by domain without having to hard code the ARNs as input.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * // Find a certificate that is issued
 * const issued = pulumi.output(aws.acm.getCertificate({
 *     domain: "tf.example.com",
 *     statuses: ["ISSUED"],
 * }));
 * // Find a certificate issued by (not imported into) ACM
 * const amazonIssued = pulumi.output(aws.acm.getCertificate({
 *     domain: "tf.example.com",
 *     mostRecent: true,
 *     types: ["AMAZON_ISSUED"],
 * }));
 * // Find a RSA 4096 bit certificate
 * const rsa4096 = pulumi.output(aws.acm.getCertificate({
 *     domain: "tf.example.com",
 *     keyTypes: ["RSA_4096"],
 * }));
 * ```
 */
function getCertificate(args, opts) {
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:acm/getCertificate:getCertificate", {
        "domain": args.domain,
        "keyTypes": args.keyTypes,
        "mostRecent": args.mostRecent,
        "statuses": args.statuses,
        "tags": args.tags,
        "types": args.types,
    }, opts);
}
exports.getCertificate = getCertificate;
function getCertificateOutput(args, opts) {
    return pulumi.output(args).apply(a => getCertificate(a, opts));
}
exports.getCertificateOutput = getCertificateOutput;
//# sourceMappingURL=getCertificate.js.map