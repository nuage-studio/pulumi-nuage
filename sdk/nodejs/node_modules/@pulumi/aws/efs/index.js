"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReplicationConfiguration = exports.MountTarget = exports.getMountTargetOutput = exports.getMountTarget = exports.getFileSystemOutput = exports.getFileSystem = exports.getAccessPointsOutput = exports.getAccessPoints = exports.getAccessPointOutput = exports.getAccessPoint = exports.FileSystemPolicy = exports.FileSystem = exports.BackupPolicy = exports.AccessPoint = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.AccessPoint = null;
exports.BackupPolicy = null;
exports.FileSystem = null;
exports.FileSystemPolicy = null;
exports.getAccessPoint = null;
exports.getAccessPointOutput = null;
exports.getAccessPoints = null;
exports.getAccessPointsOutput = null;
exports.getFileSystem = null;
exports.getFileSystemOutput = null;
exports.getMountTarget = null;
exports.getMountTargetOutput = null;
exports.MountTarget = null;
exports.ReplicationConfiguration = null;
utilities.lazyLoad(exports, ["AccessPoint"], () => require("./accessPoint"));
utilities.lazyLoad(exports, ["BackupPolicy"], () => require("./backupPolicy"));
utilities.lazyLoad(exports, ["FileSystem"], () => require("./fileSystem"));
utilities.lazyLoad(exports, ["FileSystemPolicy"], () => require("./fileSystemPolicy"));
utilities.lazyLoad(exports, ["getAccessPoint", "getAccessPointOutput"], () => require("./getAccessPoint"));
utilities.lazyLoad(exports, ["getAccessPoints", "getAccessPointsOutput"], () => require("./getAccessPoints"));
utilities.lazyLoad(exports, ["getFileSystem", "getFileSystemOutput"], () => require("./getFileSystem"));
utilities.lazyLoad(exports, ["getMountTarget", "getMountTargetOutput"], () => require("./getMountTarget"));
utilities.lazyLoad(exports, ["MountTarget"], () => require("./mountTarget"));
utilities.lazyLoad(exports, ["ReplicationConfiguration"], () => require("./replicationConfiguration"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:efs/accessPoint:AccessPoint":
                return new exports.AccessPoint(name, undefined, { urn });
            case "aws:efs/backupPolicy:BackupPolicy":
                return new exports.BackupPolicy(name, undefined, { urn });
            case "aws:efs/fileSystem:FileSystem":
                return new exports.FileSystem(name, undefined, { urn });
            case "aws:efs/fileSystemPolicy:FileSystemPolicy":
                return new exports.FileSystemPolicy(name, undefined, { urn });
            case "aws:efs/mountTarget:MountTarget":
                return new exports.MountTarget(name, undefined, { urn });
            case "aws:efs/replicationConfiguration:ReplicationConfiguration":
                return new exports.ReplicationConfiguration(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "efs/accessPoint", _module);
pulumi.runtime.registerResourceModule("aws", "efs/backupPolicy", _module);
pulumi.runtime.registerResourceModule("aws", "efs/fileSystem", _module);
pulumi.runtime.registerResourceModule("aws", "efs/fileSystemPolicy", _module);
pulumi.runtime.registerResourceModule("aws", "efs/mountTarget", _module);
pulumi.runtime.registerResourceModule("aws", "efs/replicationConfiguration", _module);
//# sourceMappingURL=index.js.map