"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.RepositoryPermissionsPolicy = exports.Repository = exports.getRepositoryEndpointOutput = exports.getRepositoryEndpoint = exports.getAuthorizationTokenOutput = exports.getAuthorizationToken = exports.DomainPermissions = exports.Domain = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Domain = null;
exports.DomainPermissions = null;
exports.getAuthorizationToken = null;
exports.getAuthorizationTokenOutput = null;
exports.getRepositoryEndpoint = null;
exports.getRepositoryEndpointOutput = null;
exports.Repository = null;
exports.RepositoryPermissionsPolicy = null;
utilities.lazyLoad(exports, ["Domain"], () => require("./domain"));
utilities.lazyLoad(exports, ["DomainPermissions"], () => require("./domainPermissions"));
utilities.lazyLoad(exports, ["getAuthorizationToken", "getAuthorizationTokenOutput"], () => require("./getAuthorizationToken"));
utilities.lazyLoad(exports, ["getRepositoryEndpoint", "getRepositoryEndpointOutput"], () => require("./getRepositoryEndpoint"));
utilities.lazyLoad(exports, ["Repository"], () => require("./repository"));
utilities.lazyLoad(exports, ["RepositoryPermissionsPolicy"], () => require("./repositoryPermissionsPolicy"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:codeartifact/domain:Domain":
                return new exports.Domain(name, undefined, { urn });
            case "aws:codeartifact/domainPermissions:DomainPermissions":
                return new exports.DomainPermissions(name, undefined, { urn });
            case "aws:codeartifact/repository:Repository":
                return new exports.Repository(name, undefined, { urn });
            case "aws:codeartifact/repositoryPermissionsPolicy:RepositoryPermissionsPolicy":
                return new exports.RepositoryPermissionsPolicy(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "codeartifact/domain", _module);
pulumi.runtime.registerResourceModule("aws", "codeartifact/domainPermissions", _module);
pulumi.runtime.registerResourceModule("aws", "codeartifact/repository", _module);
pulumi.runtime.registerResourceModule("aws", "codeartifact/repositoryPermissionsPolicy", _module);
//# sourceMappingURL=index.js.map