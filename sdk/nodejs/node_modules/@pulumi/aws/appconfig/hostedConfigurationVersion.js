"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.HostedConfigurationVersion = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides an AppConfig Hosted Configuration Version resource.
 *
 * ## Example Usage
 * ### Freeform
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.appconfig.HostedConfigurationVersion("example", {
 *     applicationId: aws_appconfig_application.example.id,
 *     configurationProfileId: aws_appconfig_configuration_profile.example.configuration_profile_id,
 *     description: "Example Freeform Hosted Configuration Version",
 *     contentType: "application/json",
 *     content: JSON.stringify({
 *         foo: "bar",
 *         fruit: [
 *             "apple",
 *             "pear",
 *             "orange",
 *         ],
 *         isThingEnabled: true,
 *     }),
 * });
 * ```
 * ### Feature Flags
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.appconfig.HostedConfigurationVersion("example", {
 *     applicationId: aws_appconfig_application.example.id,
 *     configurationProfileId: aws_appconfig_configuration_profile.example.configuration_profile_id,
 *     description: "Example Feature Flag Configuration Version",
 *     contentType: "application/json",
 *     content: JSON.stringify({
 *         flags: {
 *             foo: {
 *                 name: "foo",
 *                 _deprecation: {
 *                     status: "planned",
 *                 },
 *             },
 *             bar: {
 *                 name: "bar",
 *                 attributes: {
 *                     someAttribute: {
 *                         constraints: {
 *                             type: "string",
 *                             required: true,
 *                         },
 *                     },
 *                     someOtherAttribute: {
 *                         constraints: {
 *                             type: "number",
 *                             required: true,
 *                         },
 *                     },
 *                 },
 *             },
 *         },
 *         values: {
 *             foo: {
 *                 enabled: "true",
 *             },
 *             bar: {
 *                 enabled: "true",
 *                 someAttribute: "Hello World",
 *                 someOtherAttribute: 123,
 *             },
 *         },
 *         version: "1",
 *     }),
 * });
 * ```
 *
 * ## Import
 *
 * AppConfig Hosted Configuration Versions can be imported by using the application ID, configuration profile ID, and version number separated by a slash (`/`), e.g.,
 *
 * ```sh
 *  $ pulumi import aws:appconfig/hostedConfigurationVersion:HostedConfigurationVersion example 71abcde/11xxxxx/2
 * ```
 */
class HostedConfigurationVersion extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["applicationId"] = state ? state.applicationId : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["configurationProfileId"] = state ? state.configurationProfileId : undefined;
            resourceInputs["content"] = state ? state.content : undefined;
            resourceInputs["contentType"] = state ? state.contentType : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["versionNumber"] = state ? state.versionNumber : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.applicationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationId'");
            }
            if ((!args || args.configurationProfileId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configurationProfileId'");
            }
            if ((!args || args.content === undefined) && !opts.urn) {
                throw new Error("Missing required property 'content'");
            }
            if ((!args || args.contentType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'contentType'");
            }
            resourceInputs["applicationId"] = args ? args.applicationId : undefined;
            resourceInputs["configurationProfileId"] = args ? args.configurationProfileId : undefined;
            resourceInputs["content"] = args ? args.content : undefined;
            resourceInputs["contentType"] = args ? args.contentType : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["versionNumber"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HostedConfigurationVersion.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing HostedConfigurationVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new HostedConfigurationVersion(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of HostedConfigurationVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HostedConfigurationVersion.__pulumiType;
    }
}
exports.HostedConfigurationVersion = HostedConfigurationVersion;
/** @internal */
HostedConfigurationVersion.__pulumiType = 'aws:appconfig/hostedConfigurationVersion:HostedConfigurationVersion';
//# sourceMappingURL=hostedConfigurationVersion.js.map