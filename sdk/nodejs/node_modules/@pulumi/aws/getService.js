"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getServiceOutput = exports.getService = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Use this data source to compose and decompose AWS service DNS names.
 *
 * ## Example Usage
 * ### Get Service DNS Name
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const current = aws.getRegion({});
 * const test = current.then(current => aws.getService({
 *     region: current.name,
 *     serviceId: "ec2",
 * }));
 * ```
 * ### Use Service Reverse DNS Name to Get Components
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const s3 = pulumi.output(aws.getService({
 *     reverseDnsName: "cn.com.amazonaws.cn-north-1.s3",
 * }));
 * ```
 * ### Determine Regional Support for a Service
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const s3 = pulumi.output(aws.getService({
 *     reverseDnsName: "com.amazonaws.us-gov-west-1.waf",
 * }));
 * ```
 */
function getService(args, opts) {
    args = args || {};
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:index/getService:getService", {
        "dnsName": args.dnsName,
        "region": args.region,
        "reverseDnsName": args.reverseDnsName,
        "reverseDnsPrefix": args.reverseDnsPrefix,
        "serviceId": args.serviceId,
    }, opts);
}
exports.getService = getService;
function getServiceOutput(args, opts) {
    return pulumi.output(args).apply(a => getService(a, opts));
}
exports.getServiceOutput = getServiceOutput;
//# sourceMappingURL=getService.js.map