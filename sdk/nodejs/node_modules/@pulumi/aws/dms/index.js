"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReplicationTask = exports.ReplicationSubnetGroup = exports.ReplicationInstance = exports.EventSubscription = exports.Endpoint = exports.Certificate = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Certificate = null;
exports.Endpoint = null;
exports.EventSubscription = null;
exports.ReplicationInstance = null;
exports.ReplicationSubnetGroup = null;
exports.ReplicationTask = null;
utilities.lazyLoad(exports, ["Certificate"], () => require("./certificate"));
utilities.lazyLoad(exports, ["Endpoint"], () => require("./endpoint"));
utilities.lazyLoad(exports, ["EventSubscription"], () => require("./eventSubscription"));
utilities.lazyLoad(exports, ["ReplicationInstance"], () => require("./replicationInstance"));
utilities.lazyLoad(exports, ["ReplicationSubnetGroup"], () => require("./replicationSubnetGroup"));
utilities.lazyLoad(exports, ["ReplicationTask"], () => require("./replicationTask"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:dms/certificate:Certificate":
                return new exports.Certificate(name, undefined, { urn });
            case "aws:dms/endpoint:Endpoint":
                return new exports.Endpoint(name, undefined, { urn });
            case "aws:dms/eventSubscription:EventSubscription":
                return new exports.EventSubscription(name, undefined, { urn });
            case "aws:dms/replicationInstance:ReplicationInstance":
                return new exports.ReplicationInstance(name, undefined, { urn });
            case "aws:dms/replicationSubnetGroup:ReplicationSubnetGroup":
                return new exports.ReplicationSubnetGroup(name, undefined, { urn });
            case "aws:dms/replicationTask:ReplicationTask":
                return new exports.ReplicationTask(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "dms/certificate", _module);
pulumi.runtime.registerResourceModule("aws", "dms/endpoint", _module);
pulumi.runtime.registerResourceModule("aws", "dms/eventSubscription", _module);
pulumi.runtime.registerResourceModule("aws", "dms/replicationInstance", _module);
pulumi.runtime.registerResourceModule("aws", "dms/replicationSubnetGroup", _module);
pulumi.runtime.registerResourceModule("aws", "dms/replicationTask", _module);
//# sourceMappingURL=index.js.map