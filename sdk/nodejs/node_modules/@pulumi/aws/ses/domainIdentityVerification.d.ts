import * as pulumi from "@pulumi/pulumi";
/**
 * Represents a successful verification of an SES domain identity.
 *
 * Most commonly, this resource is used together with `aws.route53.Record` and
 * `aws.ses.DomainIdentity` to request an SES domain identity,
 * deploy the required DNS verification records, and wait for verification to complete.
 *
 * > **WARNING:** This resource implements a part of the verification workflow. It does not represent a real-world entity in AWS, therefore changing or deleting this resource on its own has no immediate effect.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.ses.DomainIdentity("example", {domain: "example.com"});
 * const exampleAmazonsesVerificationRecord = new aws.route53.Record("exampleAmazonsesVerificationRecord", {
 *     zoneId: aws_route53_zone.example.zone_id,
 *     name: pulumi.interpolate`_amazonses.${example.id}`,
 *     type: "TXT",
 *     ttl: 600,
 *     records: [example.verificationToken],
 * });
 * const exampleVerification = new aws.ses.DomainIdentityVerification("exampleVerification", {domain: example.id}, {
 *     dependsOn: [exampleAmazonsesVerificationRecord],
 * });
 * ```
 */
export declare class DomainIdentityVerification extends pulumi.CustomResource {
    /**
     * Get an existing DomainIdentityVerification resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DomainIdentityVerificationState, opts?: pulumi.CustomResourceOptions): DomainIdentityVerification;
    /**
     * Returns true if the given object is an instance of DomainIdentityVerification.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DomainIdentityVerification;
    /**
     * The ARN of the domain identity.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The domain name of the SES domain identity to verify.
     */
    readonly domain: pulumi.Output<string>;
    /**
     * Create a DomainIdentityVerification resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DomainIdentityVerificationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering DomainIdentityVerification resources.
 */
export interface DomainIdentityVerificationState {
    /**
     * The ARN of the domain identity.
     */
    arn?: pulumi.Input<string>;
    /**
     * The domain name of the SES domain identity to verify.
     */
    domain?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a DomainIdentityVerification resource.
 */
export interface DomainIdentityVerificationArgs {
    /**
     * The domain name of the SES domain identity to verify.
     */
    domain: pulumi.Input<string>;
}
