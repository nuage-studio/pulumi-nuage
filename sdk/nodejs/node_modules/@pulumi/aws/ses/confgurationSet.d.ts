import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Provides an SES configuration set resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.ses.ConfigurationSet("test", {});
 * ```
 * ### Require TLS Connections
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.ses.ConfigurationSet("test", {
 *     deliveryOptions: {
 *         tlsPolicy: "Require",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * SES Configuration Sets can be imported using their `name`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:ses/confgurationSet:ConfgurationSet test some-configuration-set-test
 * ```
 *
 * @deprecated aws.ses.ConfgurationSet has been deprecated in favor of aws.ses.ConfigurationSet
 */
export declare class ConfgurationSet extends pulumi.CustomResource {
    /**
     * Get an existing ConfgurationSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConfgurationSetState, opts?: pulumi.CustomResourceOptions): ConfgurationSet;
    /**
     * Returns true if the given object is an instance of ConfgurationSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ConfgurationSet;
    /**
     * SES configuration set ARN.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * Whether messages that use the configuration set are required to use TLS. See below.
     */
    readonly deliveryOptions: pulumi.Output<outputs.ses.ConfgurationSetDeliveryOptions | undefined>;
    /**
     * Date and time at which the reputation metrics for the configuration set were last reset. Resetting these metrics is known as a fresh start.
     */
    readonly lastFreshStart: pulumi.Output<string>;
    /**
     * Name of the configuration set.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Whether or not Amazon SES publishes reputation metrics for the configuration set, such as bounce and complaint rates, to Amazon CloudWatch. The default value is `false`.
     */
    readonly reputationMetricsEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Whether email sending is enabled or disabled for the configuration set. The default value is `true`.
     */
    readonly sendingEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Domain that is used to redirect email recipients to an Amazon SES-operated domain. See below. **NOTE:** This functionality is best effort.
     */
    readonly trackingOptions: pulumi.Output<outputs.ses.ConfgurationSetTrackingOptions | undefined>;
    /**
     * Create a ConfgurationSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated aws.ses.ConfgurationSet has been deprecated in favor of aws.ses.ConfigurationSet */
    constructor(name: string, args?: ConfgurationSetArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ConfgurationSet resources.
 */
export interface ConfgurationSetState {
    /**
     * SES configuration set ARN.
     */
    arn?: pulumi.Input<string>;
    /**
     * Whether messages that use the configuration set are required to use TLS. See below.
     */
    deliveryOptions?: pulumi.Input<inputs.ses.ConfgurationSetDeliveryOptions>;
    /**
     * Date and time at which the reputation metrics for the configuration set were last reset. Resetting these metrics is known as a fresh start.
     */
    lastFreshStart?: pulumi.Input<string>;
    /**
     * Name of the configuration set.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether or not Amazon SES publishes reputation metrics for the configuration set, such as bounce and complaint rates, to Amazon CloudWatch. The default value is `false`.
     */
    reputationMetricsEnabled?: pulumi.Input<boolean>;
    /**
     * Whether email sending is enabled or disabled for the configuration set. The default value is `true`.
     */
    sendingEnabled?: pulumi.Input<boolean>;
    /**
     * Domain that is used to redirect email recipients to an Amazon SES-operated domain. See below. **NOTE:** This functionality is best effort.
     */
    trackingOptions?: pulumi.Input<inputs.ses.ConfgurationSetTrackingOptions>;
}
/**
 * The set of arguments for constructing a ConfgurationSet resource.
 */
export interface ConfgurationSetArgs {
    /**
     * Whether messages that use the configuration set are required to use TLS. See below.
     */
    deliveryOptions?: pulumi.Input<inputs.ses.ConfgurationSetDeliveryOptions>;
    /**
     * Name of the configuration set.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether or not Amazon SES publishes reputation metrics for the configuration set, such as bounce and complaint rates, to Amazon CloudWatch. The default value is `false`.
     */
    reputationMetricsEnabled?: pulumi.Input<boolean>;
    /**
     * Whether email sending is enabled or disabled for the configuration set. The default value is `true`.
     */
    sendingEnabled?: pulumi.Input<boolean>;
    /**
     * Domain that is used to redirect email recipients to an Amazon SES-operated domain. See below. **NOTE:** This functionality is best effort.
     */
    trackingOptions?: pulumi.Input<inputs.ses.ConfgurationSetTrackingOptions>;
}
