"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.MailFrom = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides an SES domain MAIL FROM resource.
 *
 * > **NOTE:** For the MAIL FROM domain to be fully usable, this resource should be paired with the aws.ses.DomainIdentity resource. To validate the MAIL FROM domain, a DNS MX record is required. To pass SPF checks, a DNS TXT record may also be required. See the [Amazon SES MAIL FROM documentation](https://docs.aws.amazon.com/ses/latest/dg/mail-from.html) for more information.
 *
 * ## Example Usage
 * ### Domain Identity MAIL FROM
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * // Example SES Domain Identity
 * const exampleDomainIdentity = new aws.ses.DomainIdentity("exampleDomainIdentity", {domain: "example.com"});
 * const exampleMailFrom = new aws.ses.MailFrom("exampleMailFrom", {
 *     domain: exampleDomainIdentity.domain,
 *     mailFromDomain: pulumi.interpolate`bounce.${exampleDomainIdentity.domain}`,
 * });
 * // Example Route53 MX record
 * const exampleSesDomainMailFromMx = new aws.route53.Record("exampleSesDomainMailFromMx", {
 *     zoneId: aws_route53_zone.example.id,
 *     name: exampleMailFrom.mailFromDomain,
 *     type: "MX",
 *     ttl: 600,
 *     records: ["10 feedback-smtp.us-east-1.amazonses.com"],
 * });
 * // Change to the region in which `aws_ses_domain_identity.example` is created
 * // Example Route53 TXT record for SPF
 * const exampleSesDomainMailFromTxt = new aws.route53.Record("exampleSesDomainMailFromTxt", {
 *     zoneId: aws_route53_zone.example.id,
 *     name: exampleMailFrom.mailFromDomain,
 *     type: "TXT",
 *     ttl: 600,
 *     records: ["v=spf1 include:amazonses.com -all"],
 * });
 * ```
 * ### Email Identity MAIL FROM
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * // Example SES Email Identity
 * const exampleEmailIdentity = new aws.ses.EmailIdentity("exampleEmailIdentity", {email: "user@example.com"});
 * const exampleMailFrom = new aws.ses.MailFrom("exampleMailFrom", {
 *     domain: exampleEmailIdentity.email,
 *     mailFromDomain: "mail.example.com",
 * });
 * ```
 *
 * ## Import
 *
 * MAIL FROM domain can be imported using the `domain` attribute, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:ses/mailFrom:MailFrom example example.com
 * ```
 */
class MailFrom extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["behaviorOnMxFailure"] = state ? state.behaviorOnMxFailure : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["mailFromDomain"] = state ? state.mailFromDomain : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.domain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domain'");
            }
            if ((!args || args.mailFromDomain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mailFromDomain'");
            }
            resourceInputs["behaviorOnMxFailure"] = args ? args.behaviorOnMxFailure : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["mailFromDomain"] = args ? args.mailFromDomain : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MailFrom.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing MailFrom resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new MailFrom(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of MailFrom.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MailFrom.__pulumiType;
    }
}
exports.MailFrom = MailFrom;
/** @internal */
MailFrom.__pulumiType = 'aws:ses/mailFrom:MailFrom';
//# sourceMappingURL=mailFrom.js.map