import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Provides a Glue Connection resource.
 *
 * ## Example Usage
 * ### Non-VPC Connection
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.glue.Connection("example", {
 *     connectionProperties: {
 *         JDBC_CONNECTION_URL: "jdbc:mysql://example.com/exampledatabase",
 *         PASSWORD: "examplepassword",
 *         USERNAME: "exampleusername",
 *     },
 * });
 * ```
 * ### VPC Connection
 *
 * For more information, see the [AWS Documentation](https://docs.aws.amazon.com/glue/latest/dg/populate-add-connection.html#connection-JDBC-VPC).
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.glue.Connection("example", {
 *     connectionProperties: {
 *         JDBC_CONNECTION_URL: `jdbc:mysql://${aws_rds_cluster.example.endpoint}/exampledatabase`,
 *         PASSWORD: "examplepassword",
 *         USERNAME: "exampleusername",
 *     },
 *     physicalConnectionRequirements: {
 *         availabilityZone: aws_subnet.example.availability_zone,
 *         securityGroupIdLists: [aws_security_group.example.id],
 *         subnetId: aws_subnet.example.id,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Glue Connections can be imported using the `CATALOG-ID` (AWS account ID if not custom) and `NAME`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:glue/connection:Connection MyConnection 123456789012:MyConnection
 * ```
 */
export declare class Connection extends pulumi.CustomResource {
    /**
     * Get an existing Connection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConnectionState, opts?: pulumi.CustomResourceOptions): Connection;
    /**
     * Returns true if the given object is an instance of Connection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Connection;
    /**
     * The ARN of the Glue Connection.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The ID of the Data Catalog in which to create the connection. If none is supplied, the AWS account ID is used by default.
     */
    readonly catalogId: pulumi.Output<string>;
    /**
     * A map of key-value pairs used as parameters for this connection.
     */
    readonly connectionProperties: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the connection. Supported are: `CUSTOM`, `JDBC`, `KAFKA`, `MARKETPLACE`, `MONGODB`, and `NETWORK`. Defaults to `JBDC`.
     */
    readonly connectionType: pulumi.Output<string | undefined>;
    /**
     * Description of the connection.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * A list of criteria that can be used in selecting this connection.
     */
    readonly matchCriterias: pulumi.Output<string[] | undefined>;
    /**
     * The name of the connection.
     */
    readonly name: pulumi.Output<string>;
    /**
     * A map of physical connection requirements, such as VPC and SecurityGroup. Defined below.
     */
    readonly physicalConnectionRequirements: pulumi.Output<outputs.glue.ConnectionPhysicalConnectionRequirements | undefined>;
    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    readonly tagsAll: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * Create a Connection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ConnectionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Connection resources.
 */
export interface ConnectionState {
    /**
     * The ARN of the Glue Connection.
     */
    arn?: pulumi.Input<string>;
    /**
     * The ID of the Data Catalog in which to create the connection. If none is supplied, the AWS account ID is used by default.
     */
    catalogId?: pulumi.Input<string>;
    /**
     * A map of key-value pairs used as parameters for this connection.
     */
    connectionProperties?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The type of the connection. Supported are: `CUSTOM`, `JDBC`, `KAFKA`, `MARKETPLACE`, `MONGODB`, and `NETWORK`. Defaults to `JBDC`.
     */
    connectionType?: pulumi.Input<string>;
    /**
     * Description of the connection.
     */
    description?: pulumi.Input<string>;
    /**
     * A list of criteria that can be used in selecting this connection.
     */
    matchCriterias?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the connection.
     */
    name?: pulumi.Input<string>;
    /**
     * A map of physical connection requirements, such as VPC and SecurityGroup. Defined below.
     */
    physicalConnectionRequirements?: pulumi.Input<inputs.glue.ConnectionPhysicalConnectionRequirements>;
    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
/**
 * The set of arguments for constructing a Connection resource.
 */
export interface ConnectionArgs {
    /**
     * The ID of the Data Catalog in which to create the connection. If none is supplied, the AWS account ID is used by default.
     */
    catalogId?: pulumi.Input<string>;
    /**
     * A map of key-value pairs used as parameters for this connection.
     */
    connectionProperties?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The type of the connection. Supported are: `CUSTOM`, `JDBC`, `KAFKA`, `MARKETPLACE`, `MONGODB`, and `NETWORK`. Defaults to `JBDC`.
     */
    connectionType?: pulumi.Input<string>;
    /**
     * Description of the connection.
     */
    description?: pulumi.Input<string>;
    /**
     * A list of criteria that can be used in selecting this connection.
     */
    matchCriterias?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the connection.
     */
    name?: pulumi.Input<string>;
    /**
     * A map of physical connection requirements, such as VPC and SecurityGroup. Defined below.
     */
    physicalConnectionRequirements?: pulumi.Input<inputs.glue.ConnectionPhysicalConnectionRequirements>;
    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
