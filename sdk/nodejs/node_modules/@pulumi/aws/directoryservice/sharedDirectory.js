"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SharedDirectory = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a directory in your account (directory owner) shared with another account (directory consumer).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleDirectory = new aws.directoryservice.Directory("exampleDirectory", {
 *     name: "tf-example",
 *     password: "SuperSecretPassw0rd",
 *     type: "MicrosoftAD",
 *     edition: "Standard",
 *     vpcSettings: {
 *         vpcId: aws_vpc.example.id,
 *         subnetIds: aws_subnet.example.map(__item => __item.id),
 *     },
 * });
 * const exampleSharedDirectory = new aws.directoryservice.SharedDirectory("exampleSharedDirectory", {
 *     directoryId: exampleDirectory.id,
 *     notes: "You wanna have a catch?",
 *     target: {
 *         id: data.aws_caller_identity.receiver.account_id,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Directory Service Shared Directories can be imported using the owner directory ID/shared directory ID, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:directoryservice/sharedDirectory:SharedDirectory example d-1234567890/d-9267633ece
 * ```
 */
class SharedDirectory extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["directoryId"] = state ? state.directoryId : undefined;
            resourceInputs["method"] = state ? state.method : undefined;
            resourceInputs["notes"] = state ? state.notes : undefined;
            resourceInputs["sharedDirectoryId"] = state ? state.sharedDirectoryId : undefined;
            resourceInputs["target"] = state ? state.target : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.directoryId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'directoryId'");
            }
            if ((!args || args.target === undefined) && !opts.urn) {
                throw new Error("Missing required property 'target'");
            }
            resourceInputs["directoryId"] = args ? args.directoryId : undefined;
            resourceInputs["method"] = args ? args.method : undefined;
            resourceInputs["notes"] = args ? args.notes : undefined;
            resourceInputs["target"] = args ? args.target : undefined;
            resourceInputs["sharedDirectoryId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SharedDirectory.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing SharedDirectory resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SharedDirectory(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SharedDirectory.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SharedDirectory.__pulumiType;
    }
}
exports.SharedDirectory = SharedDirectory;
/** @internal */
SharedDirectory.__pulumiType = 'aws:directoryservice/sharedDirectory:SharedDirectory';
//# sourceMappingURL=sharedDirectory.js.map