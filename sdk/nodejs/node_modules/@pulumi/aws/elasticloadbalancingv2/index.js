"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.TargetGroupAttachment = exports.TargetGroup = exports.LoadBalancer = exports.ListenerRule = exports.ListenerCertificate = exports.Listener = exports.getTargetGroupOutput = exports.getTargetGroup = exports.getLoadBalancerOutput = exports.getLoadBalancer = exports.getListenerOutput = exports.getListener = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.getListener = null;
exports.getListenerOutput = null;
exports.getLoadBalancer = null;
exports.getLoadBalancerOutput = null;
exports.getTargetGroup = null;
exports.getTargetGroupOutput = null;
exports.Listener = null;
exports.ListenerCertificate = null;
exports.ListenerRule = null;
exports.LoadBalancer = null;
exports.TargetGroup = null;
exports.TargetGroupAttachment = null;
utilities.lazyLoad(exports, ["getListener", "getListenerOutput"], () => require("./getListener"));
utilities.lazyLoad(exports, ["getLoadBalancer", "getLoadBalancerOutput"], () => require("./getLoadBalancer"));
utilities.lazyLoad(exports, ["getTargetGroup", "getTargetGroupOutput"], () => require("./getTargetGroup"));
utilities.lazyLoad(exports, ["Listener"], () => require("./listener"));
utilities.lazyLoad(exports, ["ListenerCertificate"], () => require("./listenerCertificate"));
utilities.lazyLoad(exports, ["ListenerRule"], () => require("./listenerRule"));
utilities.lazyLoad(exports, ["LoadBalancer"], () => require("./loadBalancer"));
utilities.lazyLoad(exports, ["TargetGroup"], () => require("./targetGroup"));
utilities.lazyLoad(exports, ["TargetGroupAttachment"], () => require("./targetGroupAttachment"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:elasticloadbalancingv2/listener:Listener":
                return new exports.Listener(name, undefined, { urn });
            case "aws:elasticloadbalancingv2/listenerCertificate:ListenerCertificate":
                return new exports.ListenerCertificate(name, undefined, { urn });
            case "aws:elasticloadbalancingv2/listenerRule:ListenerRule":
                return new exports.ListenerRule(name, undefined, { urn });
            case "aws:elasticloadbalancingv2/loadBalancer:LoadBalancer":
                return new exports.LoadBalancer(name, undefined, { urn });
            case "aws:elasticloadbalancingv2/targetGroup:TargetGroup":
                return new exports.TargetGroup(name, undefined, { urn });
            case "aws:elasticloadbalancingv2/targetGroupAttachment:TargetGroupAttachment":
                return new exports.TargetGroupAttachment(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "elasticloadbalancingv2/listener", _module);
pulumi.runtime.registerResourceModule("aws", "elasticloadbalancingv2/listenerCertificate", _module);
pulumi.runtime.registerResourceModule("aws", "elasticloadbalancingv2/listenerRule", _module);
pulumi.runtime.registerResourceModule("aws", "elasticloadbalancingv2/loadBalancer", _module);
pulumi.runtime.registerResourceModule("aws", "elasticloadbalancingv2/targetGroup", _module);
pulumi.runtime.registerResourceModule("aws", "elasticloadbalancingv2/targetGroupAttachment", _module);
//# sourceMappingURL=index.js.map