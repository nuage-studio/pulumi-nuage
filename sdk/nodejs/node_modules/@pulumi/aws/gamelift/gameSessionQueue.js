"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.GameSessionQueue = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides an GameLift Game Session Queue resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.gamelift.GameSessionQueue("test", {
 *     destinations: [
 *         aws_gamelift_fleet.us_west_2_fleet.arn,
 *         aws_gamelift_fleet.eu_central_1_fleet.arn,
 *     ],
 *     notificationTarget: aws_sns_topic.game_session_queue_notifications.arn,
 *     playerLatencyPolicies: [
 *         {
 *             maximumIndividualPlayerLatencyMilliseconds: 100,
 *             policyDurationSeconds: 5,
 *         },
 *         {
 *             maximumIndividualPlayerLatencyMilliseconds: 200,
 *         },
 *     ],
 *     timeoutInSeconds: 60,
 * });
 * ```
 *
 * ## Import
 *
 * GameLift Game Session Queues can be imported by their `name`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:gamelift/gameSessionQueue:GameSessionQueue example example
 * ```
 */
class GameSessionQueue extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["destinations"] = state ? state.destinations : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["notificationTarget"] = state ? state.notificationTarget : undefined;
            resourceInputs["playerLatencyPolicies"] = state ? state.playerLatencyPolicies : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["timeoutInSeconds"] = state ? state.timeoutInSeconds : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["destinations"] = args ? args.destinations : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["notificationTarget"] = args ? args.notificationTarget : undefined;
            resourceInputs["playerLatencyPolicies"] = args ? args.playerLatencyPolicies : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeoutInSeconds"] = args ? args.timeoutInSeconds : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GameSessionQueue.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing GameSessionQueue resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new GameSessionQueue(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of GameSessionQueue.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GameSessionQueue.__pulumiType;
    }
}
exports.GameSessionQueue = GameSessionQueue;
/** @internal */
GameSessionQueue.__pulumiType = 'aws:gamelift/gameSessionQueue:GameSessionQueue';
//# sourceMappingURL=gameSessionQueue.js.map