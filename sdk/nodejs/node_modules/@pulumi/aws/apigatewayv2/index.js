"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VpcLink = exports.Stage = exports.RouteResponse = exports.Route = exports.Model = exports.IntegrationResponse = exports.Integration = exports.getExportOutput = exports.getExport = exports.getApisOutput = exports.getApis = exports.getApiOutput = exports.getApi = exports.DomainName = exports.Deployment = exports.Authorizer = exports.ApiMapping = exports.Api = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Api = null;
exports.ApiMapping = null;
exports.Authorizer = null;
exports.Deployment = null;
exports.DomainName = null;
exports.getApi = null;
exports.getApiOutput = null;
exports.getApis = null;
exports.getApisOutput = null;
exports.getExport = null;
exports.getExportOutput = null;
exports.Integration = null;
exports.IntegrationResponse = null;
exports.Model = null;
exports.Route = null;
exports.RouteResponse = null;
exports.Stage = null;
exports.VpcLink = null;
utilities.lazyLoad(exports, ["Api"], () => require("./api"));
utilities.lazyLoad(exports, ["ApiMapping"], () => require("./apiMapping"));
utilities.lazyLoad(exports, ["Authorizer"], () => require("./authorizer"));
utilities.lazyLoad(exports, ["Deployment"], () => require("./deployment"));
utilities.lazyLoad(exports, ["DomainName"], () => require("./domainName"));
utilities.lazyLoad(exports, ["getApi", "getApiOutput"], () => require("./getApi"));
utilities.lazyLoad(exports, ["getApis", "getApisOutput"], () => require("./getApis"));
utilities.lazyLoad(exports, ["getExport", "getExportOutput"], () => require("./getExport"));
utilities.lazyLoad(exports, ["Integration"], () => require("./integration"));
utilities.lazyLoad(exports, ["IntegrationResponse"], () => require("./integrationResponse"));
utilities.lazyLoad(exports, ["Model"], () => require("./model"));
utilities.lazyLoad(exports, ["Route"], () => require("./route"));
utilities.lazyLoad(exports, ["RouteResponse"], () => require("./routeResponse"));
utilities.lazyLoad(exports, ["Stage"], () => require("./stage"));
utilities.lazyLoad(exports, ["VpcLink"], () => require("./vpcLink"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:apigatewayv2/api:Api":
                return new exports.Api(name, undefined, { urn });
            case "aws:apigatewayv2/apiMapping:ApiMapping":
                return new exports.ApiMapping(name, undefined, { urn });
            case "aws:apigatewayv2/authorizer:Authorizer":
                return new exports.Authorizer(name, undefined, { urn });
            case "aws:apigatewayv2/deployment:Deployment":
                return new exports.Deployment(name, undefined, { urn });
            case "aws:apigatewayv2/domainName:DomainName":
                return new exports.DomainName(name, undefined, { urn });
            case "aws:apigatewayv2/integration:Integration":
                return new exports.Integration(name, undefined, { urn });
            case "aws:apigatewayv2/integrationResponse:IntegrationResponse":
                return new exports.IntegrationResponse(name, undefined, { urn });
            case "aws:apigatewayv2/model:Model":
                return new exports.Model(name, undefined, { urn });
            case "aws:apigatewayv2/route:Route":
                return new exports.Route(name, undefined, { urn });
            case "aws:apigatewayv2/routeResponse:RouteResponse":
                return new exports.RouteResponse(name, undefined, { urn });
            case "aws:apigatewayv2/stage:Stage":
                return new exports.Stage(name, undefined, { urn });
            case "aws:apigatewayv2/vpcLink:VpcLink":
                return new exports.VpcLink(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "apigatewayv2/api", _module);
pulumi.runtime.registerResourceModule("aws", "apigatewayv2/apiMapping", _module);
pulumi.runtime.registerResourceModule("aws", "apigatewayv2/authorizer", _module);
pulumi.runtime.registerResourceModule("aws", "apigatewayv2/deployment", _module);
pulumi.runtime.registerResourceModule("aws", "apigatewayv2/domainName", _module);
pulumi.runtime.registerResourceModule("aws", "apigatewayv2/integration", _module);
pulumi.runtime.registerResourceModule("aws", "apigatewayv2/integrationResponse", _module);
pulumi.runtime.registerResourceModule("aws", "apigatewayv2/model", _module);
pulumi.runtime.registerResourceModule("aws", "apigatewayv2/route", _module);
pulumi.runtime.registerResourceModule("aws", "apigatewayv2/routeResponse", _module);
pulumi.runtime.registerResourceModule("aws", "apigatewayv2/stage", _module);
pulumi.runtime.registerResourceModule("aws", "apigatewayv2/vpcLink", _module);
//# sourceMappingURL=index.js.map