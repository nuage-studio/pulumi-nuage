"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserGroupAssociation = exports.UserGroup = exports.User = exports.SubnetGroup = exports.SecurityGroup = exports.ReplicationGroup = exports.ParameterGroup = exports.GlobalReplicationGroup = exports.getUserOutput = exports.getUser = exports.getReplicationGroupOutput = exports.getReplicationGroup = exports.getClusterOutput = exports.getCluster = exports.Cluster = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Cluster = null;
exports.getCluster = null;
exports.getClusterOutput = null;
exports.getReplicationGroup = null;
exports.getReplicationGroupOutput = null;
exports.getUser = null;
exports.getUserOutput = null;
exports.GlobalReplicationGroup = null;
exports.ParameterGroup = null;
exports.ReplicationGroup = null;
exports.SecurityGroup = null;
exports.SubnetGroup = null;
exports.User = null;
exports.UserGroup = null;
exports.UserGroupAssociation = null;
utilities.lazyLoad(exports, ["Cluster"], () => require("./cluster"));
utilities.lazyLoad(exports, ["getCluster", "getClusterOutput"], () => require("./getCluster"));
utilities.lazyLoad(exports, ["getReplicationGroup", "getReplicationGroupOutput"], () => require("./getReplicationGroup"));
utilities.lazyLoad(exports, ["getUser", "getUserOutput"], () => require("./getUser"));
utilities.lazyLoad(exports, ["GlobalReplicationGroup"], () => require("./globalReplicationGroup"));
utilities.lazyLoad(exports, ["ParameterGroup"], () => require("./parameterGroup"));
utilities.lazyLoad(exports, ["ReplicationGroup"], () => require("./replicationGroup"));
utilities.lazyLoad(exports, ["SecurityGroup"], () => require("./securityGroup"));
utilities.lazyLoad(exports, ["SubnetGroup"], () => require("./subnetGroup"));
utilities.lazyLoad(exports, ["User"], () => require("./user"));
utilities.lazyLoad(exports, ["UserGroup"], () => require("./userGroup"));
utilities.lazyLoad(exports, ["UserGroupAssociation"], () => require("./userGroupAssociation"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:elasticache/cluster:Cluster":
                return new exports.Cluster(name, undefined, { urn });
            case "aws:elasticache/globalReplicationGroup:GlobalReplicationGroup":
                return new exports.GlobalReplicationGroup(name, undefined, { urn });
            case "aws:elasticache/parameterGroup:ParameterGroup":
                return new exports.ParameterGroup(name, undefined, { urn });
            case "aws:elasticache/replicationGroup:ReplicationGroup":
                return new exports.ReplicationGroup(name, undefined, { urn });
            case "aws:elasticache/securityGroup:SecurityGroup":
                return new exports.SecurityGroup(name, undefined, { urn });
            case "aws:elasticache/subnetGroup:SubnetGroup":
                return new exports.SubnetGroup(name, undefined, { urn });
            case "aws:elasticache/user:User":
                return new exports.User(name, undefined, { urn });
            case "aws:elasticache/userGroup:UserGroup":
                return new exports.UserGroup(name, undefined, { urn });
            case "aws:elasticache/userGroupAssociation:UserGroupAssociation":
                return new exports.UserGroupAssociation(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "elasticache/cluster", _module);
pulumi.runtime.registerResourceModule("aws", "elasticache/globalReplicationGroup", _module);
pulumi.runtime.registerResourceModule("aws", "elasticache/parameterGroup", _module);
pulumi.runtime.registerResourceModule("aws", "elasticache/replicationGroup", _module);
pulumi.runtime.registerResourceModule("aws", "elasticache/securityGroup", _module);
pulumi.runtime.registerResourceModule("aws", "elasticache/subnetGroup", _module);
pulumi.runtime.registerResourceModule("aws", "elasticache/user", _module);
pulumi.runtime.registerResourceModule("aws", "elasticache/userGroup", _module);
pulumi.runtime.registerResourceModule("aws", "elasticache/userGroupAssociation", _module);
//# sourceMappingURL=index.js.map