import * as pulumi from "@pulumi/pulumi";
/**
 * ## Import
 *
 * ElastiCache Global Replication Groups can be imported using the `global_replication_group_id`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:elasticache/globalReplicationGroup:GlobalReplicationGroup my_global_replication_group okuqm-global-replication-group-1
 * ```
 */
export declare class GlobalReplicationGroup extends pulumi.CustomResource {
    /**
     * Get an existing GlobalReplicationGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GlobalReplicationGroupState, opts?: pulumi.CustomResourceOptions): GlobalReplicationGroup;
    /**
     * Returns true if the given object is an instance of GlobalReplicationGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is GlobalReplicationGroup;
    /**
     * The ARN of the ElastiCache Global Replication Group.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * A flag that indicate whether the encryption at rest is enabled.
     */
    readonly atRestEncryptionEnabled: pulumi.Output<boolean>;
    /**
     * A flag that indicate whether AuthToken (password) is enabled.
     */
    readonly authTokenEnabled: pulumi.Output<boolean>;
    /**
     * The instance class used. See AWS documentation for information on [supported node types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html) and [guidance on selecting node types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/nodes-select-size.html).
     */
    readonly cacheNodeType: pulumi.Output<string>;
    /**
     * Indicates whether the Global Datastore is cluster enabled.
     */
    readonly clusterEnabled: pulumi.Output<boolean>;
    /**
     * The name of the cache engine to be used for the clusters in this global replication group.
     */
    readonly engine: pulumi.Output<string>;
    /**
     * Redis version to use for the Global Replication Group.
     * When creating, by default the Global Replication Group inherits the version of the primary replication group.
     * If a version is specified, the Global Replication Group and all member replication groups will be upgraded to this version.
     * Cannot be downgraded without replacing the Global Replication Group and all member replication groups.
     * If the version is 6 or higher, the major and minor version can be set, e.g., `6.2`,
     * or the minor version can be unspecified which will use the latest version at creation time, e.g., `6.x`.
     * The actual engine version used is returned in the attribute `engineVersionActual`, see Attributes Reference below.
     */
    readonly engineVersion: pulumi.Output<string>;
    /**
     * The full version number of the cache engine running on the members of this global replication group.
     */
    readonly engineVersionActual: pulumi.Output<string>;
    /**
     * A user-created description for the global replication group.
     */
    readonly globalReplicationGroupDescription: pulumi.Output<string | undefined>;
    /**
     * The full ID of the global replication group.
     */
    readonly globalReplicationGroupId: pulumi.Output<string>;
    /**
     * The suffix name of a Global Datastore. If `globalReplicationGroupIdSuffix` is changed, creates a new resource.
     */
    readonly globalReplicationGroupIdSuffix: pulumi.Output<string>;
    /**
     * An ElastiCache Parameter Group to use for the Global Replication Group.
     * Required when upgrading a major engine version, but will be ignored if left configured after the upgrade is complete.
     * Specifying without a major version upgrade will fail.
     * Note that ElastiCache creates a copy of this parameter group for each member replication group.
     */
    readonly parameterGroupName: pulumi.Output<string | undefined>;
    /**
     * The ID of the primary cluster that accepts writes and will replicate updates to the secondary cluster. If `primaryReplicationGroupId` is changed, creates a new resource.
     */
    readonly primaryReplicationGroupId: pulumi.Output<string>;
    /**
     * A flag that indicates whether the encryption in transit is enabled.
     */
    readonly transitEncryptionEnabled: pulumi.Output<boolean>;
    /**
     * Create a GlobalReplicationGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GlobalReplicationGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering GlobalReplicationGroup resources.
 */
export interface GlobalReplicationGroupState {
    /**
     * The ARN of the ElastiCache Global Replication Group.
     */
    arn?: pulumi.Input<string>;
    /**
     * A flag that indicate whether the encryption at rest is enabled.
     */
    atRestEncryptionEnabled?: pulumi.Input<boolean>;
    /**
     * A flag that indicate whether AuthToken (password) is enabled.
     */
    authTokenEnabled?: pulumi.Input<boolean>;
    /**
     * The instance class used. See AWS documentation for information on [supported node types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html) and [guidance on selecting node types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/nodes-select-size.html).
     */
    cacheNodeType?: pulumi.Input<string>;
    /**
     * Indicates whether the Global Datastore is cluster enabled.
     */
    clusterEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the cache engine to be used for the clusters in this global replication group.
     */
    engine?: pulumi.Input<string>;
    /**
     * Redis version to use for the Global Replication Group.
     * When creating, by default the Global Replication Group inherits the version of the primary replication group.
     * If a version is specified, the Global Replication Group and all member replication groups will be upgraded to this version.
     * Cannot be downgraded without replacing the Global Replication Group and all member replication groups.
     * If the version is 6 or higher, the major and minor version can be set, e.g., `6.2`,
     * or the minor version can be unspecified which will use the latest version at creation time, e.g., `6.x`.
     * The actual engine version used is returned in the attribute `engineVersionActual`, see Attributes Reference below.
     */
    engineVersion?: pulumi.Input<string>;
    /**
     * The full version number of the cache engine running on the members of this global replication group.
     */
    engineVersionActual?: pulumi.Input<string>;
    /**
     * A user-created description for the global replication group.
     */
    globalReplicationGroupDescription?: pulumi.Input<string>;
    /**
     * The full ID of the global replication group.
     */
    globalReplicationGroupId?: pulumi.Input<string>;
    /**
     * The suffix name of a Global Datastore. If `globalReplicationGroupIdSuffix` is changed, creates a new resource.
     */
    globalReplicationGroupIdSuffix?: pulumi.Input<string>;
    /**
     * An ElastiCache Parameter Group to use for the Global Replication Group.
     * Required when upgrading a major engine version, but will be ignored if left configured after the upgrade is complete.
     * Specifying without a major version upgrade will fail.
     * Note that ElastiCache creates a copy of this parameter group for each member replication group.
     */
    parameterGroupName?: pulumi.Input<string>;
    /**
     * The ID of the primary cluster that accepts writes and will replicate updates to the secondary cluster. If `primaryReplicationGroupId` is changed, creates a new resource.
     */
    primaryReplicationGroupId?: pulumi.Input<string>;
    /**
     * A flag that indicates whether the encryption in transit is enabled.
     */
    transitEncryptionEnabled?: pulumi.Input<boolean>;
}
/**
 * The set of arguments for constructing a GlobalReplicationGroup resource.
 */
export interface GlobalReplicationGroupArgs {
    /**
     * Redis version to use for the Global Replication Group.
     * When creating, by default the Global Replication Group inherits the version of the primary replication group.
     * If a version is specified, the Global Replication Group and all member replication groups will be upgraded to this version.
     * Cannot be downgraded without replacing the Global Replication Group and all member replication groups.
     * If the version is 6 or higher, the major and minor version can be set, e.g., `6.2`,
     * or the minor version can be unspecified which will use the latest version at creation time, e.g., `6.x`.
     * The actual engine version used is returned in the attribute `engineVersionActual`, see Attributes Reference below.
     */
    engineVersion?: pulumi.Input<string>;
    /**
     * A user-created description for the global replication group.
     */
    globalReplicationGroupDescription?: pulumi.Input<string>;
    /**
     * The suffix name of a Global Datastore. If `globalReplicationGroupIdSuffix` is changed, creates a new resource.
     */
    globalReplicationGroupIdSuffix: pulumi.Input<string>;
    /**
     * An ElastiCache Parameter Group to use for the Global Replication Group.
     * Required when upgrading a major engine version, but will be ignored if left configured after the upgrade is complete.
     * Specifying without a major version upgrade will fail.
     * Note that ElastiCache creates a copy of this parameter group for each member replication group.
     */
    parameterGroupName?: pulumi.Input<string>;
    /**
     * The ID of the primary cluster that accepts writes and will replicate updates to the secondary cluster. If `primaryReplicationGroupId` is changed, creates a new resource.
     */
    primaryReplicationGroupId: pulumi.Input<string>;
}
