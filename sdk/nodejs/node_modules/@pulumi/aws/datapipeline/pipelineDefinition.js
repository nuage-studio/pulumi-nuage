"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.PipelineDefinition = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a DataPipeline Pipeline Definition resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const _default = new aws.datapipeline.Pipeline("default", {});
 * const example = new aws.datapipeline.PipelineDefinition("example", {
 *     pipelineId: _default.id,
 *     pipelineObjects: [
 *         {
 *             id: "Default",
 *             name: "Default",
 *             fields: [{
 *                 key: "workerGroup",
 *                 stringValue: "workerGroup",
 *             }],
 *         },
 *         {
 *             id: "Schedule",
 *             name: "Schedule",
 *             fields: [
 *                 {
 *                     key: "startDateTime",
 *                     stringValue: "2012-12-12T00:00:00",
 *                 },
 *                 {
 *                     key: "type",
 *                     stringValue: "Schedule",
 *                 },
 *                 {
 *                     key: "period",
 *                     stringValue: "1 hour",
 *                 },
 *                 {
 *                     key: "endDateTime",
 *                     stringValue: "2012-12-21T18:00:00",
 *                 },
 *             ],
 *         },
 *         {
 *             id: "SayHello",
 *             name: "SayHello",
 *             fields: [
 *                 {
 *                     key: "type",
 *                     stringValue: "ShellCommandActivity",
 *                 },
 *                 {
 *                     key: "command",
 *                     stringValue: "echo hello",
 *                 },
 *                 {
 *                     key: "parent",
 *                     stringValue: "Default",
 *                 },
 *                 {
 *                     key: "schedule",
 *                     stringValue: "Schedule",
 *                 },
 *             ],
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * `aws_datapipeline_pipeline_definition` can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import aws:datapipeline/pipelineDefinition:PipelineDefinition example df-1234567890
 * ```
 */
class PipelineDefinition extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["parameterObjects"] = state ? state.parameterObjects : undefined;
            resourceInputs["parameterValues"] = state ? state.parameterValues : undefined;
            resourceInputs["pipelineId"] = state ? state.pipelineId : undefined;
            resourceInputs["pipelineObjects"] = state ? state.pipelineObjects : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.pipelineId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pipelineId'");
            }
            if ((!args || args.pipelineObjects === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pipelineObjects'");
            }
            resourceInputs["parameterObjects"] = args ? args.parameterObjects : undefined;
            resourceInputs["parameterValues"] = args ? args.parameterValues : undefined;
            resourceInputs["pipelineId"] = args ? args.pipelineId : undefined;
            resourceInputs["pipelineObjects"] = args ? args.pipelineObjects : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PipelineDefinition.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing PipelineDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new PipelineDefinition(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of PipelineDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PipelineDefinition.__pulumiType;
    }
}
exports.PipelineDefinition = PipelineDefinition;
/** @internal */
PipelineDefinition.__pulumiType = 'aws:datapipeline/pipelineDefinition:PipelineDefinition';
//# sourceMappingURL=pipelineDefinition.js.map