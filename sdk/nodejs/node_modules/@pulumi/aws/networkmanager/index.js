"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VpcAttachment = exports.TransitGatewayRouteTableAttachment = exports.TransitGatewayRegistration = exports.TransitGatewayPeering = exports.TransitGatewayConnectPeerAssociation = exports.Site = exports.LinkAssociation = exports.Link = exports.GlobalNetwork = exports.getSitesOutput = exports.getSites = exports.getSiteOutput = exports.getSite = exports.getLinksOutput = exports.getLinks = exports.getLinkOutput = exports.getLink = exports.getGlobalNetworksOutput = exports.getGlobalNetworks = exports.getGlobalNetworkOutput = exports.getGlobalNetwork = exports.getDevicesOutput = exports.getDevices = exports.getDeviceOutput = exports.getDevice = exports.getCoreNetworkPolicyDocumentOutput = exports.getCoreNetworkPolicyDocument = exports.getConnectionsOutput = exports.getConnections = exports.getConnectionOutput = exports.getConnection = exports.Device = exports.CustomerGatewayAssociation = exports.Connection = exports.AttachmentAccepter = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.AttachmentAccepter = null;
exports.Connection = null;
exports.CustomerGatewayAssociation = null;
exports.Device = null;
exports.getConnection = null;
exports.getConnectionOutput = null;
exports.getConnections = null;
exports.getConnectionsOutput = null;
exports.getCoreNetworkPolicyDocument = null;
exports.getCoreNetworkPolicyDocumentOutput = null;
exports.getDevice = null;
exports.getDeviceOutput = null;
exports.getDevices = null;
exports.getDevicesOutput = null;
exports.getGlobalNetwork = null;
exports.getGlobalNetworkOutput = null;
exports.getGlobalNetworks = null;
exports.getGlobalNetworksOutput = null;
exports.getLink = null;
exports.getLinkOutput = null;
exports.getLinks = null;
exports.getLinksOutput = null;
exports.getSite = null;
exports.getSiteOutput = null;
exports.getSites = null;
exports.getSitesOutput = null;
exports.GlobalNetwork = null;
exports.Link = null;
exports.LinkAssociation = null;
exports.Site = null;
exports.TransitGatewayConnectPeerAssociation = null;
exports.TransitGatewayPeering = null;
exports.TransitGatewayRegistration = null;
exports.TransitGatewayRouteTableAttachment = null;
exports.VpcAttachment = null;
utilities.lazyLoad(exports, ["AttachmentAccepter"], () => require("./attachmentAccepter"));
utilities.lazyLoad(exports, ["Connection"], () => require("./connection"));
utilities.lazyLoad(exports, ["CustomerGatewayAssociation"], () => require("./customerGatewayAssociation"));
utilities.lazyLoad(exports, ["Device"], () => require("./device"));
utilities.lazyLoad(exports, ["getConnection", "getConnectionOutput"], () => require("./getConnection"));
utilities.lazyLoad(exports, ["getConnections", "getConnectionsOutput"], () => require("./getConnections"));
utilities.lazyLoad(exports, ["getCoreNetworkPolicyDocument", "getCoreNetworkPolicyDocumentOutput"], () => require("./getCoreNetworkPolicyDocument"));
utilities.lazyLoad(exports, ["getDevice", "getDeviceOutput"], () => require("./getDevice"));
utilities.lazyLoad(exports, ["getDevices", "getDevicesOutput"], () => require("./getDevices"));
utilities.lazyLoad(exports, ["getGlobalNetwork", "getGlobalNetworkOutput"], () => require("./getGlobalNetwork"));
utilities.lazyLoad(exports, ["getGlobalNetworks", "getGlobalNetworksOutput"], () => require("./getGlobalNetworks"));
utilities.lazyLoad(exports, ["getLink", "getLinkOutput"], () => require("./getLink"));
utilities.lazyLoad(exports, ["getLinks", "getLinksOutput"], () => require("./getLinks"));
utilities.lazyLoad(exports, ["getSite", "getSiteOutput"], () => require("./getSite"));
utilities.lazyLoad(exports, ["getSites", "getSitesOutput"], () => require("./getSites"));
utilities.lazyLoad(exports, ["GlobalNetwork"], () => require("./globalNetwork"));
utilities.lazyLoad(exports, ["Link"], () => require("./link"));
utilities.lazyLoad(exports, ["LinkAssociation"], () => require("./linkAssociation"));
utilities.lazyLoad(exports, ["Site"], () => require("./site"));
utilities.lazyLoad(exports, ["TransitGatewayConnectPeerAssociation"], () => require("./transitGatewayConnectPeerAssociation"));
utilities.lazyLoad(exports, ["TransitGatewayPeering"], () => require("./transitGatewayPeering"));
utilities.lazyLoad(exports, ["TransitGatewayRegistration"], () => require("./transitGatewayRegistration"));
utilities.lazyLoad(exports, ["TransitGatewayRouteTableAttachment"], () => require("./transitGatewayRouteTableAttachment"));
utilities.lazyLoad(exports, ["VpcAttachment"], () => require("./vpcAttachment"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:networkmanager/attachmentAccepter:AttachmentAccepter":
                return new exports.AttachmentAccepter(name, undefined, { urn });
            case "aws:networkmanager/connection:Connection":
                return new exports.Connection(name, undefined, { urn });
            case "aws:networkmanager/customerGatewayAssociation:CustomerGatewayAssociation":
                return new exports.CustomerGatewayAssociation(name, undefined, { urn });
            case "aws:networkmanager/device:Device":
                return new exports.Device(name, undefined, { urn });
            case "aws:networkmanager/globalNetwork:GlobalNetwork":
                return new exports.GlobalNetwork(name, undefined, { urn });
            case "aws:networkmanager/link:Link":
                return new exports.Link(name, undefined, { urn });
            case "aws:networkmanager/linkAssociation:LinkAssociation":
                return new exports.LinkAssociation(name, undefined, { urn });
            case "aws:networkmanager/site:Site":
                return new exports.Site(name, undefined, { urn });
            case "aws:networkmanager/transitGatewayConnectPeerAssociation:TransitGatewayConnectPeerAssociation":
                return new exports.TransitGatewayConnectPeerAssociation(name, undefined, { urn });
            case "aws:networkmanager/transitGatewayPeering:TransitGatewayPeering":
                return new exports.TransitGatewayPeering(name, undefined, { urn });
            case "aws:networkmanager/transitGatewayRegistration:TransitGatewayRegistration":
                return new exports.TransitGatewayRegistration(name, undefined, { urn });
            case "aws:networkmanager/transitGatewayRouteTableAttachment:TransitGatewayRouteTableAttachment":
                return new exports.TransitGatewayRouteTableAttachment(name, undefined, { urn });
            case "aws:networkmanager/vpcAttachment:VpcAttachment":
                return new exports.VpcAttachment(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "networkmanager/attachmentAccepter", _module);
pulumi.runtime.registerResourceModule("aws", "networkmanager/connection", _module);
pulumi.runtime.registerResourceModule("aws", "networkmanager/customerGatewayAssociation", _module);
pulumi.runtime.registerResourceModule("aws", "networkmanager/device", _module);
pulumi.runtime.registerResourceModule("aws", "networkmanager/globalNetwork", _module);
pulumi.runtime.registerResourceModule("aws", "networkmanager/link", _module);
pulumi.runtime.registerResourceModule("aws", "networkmanager/linkAssociation", _module);
pulumi.runtime.registerResourceModule("aws", "networkmanager/site", _module);
pulumi.runtime.registerResourceModule("aws", "networkmanager/transitGatewayConnectPeerAssociation", _module);
pulumi.runtime.registerResourceModule("aws", "networkmanager/transitGatewayPeering", _module);
pulumi.runtime.registerResourceModule("aws", "networkmanager/transitGatewayRegistration", _module);
pulumi.runtime.registerResourceModule("aws", "networkmanager/transitGatewayRouteTableAttachment", _module);
pulumi.runtime.registerResourceModule("aws", "networkmanager/vpcAttachment", _module);
//# sourceMappingURL=index.js.map