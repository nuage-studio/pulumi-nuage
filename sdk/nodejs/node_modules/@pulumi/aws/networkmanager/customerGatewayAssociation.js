"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomerGatewayAssociation = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Associates a customer gateway with a device and optionally, with a link.
 * If you specify a link, it must be associated with the specified device.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleGlobalNetwork = new aws.networkmanager.GlobalNetwork("exampleGlobalNetwork", {description: "example"});
 * const exampleSite = new aws.networkmanager.Site("exampleSite", {globalNetworkId: exampleGlobalNetwork.id});
 * const exampleDevice = new aws.networkmanager.Device("exampleDevice", {
 *     globalNetworkId: exampleGlobalNetwork.id,
 *     siteId: exampleSite.id,
 * });
 * const exampleCustomerGateway = new aws.ec2.CustomerGateway("exampleCustomerGateway", {
 *     bgpAsn: "65000",
 *     ipAddress: "172.83.124.10",
 *     type: "ipsec.1",
 * });
 * const exampleTransitGateway = new aws.ec2transitgateway.TransitGateway("exampleTransitGateway", {});
 * const exampleVpnConnection = new aws.ec2.VpnConnection("exampleVpnConnection", {
 *     customerGatewayId: exampleCustomerGateway.id,
 *     transitGatewayId: exampleTransitGateway.id,
 *     type: exampleCustomerGateway.type,
 *     staticRoutesOnly: true,
 * });
 * const exampleTransitGatewayRegistration = new aws.networkmanager.TransitGatewayRegistration("exampleTransitGatewayRegistration", {
 *     globalNetworkId: exampleGlobalNetwork.id,
 *     transitGatewayArn: exampleTransitGateway.arn,
 * }, {
 *     dependsOn: [exampleVpnConnection],
 * });
 * const exampleCustomerGatewayAssociation = new aws.networkmanager.CustomerGatewayAssociation("exampleCustomerGatewayAssociation", {
 *     globalNetworkId: exampleGlobalNetwork.id,
 *     customerGatewayArn: exampleCustomerGateway.arn,
 *     deviceId: exampleDevice.id,
 * }, {
 *     dependsOn: [exampleTransitGatewayRegistration],
 * });
 * ```
 *
 * ## Import
 *
 * `aws_networkmanager_customer_gateway_association` can be imported using the global network ID and customer gateway ARN, e.g.
 *
 * ```sh
 *  $ pulumi import aws:networkmanager/customerGatewayAssociation:CustomerGatewayAssociation example global-network-0d47f6t230mz46dy4,arn:aws:ec2:us-west-2:123456789012:customer-gateway/cgw-123abc05e04123abc
 * ```
 */
class CustomerGatewayAssociation extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["customerGatewayArn"] = state ? state.customerGatewayArn : undefined;
            resourceInputs["deviceId"] = state ? state.deviceId : undefined;
            resourceInputs["globalNetworkId"] = state ? state.globalNetworkId : undefined;
            resourceInputs["linkId"] = state ? state.linkId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.customerGatewayArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'customerGatewayArn'");
            }
            if ((!args || args.deviceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deviceId'");
            }
            if ((!args || args.globalNetworkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'globalNetworkId'");
            }
            resourceInputs["customerGatewayArn"] = args ? args.customerGatewayArn : undefined;
            resourceInputs["deviceId"] = args ? args.deviceId : undefined;
            resourceInputs["globalNetworkId"] = args ? args.globalNetworkId : undefined;
            resourceInputs["linkId"] = args ? args.linkId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomerGatewayAssociation.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing CustomerGatewayAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new CustomerGatewayAssociation(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of CustomerGatewayAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomerGatewayAssociation.__pulumiType;
    }
}
exports.CustomerGatewayAssociation = CustomerGatewayAssociation;
/** @internal */
CustomerGatewayAssociation.__pulumiType = 'aws:networkmanager/customerGatewayAssociation:CustomerGatewayAssociation';
//# sourceMappingURL=customerGatewayAssociation.js.map