import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Use this data source to get an Identity Store Group.
 */
export declare function getGroup(args: GetGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupResult>;
/**
 * A collection of arguments for invoking getGroup.
 */
export interface GetGroupArgs {
    /**
     * Configuration block(s) for filtering. Currently, the AWS Identity Store API supports only 1 filter. Detailed below.
     */
    filters: inputs.identitystore.GetGroupFilter[];
    /**
     * The identifier for a group in the Identity Store.
     */
    groupId?: string;
    /**
     * Identity Store ID associated with the Single Sign-On Instance.
     */
    identityStoreId: string;
}
/**
 * A collection of values returned by getGroup.
 */
export interface GetGroupResult {
    /**
     * Group's display name value.
     */
    readonly displayName: string;
    readonly filters: outputs.identitystore.GetGroupFilter[];
    readonly groupId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly identityStoreId: string;
}
export declare function getGroupOutput(args: GetGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGroupResult>;
/**
 * A collection of arguments for invoking getGroup.
 */
export interface GetGroupOutputArgs {
    /**
     * Configuration block(s) for filtering. Currently, the AWS Identity Store API supports only 1 filter. Detailed below.
     */
    filters: pulumi.Input<pulumi.Input<inputs.identitystore.GetGroupFilterArgs>[]>;
    /**
     * The identifier for a group in the Identity Store.
     */
    groupId?: pulumi.Input<string>;
    /**
     * Identity Store ID associated with the Single Sign-On Instance.
     */
    identityStoreId: pulumi.Input<string>;
}
