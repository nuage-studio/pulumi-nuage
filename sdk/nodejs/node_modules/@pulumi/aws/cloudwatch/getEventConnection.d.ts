import * as pulumi from "@pulumi/pulumi";
/**
 * Use this data source to retrieve information about an EventBridge connection.
 *
 * > **Note:** EventBridge was formerly known as CloudWatch Events. The functionality is identical.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = pulumi.output(aws.cloudwatch.getEventConnection({
 *     name: "test",
 * }));
 * ```
 */
export declare function getEventConnection(args: GetEventConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetEventConnectionResult>;
/**
 * A collection of arguments for invoking getEventConnection.
 */
export interface GetEventConnectionArgs {
    /**
     * Name of the connection.
     */
    name: string;
}
/**
 * A collection of values returned by getEventConnection.
 */
export interface GetEventConnectionResult {
    /**
     * ARN (Amazon Resource Name) for the connection.
     */
    readonly arn: string;
    /**
     * Type of authorization to use to connect. One of `API_KEY`,`BASIC`,`OAUTH_CLIENT_CREDENTIALS`.
     */
    readonly authorizationType: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Name of the connection.
     */
    readonly name: string;
    /**
     * ARN (Amazon Resource Name) for the secret created from the authorization parameters specified for the connection.
     */
    readonly secretArn: string;
}
export declare function getEventConnectionOutput(args: GetEventConnectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEventConnectionResult>;
/**
 * A collection of arguments for invoking getEventConnection.
 */
export interface GetEventConnectionOutputArgs {
    /**
     * Name of the connection.
     */
    name: pulumi.Input<string>;
}
