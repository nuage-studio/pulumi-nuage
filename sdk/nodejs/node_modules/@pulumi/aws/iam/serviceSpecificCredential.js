"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServiceSpecificCredential = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides an IAM Service Specific Credential.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleUser = new aws.iam.User("exampleUser", {});
 * const exampleServiceSpecificCredential = new aws.iam.ServiceSpecificCredential("exampleServiceSpecificCredential", {
 *     serviceName: "codecommit.amazonaws.com",
 *     userName: exampleUser.name,
 * });
 * ```
 *
 * ## Import
 *
 * IAM Service Specific Credentials can be imported using the `service_name:user_name:service_specific_credential_id`, e.g.
 *
 * ```sh
 *  $ pulumi import aws:iam/serviceSpecificCredential:ServiceSpecificCredential default `codecommit.amazonaws.com:example:some-id`
 * ```
 */
class ServiceSpecificCredential extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
            resourceInputs["servicePassword"] = state ? state.servicePassword : undefined;
            resourceInputs["serviceSpecificCredentialId"] = state ? state.serviceSpecificCredentialId : undefined;
            resourceInputs["serviceUserName"] = state ? state.serviceUserName : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["userName"] = state ? state.userName : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            if ((!args || args.userName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userName'");
            }
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["userName"] = args ? args.userName : undefined;
            resourceInputs["servicePassword"] = undefined /*out*/;
            resourceInputs["serviceSpecificCredentialId"] = undefined /*out*/;
            resourceInputs["serviceUserName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServiceSpecificCredential.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing ServiceSpecificCredential resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ServiceSpecificCredential(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ServiceSpecificCredential.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceSpecificCredential.__pulumiType;
    }
}
exports.ServiceSpecificCredential = ServiceSpecificCredential;
/** @internal */
ServiceSpecificCredential.__pulumiType = 'aws:iam/serviceSpecificCredential:ServiceSpecificCredential';
//# sourceMappingURL=serviceSpecificCredential.js.map