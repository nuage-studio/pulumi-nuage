"use strict";
// Copyright 2016-2018, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.ManagedPolicies = void 0;
/** Use ManagedPolicy instead. */
var ManagedPolicies;
(function (ManagedPolicies) {
    /** Use ManagedPolicy.AWSAccountActivityAccess instead. */
    ManagedPolicies.AWSAccountActivityAccess = "arn:aws:iam::aws:policy/AWSAccountActivityAccess";
    /** Use ManagedPolicy.AWSAccountUsageReportAccess instead. */
    ManagedPolicies.AWSAccountUsageReportAccess = "arn:aws:iam::aws:policy/AWSAccountUsageReportAccess";
    /** Use ManagedPolicy.AWSAgentlessDiscoveryService instead. */
    ManagedPolicies.AWSAgentlessDiscoveryService = "arn:aws:iam::aws:policy/AWSAgentlessDiscoveryService";
    /** Use ManagedPolicy.AWSApplicationDiscoveryAgentAccess instead. */
    ManagedPolicies.AWSApplicationDiscoveryAgentAccess = "arn:aws:iam::aws:policy/AWSApplicationDiscoveryAgentAccess";
    /** Use ManagedPolicy.AWSApplicationDiscoveryServiceFullAccess instead. */
    ManagedPolicies.AWSApplicationDiscoveryServiceFullAccess = "arn:aws:iam::aws:policy/AWSApplicationDiscoveryServiceFullAccess";
    /** Use ManagedPolicy.AWSBatchFullAccess instead. */
    ManagedPolicies.AWSBatchFullAccess = "arn:aws:iam::aws:policy/AWSBatchFullAccess";
    /** Use ManagedPolicy.AWSBatchServiceRole instead. */
    ManagedPolicies.AWSBatchServiceRole = "arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole";
    /** Use ManagedPolicy.AWSCertificateManagerFullAccess instead. */
    ManagedPolicies.AWSCertificateManagerFullAccess = "arn:aws:iam::aws:policy/AWSCertificateManagerFullAccess";
    /** Use ManagedPolicy.AWSCertificateManagerReadOnly instead. */
    ManagedPolicies.AWSCertificateManagerReadOnly = "arn:aws:iam::aws:policy/AWSCertificateManagerReadOnly";
    /** Use ManagedPolicy.AWSCloudFormationReadOnlyAccess instead. */
    ManagedPolicies.AWSCloudFormationReadOnlyAccess = "arn:aws:iam::aws:policy/AWSCloudFormationReadOnlyAccess";
    /** Use ManagedPolicy.AWSCloudHSMFullAccess instead. */
    ManagedPolicies.AWSCloudHSMFullAccess = "arn:aws:iam::aws:policy/AWSCloudHSMFullAccess";
    /** Use ManagedPolicy.AWSCloudHSMReadOnlyAccess instead. */
    ManagedPolicies.AWSCloudHSMReadOnlyAccess = "arn:aws:iam::aws:policy/AWSCloudHSMReadOnlyAccess";
    /** Use ManagedPolicy.AWSCloudHSMRole instead. */
    ManagedPolicies.AWSCloudHSMRole = "arn:aws:iam::aws:policy/service-role/AWSCloudHSMRole";
    /** Use ManagedPolicy.AWSCloudTrailFullAccess instead. */
    ManagedPolicies.AWSCloudTrailFullAccess = "arn:aws:iam::aws:policy/AWSCloudTrailFullAccess";
    /** Use ManagedPolicy.AWSCloudTrailReadOnlyAccess instead. */
    ManagedPolicies.AWSCloudTrailReadOnlyAccess = "arn:aws:iam::aws:policy/AWSCloudTrailReadOnlyAccess";
    /** Use ManagedPolicy.AWSCodeBuildAdminAccess instead. */
    ManagedPolicies.AWSCodeBuildAdminAccess = "arn:aws:iam::aws:policy/AWSCodeBuildAdminAccess";
    /** Use ManagedPolicy.AWSCodeBuildDeveloperAccess instead. */
    ManagedPolicies.AWSCodeBuildDeveloperAccess = "arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess";
    /** Use ManagedPolicy.AWSCodeBuildReadOnlyAccess instead. */
    ManagedPolicies.AWSCodeBuildReadOnlyAccess = "arn:aws:iam::aws:policy/AWSCodeBuildReadOnlyAccess";
    /** Use ManagedPolicy.AWSCodeCommitFullAccess instead. */
    ManagedPolicies.AWSCodeCommitFullAccess = "arn:aws:iam::aws:policy/AWSCodeCommitFullAccess";
    /** Use ManagedPolicy.AWSCodeCommitPowerUser instead. */
    ManagedPolicies.AWSCodeCommitPowerUser = "arn:aws:iam::aws:policy/AWSCodeCommitPowerUser";
    /** Use ManagedPolicy.AWSCodeCommitReadOnly instead. */
    ManagedPolicies.AWSCodeCommitReadOnly = "arn:aws:iam::aws:policy/AWSCodeCommitReadOnly";
    /** Use ManagedPolicy.AWSCodeDeployDeployerAccess instead. */
    ManagedPolicies.AWSCodeDeployDeployerAccess = "arn:aws:iam::aws:policy/AWSCodeDeployDeployerAccess";
    /** Use ManagedPolicy.AWSCodeDeployFullAccess instead. */
    ManagedPolicies.AWSCodeDeployFullAccess = "arn:aws:iam::aws:policy/AWSCodeDeployFullAccess";
    /** Use ManagedPolicy.AWSCodeDeployReadOnlyAccess instead. */
    ManagedPolicies.AWSCodeDeployReadOnlyAccess = "arn:aws:iam::aws:policy/AWSCodeDeployReadOnlyAccess";
    /** Use ManagedPolicy.AWSCodeDeployRole instead. */
    ManagedPolicies.AWSCodeDeployRole = "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole";
    /** Use ManagedPolicy.AWSCodeDeployRoleForECS instead. */
    ManagedPolicies.AWSCodeDeployRoleForECS = "arn:aws:iam::aws:policy/AWSCodeDeployRoleForECS";
    /** Use ManagedPolicy.AWSCodePipelineApproverAccess instead. */
    ManagedPolicies.AWSCodePipelineApproverAccess = "arn:aws:iam::aws:policy/AWSCodePipelineApproverAccess";
    /** Use ManagedPolicy.AWSCodePipelineCustomActionAccess instead. */
    ManagedPolicies.AWSCodePipelineCustomActionAccess = "arn:aws:iam::aws:policy/AWSCodePipelineCustomActionAccess";
    /** Use ManagedPolicy.AWSCodePipelineFullAccess instead. */
    ManagedPolicies.AWSCodePipelineFullAccess = "arn:aws:iam::aws:policy/AWSCodePipelineFullAccess";
    /** Use ManagedPolicy.AWSCodePipelineReadOnlyAccess instead. */
    ManagedPolicies.AWSCodePipelineReadOnlyAccess = "arn:aws:iam::aws:policy/AWSCodePipelineReadOnlyAccess";
    /** Use ManagedPolicy.AWSCodeStarFullAccess instead. */
    ManagedPolicies.AWSCodeStarFullAccess = "arn:aws:iam::aws:policy/AWSCodeStarFullAccess";
    /** Use ManagedPolicy.AWSCodeStarServiceRole instead. */
    ManagedPolicies.AWSCodeStarServiceRole = "arn:aws:iam::aws:policy/service-role/AWSCodeStarServiceRole";
    /** Use ManagedPolicy.AWSConfigRole instead. */
    ManagedPolicies.AWSConfigRole = "arn:aws:iam::aws:policy/service-role/AWSConfigRole";
    /** Use ManagedPolicy.AWSConfigRulesExecutionRole instead. */
    ManagedPolicies.AWSConfigRulesExecutionRole = "arn:aws:iam::aws:policy/service-role/AWSConfigRulesExecutionRole";
    /** Use ManagedPolicy.AWSConfigUserAccess instead. */
    ManagedPolicies.AWSConfigUserAccess = "arn:aws:iam::aws:policy/AWSConfigUserAccess";
    /** Use ManagedPolicy. AWSConnector instead. */
    ManagedPolicies.AWSConnector = "arn:aws:iam::aws:policy/AWSConnector";
    /** Use ManagedPolicy.AWSDataPipelineRole instead. */
    ManagedPolicies.AWSDataPipelineRole = "arn:aws:iam::aws:policy/service-role/AWSDataPipelineRole";
    /** Use ManagedPolicy.AWSDataPipeline_FullAccess instead. */
    ManagedPolicies.AWSDataPipeline_FullAccess = "arn:aws:iam::aws:policy/AWSDataPipeline_FullAccess";
    /** Use ManagedPolicy.AWSDataPipeline_PowerUser instead. */
    ManagedPolicies.AWSDataPipeline_PowerUser = "arn:aws:iam::aws:policy/AWSDataPipeline_PowerUser";
    /** Use ManagedPolicy.AWSDeviceFarmFullAccess instead. */
    ManagedPolicies.AWSDeviceFarmFullAccess = "arn:aws:iam::aws:policy/AWSDeviceFarmFullAccess";
    /** Use ManagedPolicy.AWSDirectConnectFullAccess instead. */
    ManagedPolicies.AWSDirectConnectFullAccess = "arn:aws:iam::aws:policy/AWSDirectConnectFullAccess";
    /** Use ManagedPolicy.AWSDirectConnectReadOnlyAccess instead. */
    ManagedPolicies.AWSDirectConnectReadOnlyAccess = "arn:aws:iam::aws:policy/AWSDirectConnectReadOnlyAccess";
    /** Use ManagedPolicy.AWSDirectoryServiceFullAccess instead. */
    ManagedPolicies.AWSDirectoryServiceFullAccess = "arn:aws:iam::aws:policy/AWSDirectoryServiceFullAccess";
    /** Use ManagedPolicy.AWSDirectoryServiceReadOnlyAccess instead. */
    ManagedPolicies.AWSDirectoryServiceReadOnlyAccess = "arn:aws:iam::aws:policy/AWSDirectoryServiceReadOnlyAccess";
    /** Use ManagedPolicy.AWSElasticBeanstalkCustomPlatformforEC2Role instead. */
    ManagedPolicies.AWSElasticBeanstalkCustomPlatformforEC2Role = "arn:aws:iam::aws:policy/AWSElasticBeanstalkCustomPlatformforEC2Role";
    /** Use ManagedPolicy.AWSElasticBeanstalkEnhancedHealth instead. */
    ManagedPolicies.AWSElasticBeanstalkEnhancedHealth = "arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkEnhancedHealth";
    /** Use ManagedPolicy.AWSElasticBeanstalkFullAccess instead. */
    ManagedPolicies.AWSElasticBeanstalkFullAccess = "arn:aws:iam::aws:policy/AWSElasticBeanstalkFullAccess";
    /** Use ManagedPolicy.AWSElasticBeanstalkMulticontainerDocker instead. */
    ManagedPolicies.AWSElasticBeanstalkMulticontainerDocker = "arn:aws:iam::aws:policy/AWSElasticBeanstalkMulticontainerDocker";
    /** Use ManagedPolicy.AWSElasticBeanstalkReadOnlyAccess instead. */
    ManagedPolicies.AWSElasticBeanstalkReadOnlyAccess = "arn:aws:iam::aws:policy/AWSElasticBeanstalkReadOnlyAccess";
    /** Use ManagedPolicy.AWSElasticBeanstalkService instead. */
    ManagedPolicies.AWSElasticBeanstalkService = "arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkService";
    /** Use ManagedPolicy.AWSElasticBeanstalkWebTier instead. */
    ManagedPolicies.AWSElasticBeanstalkWebTier = "arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier";
    /** Use ManagedPolicy.AWSElasticBeanstalkWorkerTier instead. */
    ManagedPolicies.AWSElasticBeanstalkWorkerTier = "arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier";
    /** Use ManagedPolicy.AWSGreengrassFullAccess instead. */
    ManagedPolicies.AWSGreengrassFullAccess = "arn:aws:iam::aws:policy/AWSGreengrassFullAccess";
    /** Use ManagedPolicy.AWSGreengrassResourceAccessRolePolicy instead. */
    ManagedPolicies.AWSGreengrassResourceAccessRolePolicy = "arn:aws:iam::aws:policy/service-role/AWSGreengrassResourceAccessRolePolicy";
    /** Use ManagedPolicy.AWSHealthFullAccess instead. */
    ManagedPolicies.AWSHealthFullAccess = "arn:aws:iam::aws:policy/AWSHealthFullAccess";
    /** Use ManagedPolicy.AWSImportExportFullAccess instead. */
    ManagedPolicies.AWSImportExportFullAccess = "arn:aws:iam::aws:policy/AWSImportExportFullAccess";
    /** Use ManagedPolicy.AWSImportExportReadOnlyAccess instead. */
    ManagedPolicies.AWSImportExportReadOnlyAccess = "arn:aws:iam::aws:policy/AWSImportExportReadOnlyAccess";
    /** Use ManagedPolicy.AWSIoTConfigAccess instead. */
    ManagedPolicies.AWSIoTConfigAccess = "arn:aws:iam::aws:policy/AWSIoTConfigAccess";
    /** Use ManagedPolicy.AWSIoTConfigReadOnlyAccess instead. */
    ManagedPolicies.AWSIoTConfigReadOnlyAccess = "arn:aws:iam::aws:policy/AWSIoTConfigReadOnlyAccess";
    /** Use ManagedPolicy.AWSIoTDataAccess instead. */
    ManagedPolicies.AWSIoTDataAccess = "arn:aws:iam::aws:policy/AWSIoTDataAccess";
    /** Use ManagedPolicy.AWSIoTFullAccess instead. */
    ManagedPolicies.AWSIoTFullAccess = "arn:aws:iam::aws:policy/AWSIoTFullAccess";
    /** Use ManagedPolicy.AWSIoTLogging instead. */
    ManagedPolicies.AWSIoTLogging = "arn:aws:iam::aws:policy/service-role/AWSIoTLogging";
    /** Use ManagedPolicy.AWSIoTRuleActions instead. */
    ManagedPolicies.AWSIoTRuleActions = "arn:aws:iam::aws:policy/service-role/AWSIoTRuleActions";
    /** Use ManagedPolicy.AWSKeyManagementServicePowerUser instead. */
    ManagedPolicies.AWSKeyManagementServicePowerUser = "arn:aws:iam::aws:policy/AWSKeyManagementServicePowerUser";
    /** Use ManagedPolicy.AWSLambdaBasicExecutionRole instead. */
    ManagedPolicies.AWSLambdaBasicExecutionRole = "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole";
    /** Use ManagedPolicy.AWSLambdaDynamoDBExecutionRole instead. */
    ManagedPolicies.AWSLambdaDynamoDBExecutionRole = "arn:aws:iam::aws:policy/service-role/AWSLambdaDynamoDBExecutionRole";
    /** Use ManagedPolicy.AWSLambdaENIManagementAccess instead. */
    ManagedPolicies.AWSLambdaENIManagementAccess = "arn:aws:iam::aws:policy/service-role/AWSLambdaENIManagementAccess";
    /** Use ManagedPolicy.AWSLambdaExecute instead. */
    ManagedPolicies.AWSLambdaExecute = "arn:aws:iam::aws:policy/AWSLambdaExecute";
    /** @deprecated No longer supported. New IAM Roles created using this policy will fail. Use ManagedPolicy.LambdaFullAccess instead. */
    ManagedPolicies.AWSLambdaFullAccess = "arn:aws:iam::aws:policy/AWSLambdaFullAccess";
    /** Use ManagedPolicy.AWSLambdaInvocationDynamoDB instead. */
    ManagedPolicies.AWSLambdaInvocationDynamoDB = "arn:aws:iam::aws:policy/AWSLambdaInvocation-DynamoDB";
    /** Use ManagedPolicy.AWSLambdaKinesisExecutionRole instead. */
    ManagedPolicies.AWSLambdaKinesisExecutionRole = "arn:aws:iam::aws:policy/service-role/AWSLambdaKinesisExecutionRole";
    /** @deprecated No longer supported. New IAM Roles created using this policy will fail. Use ManagedPolicy.LambdaReadOnlyAccess instead. */
    ManagedPolicies.AWSLambdaReadOnlyAccess = "arn:aws:iam::aws:policy/AWSLambdaReadOnlyAccess";
    /** Use ManagedPolicy.AWSLambdaRole instead. */
    ManagedPolicies.AWSLambdaRole = "arn:aws:iam::aws:policy/service-role/AWSLambdaRole";
    /** Use ManagedPolicy.AWSLambdaVPCAccessExecutionRole instead. */
    ManagedPolicies.AWSLambdaVPCAccessExecutionRole = "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole";
    /** Use ManagedPolicy.AWSMarketplaceFullAccess instead. */
    ManagedPolicies.AWSMarketplaceFullAccess = "arn:aws:iam::aws:policy/AWSMarketplaceFullAccess";
    /** Use ManagedPolicy.AWSMarketplaceGetEntitlements instead. */
    ManagedPolicies.AWSMarketplaceGetEntitlements = "arn:aws:iam::aws:policy/AWSMarketplaceGetEntitlements";
    /** Use ManagedPolicy.AWSMarketplaceManageSubscriptions instead. */
    ManagedPolicies.AWSMarketplaceManageSubscriptions = "arn:aws:iam::aws:policy/AWSMarketplaceManageSubscriptions";
    /** Use ManagedPolicy.AWSMarketplaceMeteringFullAccess instead. */
    ManagedPolicies.AWSMarketplaceMeteringFullAccess = "arn:aws:iam::aws:policy/AWSMarketplaceMeteringFullAccess";
    /** Use ManagedPolicy.AWSMarketplaceReadonly instead. */
    ManagedPolicies.AWSMarketplaceReadonly = "arn:aws:iam::aws:policy/AWSMarketplaceRead-only";
    /** Use ManagedPolicy.AWSMobileHub_FullAccess instead. */
    ManagedPolicies.AWSMobileHub_FullAccess = "arn:aws:iam::aws:policy/AWSMobileHub_FullAccess";
    /** Use ManagedPolicy.AWSMobileHub_ReadOnly instead. */
    ManagedPolicies.AWSMobileHub_ReadOnly = "arn:aws:iam::aws:policy/AWSMobileHub_ReadOnly";
    /** Use ManagedPolicy.AWSMobileHub_ServiceUseOnly instead. */
    ManagedPolicies.AWSMobileHub_ServiceUseOnly = "arn:aws:iam::aws:policy/service-role/AWSMobileHub_ServiceUseOnly";
    /** Use ManagedPolicy.AWSOpsWorksCMInstanceProfileRole instead. */
    ManagedPolicies.AWSOpsWorksCMInstanceProfileRole = "arn:aws:iam::aws:policy/AWSOpsWorksCMInstanceProfileRole";
    /** Use ManagedPolicy.AWSOpsWorksCMServiceRole instead. */
    ManagedPolicies.AWSOpsWorksCMServiceRole = "arn:aws:iam::aws:policy/service-role/AWSOpsWorksCMServiceRole";
    /** Use ManagedPolicy.AWSOpsWorksCloudWatchLogs instead. */
    ManagedPolicies.AWSOpsWorksCloudWatchLogs = "arn:aws:iam::aws:policy/AWSOpsWorksCloudWatchLogs";
    /** Use ManagedPolicy.AWSOpsWorksFullAccess instead. */
    ManagedPolicies.AWSOpsWorksFullAccess = "arn:aws:iam::aws:policy/AWSOpsWorksFullAccess";
    /** Use ManagedPolicy.AWSOpsWorksInstanceRegistration instead. */
    ManagedPolicies.AWSOpsWorksInstanceRegistration = "arn:aws:iam::aws:policy/AWSOpsWorksInstanceRegistration";
    /** Use ManagedPolicy.AWSOpsWorksRegisterCLI instead. */
    ManagedPolicies.AWSOpsWorksRegisterCLI = "arn:aws:iam::aws:policy/AWSOpsWorksRegisterCLI";
    /** Use ManagedPolicy.AWSOpsWorksRole instead. */
    ManagedPolicies.AWSOpsWorksRole = "arn:aws:iam::aws:policy/service-role/AWSOpsWorksRole";
    /** Use ManagedPolicy.AWSQuickSightDescribeRDS instead. */
    ManagedPolicies.AWSQuickSightDescribeRDS = "arn:aws:iam::aws:policy/service-role/AWSQuickSightDescribeRDS";
    /** Use ManagedPolicy.AWSQuickSightDescribeRedshift instead. */
    ManagedPolicies.AWSQuickSightDescribeRedshift = "arn:aws:iam::aws:policy/service-role/AWSQuickSightDescribeRedshift";
    /** Use ManagedPolicy.AWSQuickSightListIAM instead. */
    ManagedPolicies.AWSQuickSightListIAM = "arn:aws:iam::aws:policy/service-role/AWSQuickSightListIAM";
    /** Use ManagedPolicy.AWSQuicksightAthenaAccess instead. */
    ManagedPolicies.AWSQuicksightAthenaAccess = "arn:aws:iam::aws:policy/service-role/AWSQuicksightAthenaAccess";
    /** Use ManagedPolicy.AWSStepFunctionsConsoleFullAccess instead. */
    ManagedPolicies.AWSStepFunctionsConsoleFullAccess = "arn:aws:iam::aws:policy/AWSStepFunctionsConsoleFullAccess";
    /** Use ManagedPolicy.AWSStepFunctionsFullAccess instead. */
    ManagedPolicies.AWSStepFunctionsFullAccess = "arn:aws:iam::aws:policy/AWSStepFunctionsFullAccess";
    /** Use ManagedPolicy.AWSStepFunctionsReadOnlyAccess instead. */
    ManagedPolicies.AWSStepFunctionsReadOnlyAccess = "arn:aws:iam::aws:policy/AWSStepFunctionsReadOnlyAccess";
    /** Use ManagedPolicy.AWSStorageGatewayFullAccess instead. */
    ManagedPolicies.AWSStorageGatewayFullAccess = "arn:aws:iam::aws:policy/AWSStorageGatewayFullAccess";
    /** Use ManagedPolicy.AWSStorageGatewayReadOnlyAccess instead. */
    ManagedPolicies.AWSStorageGatewayReadOnlyAccess = "arn:aws:iam::aws:policy/AWSStorageGatewayReadOnlyAccess";
    /** Use ManagedPolicy.AWSSupportAccess instead. */
    ManagedPolicies.AWSSupportAccess = "arn:aws:iam::aws:policy/AWSSupportAccess";
    /** Use ManagedPolicy.AWSWAFFullAccess instead. */
    ManagedPolicies.AWSWAFFullAccess = "arn:aws:iam::aws:policy/AWSWAFFullAccess";
    /** Use ManagedPolicy.AWSWAFReadOnlyAccess instead. */
    ManagedPolicies.AWSWAFReadOnlyAccess = "arn:aws:iam::aws:policy/AWSWAFReadOnlyAccess";
    /** Use ManagedPolicy.AWSXrayFullAccess instead. */
    ManagedPolicies.AWSXrayFullAccess = "arn:aws:iam::aws:policy/AWSXrayFullAccess";
    /** Use ManagedPolicy.AWSXrayReadOnlyAccess instead. */
    ManagedPolicies.AWSXrayReadOnlyAccess = "arn:aws:iam::aws:policy/AWSXrayReadOnlyAccess";
    /** Use ManagedPolicy.AWSXrayWriteOnlyAccess instead. */
    ManagedPolicies.AWSXrayWriteOnlyAccess = "arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess";
    /** Use ManagedPolicy.AWSXRayDaemonWriteAccess instead. */
    ManagedPolicies.AWSXRayDaemonWriteAccess = "arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess";
    /** Use ManagedPolicy.AdministratorAccess instead. */
    ManagedPolicies.AdministratorAccess = "arn:aws:iam::aws:policy/AdministratorAccess";
    /** Use ManagedPolicy.AmazonAPIGatewayAdministrator instead. */
    ManagedPolicies.AmazonAPIGatewayAdministrator = "arn:aws:iam::aws:policy/AmazonAPIGatewayAdministrator";
    /** Use ManagedPolicy.AmazonAPIGatewayInvokeFullAccess instead. */
    ManagedPolicies.AmazonAPIGatewayInvokeFullAccess = "arn:aws:iam::aws:policy/AmazonAPIGatewayInvokeFullAccess";
    /** Use ManagedPolicy.AmazonAPIGatewayPushToCloudWatchLogs instead. */
    ManagedPolicies.AmazonAPIGatewayPushToCloudWatchLogs = "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs";
    /** Use ManagedPolicy.AmazonAppStreamFullAccess instead. */
    ManagedPolicies.AmazonAppStreamFullAccess = "arn:aws:iam::aws:policy/AmazonAppStreamFullAccess";
    /** Use ManagedPolicy.AmazonAppStreamReadOnlyAccess instead. */
    ManagedPolicies.AmazonAppStreamReadOnlyAccess = "arn:aws:iam::aws:policy/AmazonAppStreamReadOnlyAccess";
    /** Use ManagedPolicy.AmazonAppStreamServiceAccess instead. */
    ManagedPolicies.AmazonAppStreamServiceAccess = "arn:aws:iam::aws:policy/service-role/AmazonAppStreamServiceAccess";
    /** Use ManagedPolicy.AmazonAthenaFullAccess instead. */
    ManagedPolicies.AmazonAthenaFullAccess = "arn:aws:iam::aws:policy/AmazonAthenaFullAccess";
    /** Use ManagedPolicy.AmazonCloudDirectoryFullAccess instead. */
    ManagedPolicies.AmazonCloudDirectoryFullAccess = "arn:aws:iam::aws:policy/AmazonCloudDirectoryFullAccess";
    /** Use ManagedPolicy.AmazonCloudDirectoryReadOnlyAccess instead. */
    ManagedPolicies.AmazonCloudDirectoryReadOnlyAccess = "arn:aws:iam::aws:policy/AmazonCloudDirectoryReadOnlyAccess";
    /** Use ManagedPolicy.AmazonCognitoDeveloperAuthenticatedIdentities instead. */
    ManagedPolicies.AmazonCognitoDeveloperAuthenticatedIdentities = "arn:aws:iam::aws:policy/AmazonCognitoDeveloperAuthenticatedIdentities";
    /** Use ManagedPolicy.AmazonCognitoPowerUser instead. */
    ManagedPolicies.AmazonCognitoPowerUser = "arn:aws:iam::aws:policy/AmazonCognitoPowerUser";
    /** Use ManagedPolicy.AmazonCognitoReadOnly instead. */
    ManagedPolicies.AmazonCognitoReadOnly = "arn:aws:iam::aws:policy/AmazonCognitoReadOnly";
    /** Use ManagedPolicy.AmazonDMSCloudWatchLogsRole instead. */
    ManagedPolicies.AmazonDMSCloudWatchLogsRole = "arn:aws:iam::aws:policy/service-role/AmazonDMSCloudWatchLogsRole";
    /** Use ManagedPolicy.AmazonDMSRedshiftS3Role instead. */
    ManagedPolicies.AmazonDMSRedshiftS3Role = "arn:aws:iam::aws:policy/service-role/AmazonDMSRedshiftS3Role";
    /** Use ManagedPolicy.AmazonDMSVPCManagementRole instead. */
    ManagedPolicies.AmazonDMSVPCManagementRole = "arn:aws:iam::aws:policy/service-role/AmazonDMSVPCManagementRole";
    /** Use ManagedPolicy.AmazonDRSVPCManagement instead. */
    ManagedPolicies.AmazonDRSVPCManagement = "arn:aws:iam::aws:policy/AmazonDRSVPCManagement";
    /** Use ManagedPolicy.AmazonDynamoDBFullAccess instead. */
    ManagedPolicies.AmazonDynamoDBFullAccess = "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess";
    /** Use ManagedPolicy.AmazonDynamoDBFullAccesswithDataPipeline instead. */
    ManagedPolicies.AmazonDynamoDBFullAccesswithDataPipeline = "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccesswithDataPipeline";
    /** Use ManagedPolicy.AmazonDynamoDBReadOnlyAccess instead. */
    ManagedPolicies.AmazonDynamoDBReadOnlyAccess = "arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess";
    /** Use ManagedPolicy.AmazonEC2ContainerRegistryFullAccess instead. */
    ManagedPolicies.AmazonEC2ContainerRegistryFullAccess = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess";
    /** Use ManagedPolicy.AmazonEC2ContainerRegistryPowerUser instead. */
    ManagedPolicies.AmazonEC2ContainerRegistryPowerUser = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser";
    /** Use ManagedPolicy.AmazonEC2ContainerRegistryReadOnly instead. */
    ManagedPolicies.AmazonEC2ContainerRegistryReadOnly = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly";
    /** Use ManagedPolicy.AmazonEC2ContainerServiceAutoscaleRole instead. */
    ManagedPolicies.AmazonEC2ContainerServiceAutoscaleRole = "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceAutoscaleRole";
    /** Use ManagedPolicy.AmazonEC2ContainerServiceFullAccess instead. */
    ManagedPolicies.AmazonEC2ContainerServiceFullAccess = "arn:aws:iam::aws:policy/AmazonEC2ContainerServiceFullAccess";
    /** Use ManagedPolicy.AmazonEC2ContainerServiceRole instead. */
    ManagedPolicies.AmazonEC2ContainerServiceRole = "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceRole";
    /** Use ManagedPolicy.AmazonEC2ContainerServiceforEC2Role instead. */
    ManagedPolicies.AmazonEC2ContainerServiceforEC2Role = "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role";
    /** Use ManagedPolicy.AmazonEC2FullAccess instead. */
    ManagedPolicies.AmazonEC2FullAccess = "arn:aws:iam::aws:policy/AmazonEC2FullAccess";
    /** Use ManagedPolicy.AmazonEC2ReadOnlyAccess instead. */
    ManagedPolicies.AmazonEC2ReadOnlyAccess = "arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess";
    /** Use ManagedPolicy.AmazonEC2ReportsAccess instead. */
    ManagedPolicies.AmazonEC2ReportsAccess = "arn:aws:iam::aws:policy/AmazonEC2ReportsAccess";
    /** Use ManagedPolicy.AmazonEC2RoleforAWSCodeDeploy instead. */
    ManagedPolicies.AmazonEC2RoleforAWSCodeDeploy = "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforAWSCodeDeploy";
    /** Use ManagedPolicy.AmazonEC2RoleforDataPipelineRole instead. */
    ManagedPolicies.AmazonEC2RoleforDataPipelineRole = "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforDataPipelineRole";
    /** Use ManagedPolicy.AmazonEC2RoleforSSM instead. */
    ManagedPolicies.AmazonEC2RoleforSSM = "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM";
    /** Use ManagedPolicy.AmazonEC2SpotFleetAutoscaleRole instead. */
    ManagedPolicies.AmazonEC2SpotFleetAutoscaleRole = "arn:aws:iam::aws:policy/service-role/AmazonEC2SpotFleetAutoscaleRole";
    /** Use ManagedPolicy.AmazonEC2SpotFleetRole instead. */
    ManagedPolicies.AmazonEC2SpotFleetRole = "arn:aws:iam::aws:policy/service-role/AmazonEC2SpotFleetRole";
    /** Use ManagedPolicy.AmazonEC2SpotFleetTaggingRole instead. */
    ManagedPolicies.AmazonEC2SpotFleetTaggingRole = "arn:aws:iam::aws:policy/service-role/AmazonEC2SpotFleetTaggingRole";
    /** Use ManagedPolicy.AmazonESFullAccess instead. */
    ManagedPolicies.AmazonESFullAccess = "arn:aws:iam::aws:policy/AmazonESFullAccess";
    /** Use ManagedPolicy.AmazonESReadOnlyAccess instead. */
    ManagedPolicies.AmazonESReadOnlyAccess = "arn:aws:iam::aws:policy/AmazonESReadOnlyAccess";
    /** Use ManagedPolicy.AmazonElastiCacheFullAccess instead. */
    ManagedPolicies.AmazonElastiCacheFullAccess = "arn:aws:iam::aws:policy/AmazonElastiCacheFullAccess";
    /** Use ManagedPolicy.AmazonElastiCacheReadOnlyAccess instead. */
    ManagedPolicies.AmazonElastiCacheReadOnlyAccess = "arn:aws:iam::aws:policy/AmazonElastiCacheReadOnlyAccess";
    /** Use ManagedPolicy.AmazonElasticFileSystemFullAccess instead. */
    ManagedPolicies.AmazonElasticFileSystemFullAccess = "arn:aws:iam::aws:policy/AmazonElasticFileSystemFullAccess";
    /** Use ManagedPolicy.AmazonElasticFileSystemReadOnlyAccess instead. */
    ManagedPolicies.AmazonElasticFileSystemReadOnlyAccess = "arn:aws:iam::aws:policy/AmazonElasticFileSystemReadOnlyAccess";
    /** Use ManagedPolicy.AmazonElasticMapReduceFullAccess instead. */
    ManagedPolicies.AmazonElasticMapReduceFullAccess = "arn:aws:iam::aws:policy/AmazonElasticMapReduceFullAccess";
    /** Use ManagedPolicy.AmazonElasticMapReduceReadOnlyAccess instead. */
    ManagedPolicies.AmazonElasticMapReduceReadOnlyAccess = "arn:aws:iam::aws:policy/AmazonElasticMapReduceReadOnlyAccess";
    /** Use ManagedPolicy.AmazonElasticMapReduceRole instead. */
    ManagedPolicies.AmazonElasticMapReduceRole = "arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceRole";
    /** Use ManagedPolicy.AmazonElasticMapReduceforAutoScalingRole instead. */
    ManagedPolicies.AmazonElasticMapReduceforAutoScalingRole = "arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceforAutoScalingRole";
    /** Use ManagedPolicy.AmazonElasticMapReduceforEC2Role instead. */
    ManagedPolicies.AmazonElasticMapReduceforEC2Role = "arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceforEC2Role";
    /** Use ManagedPolicy.AmazonElasticTranscoderFullAccess instead. */
    ManagedPolicies.AmazonElasticTranscoderFullAccess = "arn:aws:iam::aws:policy/AmazonElasticTranscoderFullAccess";
    /** Use ManagedPolicy.AmazonElasticTranscoderJobsSubmitter instead. */
    ManagedPolicies.AmazonElasticTranscoderJobsSubmitter = "arn:aws:iam::aws:policy/AmazonElasticTranscoderJobsSubmitter";
    /** Use ManagedPolicy.AmazonElasticTranscoderReadOnlyAccess instead. */
    ManagedPolicies.AmazonElasticTranscoderReadOnlyAccess = "arn:aws:iam::aws:policy/AmazonElasticTranscoderReadOnlyAccess";
    /** Use ManagedPolicy.AmazonElasticTranscoderRole instead. */
    ManagedPolicies.AmazonElasticTranscoderRole = "arn:aws:iam::aws:policy/service-role/AmazonElasticTranscoderRole";
    /** Use ManagedPolicy.AmazonGlacierFullAccess instead. */
    ManagedPolicies.AmazonGlacierFullAccess = "arn:aws:iam::aws:policy/AmazonGlacierFullAccess";
    /** Use ManagedPolicy.AmazonGlacierReadOnlyAccess instead. */
    ManagedPolicies.AmazonGlacierReadOnlyAccess = "arn:aws:iam::aws:policy/AmazonGlacierReadOnlyAccess";
    /** Use ManagedPolicy.AmazonInspectorFullAccess instead. */
    ManagedPolicies.AmazonInspectorFullAccess = "arn:aws:iam::aws:policy/AmazonInspectorFullAccess";
    /** Use ManagedPolicy.AmazonInspectorReadOnlyAccess instead. */
    ManagedPolicies.AmazonInspectorReadOnlyAccess = "arn:aws:iam::aws:policy/AmazonInspectorReadOnlyAccess";
    /** Use ManagedPolicy.AmazonKinesisAnalyticsFullAccess instead. */
    ManagedPolicies.AmazonKinesisAnalyticsFullAccess = "arn:aws:iam::aws:policy/AmazonKinesisAnalyticsFullAccess";
    /** Use ManagedPolicy.AmazonKinesisAnalyticsReadOnly instead. */
    ManagedPolicies.AmazonKinesisAnalyticsReadOnly = "arn:aws:iam::aws:policy/AmazonKinesisAnalyticsReadOnly";
    /** Use ManagedPolicy.AmazonKinesisFirehoseFullAccess instead. */
    ManagedPolicies.AmazonKinesisFirehoseFullAccess = "arn:aws:iam::aws:policy/AmazonKinesisFirehoseFullAccess";
    /** Use ManagedPolicy.AmazonKinesisFirehoseReadOnlyAccess instead. */
    ManagedPolicies.AmazonKinesisFirehoseReadOnlyAccess = "arn:aws:iam::aws:policy/AmazonKinesisFirehoseReadOnlyAccess";
    /** Use ManagedPolicy.AmazonKinesisFullAccess instead. */
    ManagedPolicies.AmazonKinesisFullAccess = "arn:aws:iam::aws:policy/AmazonKinesisFullAccess";
    /** Use ManagedPolicy.AmazonKinesisReadOnlyAccess instead. */
    ManagedPolicies.AmazonKinesisReadOnlyAccess = "arn:aws:iam::aws:policy/AmazonKinesisReadOnlyAccess";
    /** Use ManagedPolicy.AmazonLexFullAccess instead. */
    ManagedPolicies.AmazonLexFullAccess = "arn:aws:iam::aws:policy/AmazonLexFullAccess";
    /** Use ManagedPolicy.AmazonLexReadOnly instead. */
    ManagedPolicies.AmazonLexReadOnly = "arn:aws:iam::aws:policy/AmazonLexReadOnly";
    /** Use ManagedPolicy.AmazonLexRunBotsOnly instead. */
    ManagedPolicies.AmazonLexRunBotsOnly = "arn:aws:iam::aws:policy/AmazonLexRunBotsOnly";
    /** Use ManagedPolicy.AmazonMachineLearningBatchPredictionsAccess instead. */
    ManagedPolicies.AmazonMachineLearningBatchPredictionsAccess = "arn:aws:iam::aws:policy/AmazonMachineLearningBatchPredictionsAccess";
    /** Use ManagedPolicy.AmazonMachineLearningCreateOnlyAccess instead. */
    ManagedPolicies.AmazonMachineLearningCreateOnlyAccess = "arn:aws:iam::aws:policy/AmazonMachineLearningCreateOnlyAccess";
    /** Use ManagedPolicy.AmazonMachineLearningFullAccess instead. */
    ManagedPolicies.AmazonMachineLearningFullAccess = "arn:aws:iam::aws:policy/AmazonMachineLearningFullAccess";
    /** Use ManagedPolicy.AmazonMachineLearningManageRealTimeEndpointOnlyAccess instead. */
    ManagedPolicies.AmazonMachineLearningManageRealTimeEndpointOnlyAccess = "arn:aws:iam::aws:policy/AmazonMachineLearningManageRealTimeEndpointOnlyAccess";
    /** Use ManagedPolicy.AmazonMachineLearningReadOnlyAccess instead. */
    ManagedPolicies.AmazonMachineLearningReadOnlyAccess = "arn:aws:iam::aws:policy/AmazonMachineLearningReadOnlyAccess";
    /** Use ManagedPolicy.AmazonMachineLearningRealTimePredictionOnlyAccess instead. */
    ManagedPolicies.AmazonMachineLearningRealTimePredictionOnlyAccess = "arn:aws:iam::aws:policy/AmazonMachineLearningRealTimePredictionOnlyAccess";
    /** Use ManagedPolicy.AmazonMachineLearningRoleforRedshiftDataSource instead. */
    ManagedPolicies.AmazonMachineLearningRoleforRedshiftDataSource = "arn:aws:iam::aws:policy/service-role/AmazonMachineLearningRoleforRedshiftDataSource";
    /** Use ManagedPolicy.AmazonMechanicalTurkFullAccess instead. */
    ManagedPolicies.AmazonMechanicalTurkFullAccess = "arn:aws:iam::aws:policy/AmazonMechanicalTurkFullAccess";
    /** Use ManagedPolicy.AmazonMechanicalTurkReadOnly instead. */
    ManagedPolicies.AmazonMechanicalTurkReadOnly = "arn:aws:iam::aws:policy/AmazonMechanicalTurkReadOnly";
    /** Use ManagedPolicy.AmazonMobileAnalyticsFinancialReportAccess instead. */
    ManagedPolicies.AmazonMobileAnalyticsFinancialReportAccess = "arn:aws:iam::aws:policy/AmazonMobileAnalyticsFinancialReportAccess";
    /** Use ManagedPolicy.AmazonMobileAnalyticsFullAccess instead. */
    ManagedPolicies.AmazonMobileAnalyticsFullAccess = "arn:aws:iam::aws:policy/AmazonMobileAnalyticsFullAccess";
    /** Use ManagedPolicy.AmazonMobileAnalyticsNonfinancialReportAccess instead. */
    ManagedPolicies.AmazonMobileAnalyticsNonfinancialReportAccess = "arn:aws:iam::aws:policy/AmazonMobileAnalyticsNon-financialReportAccess";
    /** Use ManagedPolicy.AmazonMobileAnalyticsWriteOnlyAccess instead. */
    ManagedPolicies.AmazonMobileAnalyticsWriteOnlyAccess = "arn:aws:iam::aws:policy/AmazonMobileAnalyticsWriteOnlyAccess";
    /** Use ManagedPolicy.AmazonPollyFullAccess instead. */
    ManagedPolicies.AmazonPollyFullAccess = "arn:aws:iam::aws:policy/AmazonPollyFullAccess";
    /** Use ManagedPolicy.AmazonPollyReadOnlyAccess instead. */
    ManagedPolicies.AmazonPollyReadOnlyAccess = "arn:aws:iam::aws:policy/AmazonPollyReadOnlyAccess";
    /** Use ManagedPolicy.AmazonRDSDirectoryServiceAccess instead. */
    ManagedPolicies.AmazonRDSDirectoryServiceAccess = "arn:aws:iam::aws:policy/service-role/AmazonRDSDirectoryServiceAccess";
    /** Use ManagedPolicy.AmazonRDSEnhancedMonitoringRole instead. */
    ManagedPolicies.AmazonRDSEnhancedMonitoringRole = "arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole";
    /** Use ManagedPolicy.AmazonRDSDataFullAccess instead. */
    ManagedPolicies.AmazonRDSDataFullAccess = "arn:aws:iam::aws:policy/AmazonRDSDataFullAccess";
    /** Use ManagedPolicy.AmazonRDSFullAccess instead. */
    ManagedPolicies.AmazonRDSFullAccess = "arn:aws:iam::aws:policy/AmazonRDSFullAccess";
    /** Use ManagedPolicy.AmazonRDSReadOnlyAccess instead. */
    ManagedPolicies.AmazonRDSReadOnlyAccess = "arn:aws:iam::aws:policy/AmazonRDSReadOnlyAccess";
    /** Use ManagedPolicy.AmazonRedshiftFullAccess instead. */
    ManagedPolicies.AmazonRedshiftFullAccess = "arn:aws:iam::aws:policy/AmazonRedshiftFullAccess";
    /** Use ManagedPolicy.AmazonRedshiftReadOnlyAccess instead. */
    ManagedPolicies.AmazonRedshiftReadOnlyAccess = "arn:aws:iam::aws:policy/AmazonRedshiftReadOnlyAccess";
    /** Use ManagedPolicy.AmazonRekognitionFullAccess instead. */
    ManagedPolicies.AmazonRekognitionFullAccess = "arn:aws:iam::aws:policy/AmazonRekognitionFullAccess";
    /** Use ManagedPolicy.AmazonRekognitionReadOnlyAccess instead. */
    ManagedPolicies.AmazonRekognitionReadOnlyAccess = "arn:aws:iam::aws:policy/AmazonRekognitionReadOnlyAccess";
    /** Use ManagedPolicy.AmazonRoute53DomainsFullAccess instead. */
    ManagedPolicies.AmazonRoute53DomainsFullAccess = "arn:aws:iam::aws:policy/AmazonRoute53DomainsFullAccess";
    /** Use ManagedPolicy.AmazonRoute53DomainsReadOnlyAccess instead. */
    ManagedPolicies.AmazonRoute53DomainsReadOnlyAccess = "arn:aws:iam::aws:policy/AmazonRoute53DomainsReadOnlyAccess";
    /** Use ManagedPolicy.AmazonRoute53FullAccess instead. */
    ManagedPolicies.AmazonRoute53FullAccess = "arn:aws:iam::aws:policy/AmazonRoute53FullAccess";
    /** Use ManagedPolicy.AmazonRoute53ReadOnlyAccess instead. */
    ManagedPolicies.AmazonRoute53ReadOnlyAccess = "arn:aws:iam::aws:policy/AmazonRoute53ReadOnlyAccess";
    /** Use ManagedPolicy.AmazonS3FullAccess instead. */
    ManagedPolicies.AmazonS3FullAccess = "arn:aws:iam::aws:policy/AmazonS3FullAccess";
    /** Use ManagedPolicy.AmazonS3ReadOnlyAccess instead. */
    ManagedPolicies.AmazonS3ReadOnlyAccess = "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess";
    /** Use ManagedPolicy.AmazonSESFullAccess instead. */
    ManagedPolicies.AmazonSESFullAccess = "arn:aws:iam::aws:policy/AmazonSESFullAccess";
    /** Use ManagedPolicy.AmazonSESReadOnlyAccess instead. */
    ManagedPolicies.AmazonSESReadOnlyAccess = "arn:aws:iam::aws:policy/AmazonSESReadOnlyAccess";
    /** Use ManagedPolicy.AmazonSNSFullAccess instead. */
    ManagedPolicies.AmazonSNSFullAccess = "arn:aws:iam::aws:policy/AmazonSNSFullAccess";
    /** Use ManagedPolicy.AmazonSNSReadOnlyAccess instead. */
    ManagedPolicies.AmazonSNSReadOnlyAccess = "arn:aws:iam::aws:policy/AmazonSNSReadOnlyAccess";
    /** Use ManagedPolicy.AmazonSNSRole instead. */
    ManagedPolicies.AmazonSNSRole = "arn:aws:iam::aws:policy/service-role/AmazonSNSRole";
    /** Use ManagedPolicy.AmazonSQSFullAccess instead. */
    ManagedPolicies.AmazonSQSFullAccess = "arn:aws:iam::aws:policy/AmazonSQSFullAccess";
    /** Use ManagedPolicy.AmazonSQSReadOnlyAccess instead. */
    ManagedPolicies.AmazonSQSReadOnlyAccess = "arn:aws:iam::aws:policy/AmazonSQSReadOnlyAccess";
    /** Use ManagedPolicy.AmazonSSMAutomationRole instead. */
    ManagedPolicies.AmazonSSMAutomationRole = "arn:aws:iam::aws:policy/service-role/AmazonSSMAutomationRole";
    /** Use ManagedPolicy.AmazonSSMFullAccess instead. */
    ManagedPolicies.AmazonSSMFullAccess = "arn:aws:iam::aws:policy/AmazonSSMFullAccess";
    /** Use ManagedPolicy.AmazonSSMMaintenanceWindowRole instead. */
    ManagedPolicies.AmazonSSMMaintenanceWindowRole = "arn:aws:iam::aws:policy/service-role/AmazonSSMMaintenanceWindowRole";
    /** Use ManagedPolicy.AmazonSSMReadOnlyAccess instead. */
    ManagedPolicies.AmazonSSMReadOnlyAccess = "arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess";
    /** Use ManagedPolicy.AmazonSSMManagedInstanceCore instead. */
    ManagedPolicies.AmazonSSMManagedInstanceCore = "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore";
    /** Use ManagedPolicy.AmazonVPCFullAccess instead. */
    ManagedPolicies.AmazonVPCFullAccess = "arn:aws:iam::aws:policy/AmazonVPCFullAccess";
    /** Use ManagedPolicy.AmazonVPCReadOnlyAccess instead. */
    ManagedPolicies.AmazonVPCReadOnlyAccess = "arn:aws:iam::aws:policy/AmazonVPCReadOnlyAccess";
    /** Use ManagedPolicy.AmazonWorkMailFullAccess instead. */
    ManagedPolicies.AmazonWorkMailFullAccess = "arn:aws:iam::aws:policy/AmazonWorkMailFullAccess";
    /** Use ManagedPolicy.AmazonWorkMailReadOnlyAccess instead. */
    ManagedPolicies.AmazonWorkMailReadOnlyAccess = "arn:aws:iam::aws:policy/AmazonWorkMailReadOnlyAccess";
    /** Use ManagedPolicy.AmazonWorkSpacesAdmin instead. */
    ManagedPolicies.AmazonWorkSpacesAdmin = "arn:aws:iam::aws:policy/AmazonWorkSpacesAdmin";
    /** Use ManagedPolicy.AmazonWorkSpacesApplicationManagerAdminAccess instead. */
    ManagedPolicies.AmazonWorkSpacesApplicationManagerAdminAccess = "arn:aws:iam::aws:policy/AmazonWorkSpacesApplicationManagerAdminAccess";
    /** Use ManagedPolicy.AmazonZocaloFullAccess instead. */
    ManagedPolicies.AmazonZocaloFullAccess = "arn:aws:iam::aws:policy/AmazonZocaloFullAccess";
    /** Use ManagedPolicy.AmazonZocaloReadOnlyAccess instead. */
    ManagedPolicies.AmazonZocaloReadOnlyAccess = "arn:aws:iam::aws:policy/AmazonZocaloReadOnlyAccess";
    /** Use ManagedPolicy.ApplicationAutoScalingForAmazonAppStreamAccess instead. */
    ManagedPolicies.ApplicationAutoScalingForAmazonAppStreamAccess = "arn:aws:iam::aws:policy/service-role/ApplicationAutoScalingForAmazonAppStreamAccess";
    /** Use ManagedPolicy.AutoScalingConsoleFullAccess instead. */
    ManagedPolicies.AutoScalingConsoleFullAccess = "arn:aws:iam::aws:policy/AutoScalingConsoleFullAccess";
    /** Use ManagedPolicy.AutoScalingConsoleReadOnlyAccess instead. */
    ManagedPolicies.AutoScalingConsoleReadOnlyAccess = "arn:aws:iam::aws:policy/AutoScalingConsoleReadOnlyAccess";
    /** Use ManagedPolicy.AutoScalingFullAccess instead. */
    ManagedPolicies.AutoScalingFullAccess = "arn:aws:iam::aws:policy/AutoScalingFullAccess";
    /** Use ManagedPolicy.AutoScalingNotificationAccessRole instead. */
    ManagedPolicies.AutoScalingNotificationAccessRole = "arn:aws:iam::aws:policy/service-role/AutoScalingNotificationAccessRole";
    /** Use ManagedPolicy.AutoScalingReadOnlyAccess instead. */
    ManagedPolicies.AutoScalingReadOnlyAccess = "arn:aws:iam::aws:policy/AutoScalingReadOnlyAccess";
    /** Use ManagedPolicy. Billing instead. */
    ManagedPolicies.Billing = "arn:aws:iam::aws:policy/job-function/Billing";
    /** Use ManagedPolicy.CloudFrontFullAccess instead. */
    ManagedPolicies.CloudFrontFullAccess = "arn:aws:iam::aws:policy/CloudFrontFullAccess";
    /** Use ManagedPolicy.CloudFrontReadOnlyAccess instead. */
    ManagedPolicies.CloudFrontReadOnlyAccess = "arn:aws:iam::aws:policy/CloudFrontReadOnlyAccess";
    /** Use ManagedPolicy.CloudSearchFullAccess instead. */
    ManagedPolicies.CloudSearchFullAccess = "arn:aws:iam::aws:policy/CloudSearchFullAccess";
    /** Use ManagedPolicy.CloudSearchReadOnlyAccess instead. */
    ManagedPolicies.CloudSearchReadOnlyAccess = "arn:aws:iam::aws:policy/CloudSearchReadOnlyAccess";
    /** Use ManagedPolicy.CloudWatchActionsEC2Access instead. */
    ManagedPolicies.CloudWatchActionsEC2Access = "arn:aws:iam::aws:policy/CloudWatchActionsEC2Access";
    /** Use ManagedPolicy.CloudWatchEventsBuiltInTargetExecutionAccess instead. */
    ManagedPolicies.CloudWatchEventsBuiltInTargetExecutionAccess = "arn:aws:iam::aws:policy/service-role/CloudWatchEventsBuiltInTargetExecutionAccess";
    /** Use ManagedPolicy.CloudWatchEventsFullAccess instead. */
    ManagedPolicies.CloudWatchEventsFullAccess = "arn:aws:iam::aws:policy/CloudWatchEventsFullAccess";
    /** Use ManagedPolicy.CloudWatchEventsInvocationAccess instead. */
    ManagedPolicies.CloudWatchEventsInvocationAccess = "arn:aws:iam::aws:policy/service-role/CloudWatchEventsInvocationAccess";
    /** Use ManagedPolicy.CloudWatchEventsReadOnlyAccess instead. */
    ManagedPolicies.CloudWatchEventsReadOnlyAccess = "arn:aws:iam::aws:policy/CloudWatchEventsReadOnlyAccess";
    /** Use ManagedPolicy.CloudWatchFullAccess instead. */
    ManagedPolicies.CloudWatchFullAccess = "arn:aws:iam::aws:policy/CloudWatchFullAccess";
    /** Use ManagedPolicy.CloudWatchLogsFullAccess instead. */
    ManagedPolicies.CloudWatchLogsFullAccess = "arn:aws:iam::aws:policy/CloudWatchLogsFullAccess";
    /** Use ManagedPolicy.CloudWatchLogsReadOnlyAccess instead. */
    ManagedPolicies.CloudWatchLogsReadOnlyAccess = "arn:aws:iam::aws:policy/CloudWatchLogsReadOnlyAccess";
    /** Use ManagedPolicy.CloudWatchReadOnlyAccess instead. */
    ManagedPolicies.CloudWatchReadOnlyAccess = "arn:aws:iam::aws:policy/CloudWatchReadOnlyAccess";
    /** Use ManagedPolicy.DataScientist instead. */
    ManagedPolicies.DataScientist = "arn:aws:iam::aws:policy/job-function/DataScientist";
    /** Use ManagedPolicy.DatabaseAdministrator instead. */
    ManagedPolicies.DatabaseAdministrator = "arn:aws:iam::aws:policy/job-function/DatabaseAdministrator";
    /** Use ManagedPolicy.IAMFullAccess instead. */
    ManagedPolicies.IAMFullAccess = "arn:aws:iam::aws:policy/IAMFullAccess";
    /** Use ManagedPolicy.IAMReadOnlyAccess instead. */
    ManagedPolicies.IAMReadOnlyAccess = "arn:aws:iam::aws:policy/IAMReadOnlyAccess";
    /** Use ManagedPolicy.IAMSelfManageServiceSpecificCredentials instead. */
    ManagedPolicies.IAMSelfManageServiceSpecificCredentials = "arn:aws:iam::aws:policy/IAMSelfManageServiceSpecificCredentials";
    /** Use ManagedPolicy.IAMUserChangePassword instead. */
    ManagedPolicies.IAMUserChangePassword = "arn:aws:iam::aws:policy/IAMUserChangePassword";
    /** Use ManagedPolicy.IAMUserSSHKeys instead. */
    ManagedPolicies.IAMUserSSHKeys = "arn:aws:iam::aws:policy/IAMUserSSHKeys";
    /** Use ManagedPolicy.NetworkAdministrator instead. */
    ManagedPolicies.NetworkAdministrator = "arn:aws:iam::aws:policy/job-function/NetworkAdministrator";
    /** Use ManagedPolicy.PowerUserAccess instead. */
    ManagedPolicies.PowerUserAccess = "arn:aws:iam::aws:policy/PowerUserAccess";
    /** Use ManagedPolicy.RDSCloudHsmAuthorizationRole instead. */
    ManagedPolicies.RDSCloudHsmAuthorizationRole = "arn:aws:iam::aws:policy/service-role/RDSCloudHsmAuthorizationRole";
    /** Use ManagedPolicy.ReadOnlyAccess instead. */
    ManagedPolicies.ReadOnlyAccess = "arn:aws:iam::aws:policy/ReadOnlyAccess";
    /** Use ManagedPolicy.ResourceGroupsandTagEditorFullAccess instead. */
    ManagedPolicies.ResourceGroupsandTagEditorFullAccess = "arn:aws:iam::aws:policy/ResourceGroupsandTagEditorFullAccess";
    /** Use ManagedPolicy.ResourceGroupsandTagEditorReadOnlyAccess instead. */
    ManagedPolicies.ResourceGroupsandTagEditorReadOnlyAccess = "arn:aws:iam::aws:policy/ResourceGroupsandTagEditorReadOnlyAccess";
    /** Use ManagedPolicy.SecurityAudit instead. */
    ManagedPolicies.SecurityAudit = "arn:aws:iam::aws:policy/SecurityAudit";
    /** Use ManagedPolicy.ServerMigrationConnector instead. */
    ManagedPolicies.ServerMigrationConnector = "arn:aws:iam::aws:policy/ServerMigrationConnector";
    /** Use ManagedPolicy.ServerMigrationServiceRole instead. */
    ManagedPolicies.ServerMigrationServiceRole = "arn:aws:iam::aws:policy/service-role/ServerMigrationServiceRole";
    /** Use ManagedPolicy.ServiceCatalogAdminFullAccess instead. */
    ManagedPolicies.ServiceCatalogAdminFullAccess = "arn:aws:iam::aws:policy/ServiceCatalogAdminFullAccess";
    /** Use ManagedPolicy.ServiceCatalogAdminReadOnlyAccess instead. */
    ManagedPolicies.ServiceCatalogAdminReadOnlyAccess = "arn:aws:iam::aws:policy/ServiceCatalogAdminReadOnlyAccess";
    /** Use ManagedPolicy.ServiceCatalogEndUserAccess instead. */
    ManagedPolicies.ServiceCatalogEndUserAccess = "arn:aws:iam::aws:policy/ServiceCatalogEndUserAccess";
    /** Use ManagedPolicy.ServiceCatalogEndUserFullAccess instead. */
    ManagedPolicies.ServiceCatalogEndUserFullAccess = "arn:aws:iam::aws:policy/ServiceCatalogEndUserFullAccess";
    /** Use ManagedPolicy.SimpleWorkflowFullAccess instead. */
    ManagedPolicies.SimpleWorkflowFullAccess = "arn:aws:iam::aws:policy/SimpleWorkflowFullAccess";
    /** Use ManagedPolicy. SupportUser instead. */
    ManagedPolicies.SupportUser = "arn:aws:iam::aws:policy/job-function/SupportUser";
    /** Use ManagedPolicy.SystemAdministrator instead. */
    ManagedPolicies.SystemAdministrator = "arn:aws:iam::aws:policy/job-function/SystemAdministrator";
    /** Use ManagedPolicy.VMImportExportRoleForAWSConnector instead. */
    ManagedPolicies.VMImportExportRoleForAWSConnector = "arn:aws:iam::aws:policy/service-role/VMImportExportRoleForAWSConnector";
    /** Use ManagedPolicy.ViewOnlyAccess instead. */
    ManagedPolicies.ViewOnlyAccess = "arn:aws:iam::aws:policy/job-function/ViewOnlyAccess";
})(ManagedPolicies = exports.ManagedPolicies || (exports.ManagedPolicies = {}));
//# sourceMappingURL=managedPolicies.js.map