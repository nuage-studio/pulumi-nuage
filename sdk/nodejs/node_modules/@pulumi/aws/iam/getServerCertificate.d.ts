import * as pulumi from "@pulumi/pulumi";
/**
 * Use this data source to lookup information about IAM Server Certificates.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const my-domain = aws.iam.getServerCertificate({
 *     namePrefix: "my-domain.org",
 *     latest: true,
 * });
 * const elb = new aws.elb.LoadBalancer("elb", {listeners: [{
 *     instancePort: 8000,
 *     instanceProtocol: "https",
 *     lbPort: 443,
 *     lbProtocol: "https",
 *     sslCertificateId: my_domain.then(my_domain => my_domain.arn),
 * }]});
 * ```
 */
export declare function getServerCertificate(args?: GetServerCertificateArgs, opts?: pulumi.InvokeOptions): Promise<GetServerCertificateResult>;
/**
 * A collection of arguments for invoking getServerCertificate.
 */
export interface GetServerCertificateArgs {
    /**
     * sort results by expiration date. returns the certificate with expiration date in furthest in the future.
     */
    latest?: boolean;
    /**
     * exact name of the cert to lookup
     */
    name?: string;
    /**
     * prefix of cert to filter by
     */
    namePrefix?: string;
    /**
     * prefix of path to filter by
     */
    pathPrefix?: string;
}
/**
 * A collection of values returned by getServerCertificate.
 */
export interface GetServerCertificateResult {
    readonly arn: string;
    readonly certificateBody: string;
    readonly certificateChain: string;
    readonly expirationDate: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly latest?: boolean;
    readonly name: string;
    readonly namePrefix?: string;
    readonly path: string;
    readonly pathPrefix?: string;
    readonly uploadDate: string;
}
export declare function getServerCertificateOutput(args?: GetServerCertificateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServerCertificateResult>;
/**
 * A collection of arguments for invoking getServerCertificate.
 */
export interface GetServerCertificateOutputArgs {
    /**
     * sort results by expiration date. returns the certificate with expiration date in furthest in the future.
     */
    latest?: pulumi.Input<boolean>;
    /**
     * exact name of the cert to lookup
     */
    name?: pulumi.Input<string>;
    /**
     * prefix of cert to filter by
     */
    namePrefix?: pulumi.Input<string>;
    /**
     * prefix of path to filter by
     */
    pathPrefix?: pulumi.Input<string>;
}
