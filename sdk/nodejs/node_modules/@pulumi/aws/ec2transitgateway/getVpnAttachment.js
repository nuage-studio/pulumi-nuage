"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getVpnAttachmentOutput = exports.getVpnAttachment = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Get information on an EC2 Transit Gateway VPN Attachment.
 *
 * > EC2 Transit Gateway VPN Attachments are implicitly created by VPN Connections referencing an EC2 Transit Gateway so there is no managed resource. For ease, the `aws.ec2.VpnConnection` resource includes a `transitGatewayAttachmentId` attribute which can replace some usage of this data source. For tagging the attachment, see the `aws.ec2.Tag` resource.
 *
 * ## Example Usage
 * ### By Transit Gateway and VPN Connection Identifiers
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ec2transitgateway.getVpnAttachment({
 *     transitGatewayId: aws_ec2_transit_gateway.example.id,
 *     vpnConnectionId: aws_vpn_connection.example.id,
 * });
 * ```
 * ### Filter
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = pulumi.output(aws.ec2transitgateway.getVpnAttachment({
 *     filters: [{
 *         name: "resource-id",
 *         values: ["some-resource"],
 *     }],
 * }));
 * ```
 */
function getVpnAttachment(args, opts) {
    args = args || {};
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:ec2transitgateway/getVpnAttachment:getVpnAttachment", {
        "filters": args.filters,
        "tags": args.tags,
        "transitGatewayId": args.transitGatewayId,
        "vpnConnectionId": args.vpnConnectionId,
    }, opts);
}
exports.getVpnAttachment = getVpnAttachment;
function getVpnAttachmentOutput(args, opts) {
    return pulumi.output(args).apply(a => getVpnAttachment(a, opts));
}
exports.getVpnAttachmentOutput = getVpnAttachmentOutput;
//# sourceMappingURL=getVpnAttachment.js.map