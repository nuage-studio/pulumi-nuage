import * as pulumi from "@pulumi/pulumi";
/**
 * Manages an EC2 Transit Gateway Policy Table.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.ec2transitgateway.PolicyTable("example", {
 *     transitGatewayId: aws_ec2_transit_gateway.example.id,
 *     tags: {
 *         Name: "Example Policy Table",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * `aws_ec2_transit_gateway_policy_table` can be imported by using the EC2 Transit Gateway Policy Table identifier, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:ec2transitgateway/policyTable:PolicyTable example tgw-rtb-12345678
 * ```
 */
export declare class PolicyTable extends pulumi.CustomResource {
    /**
     * Get an existing PolicyTable resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PolicyTableState, opts?: pulumi.CustomResourceOptions): PolicyTable;
    /**
     * Returns true if the given object is an instance of PolicyTable.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is PolicyTable;
    /**
     * EC2 Transit Gateway Policy Table Amazon Resource Name (ARN).
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The state of the EC2 Transit Gateway Policy Table.
     */
    readonly state: pulumi.Output<string>;
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    readonly tagsAll: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * EC2 Transit Gateway identifier.
     */
    readonly transitGatewayId: pulumi.Output<string>;
    /**
     * Create a PolicyTable resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PolicyTableArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering PolicyTable resources.
 */
export interface PolicyTableState {
    /**
     * EC2 Transit Gateway Policy Table Amazon Resource Name (ARN).
     */
    arn?: pulumi.Input<string>;
    /**
     * The state of the EC2 Transit Gateway Policy Table.
     */
    state?: pulumi.Input<string>;
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * EC2 Transit Gateway identifier.
     */
    transitGatewayId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a PolicyTable resource.
 */
export interface PolicyTableArgs {
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * EC2 Transit Gateway identifier.
     */
    transitGatewayId: pulumi.Input<string>;
}
