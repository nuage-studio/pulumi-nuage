import * as pulumi from "@pulumi/pulumi";
/**
 * Associates the specified subnet and transit gateway attachment with the specified transit gateway multicast domain.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleTransitGateway = new aws.ec2transitgateway.TransitGateway("exampleTransitGateway", {multicastSupport: "enable"});
 * const exampleVpcAttachment = new aws.ec2transitgateway.VpcAttachment("exampleVpcAttachment", {
 *     subnetIds: [aws_subnet.example.id],
 *     transitGatewayId: exampleTransitGateway.id,
 *     vpcId: aws_vpc.example.id,
 * });
 * const exampleMulticastDomain = new aws.ec2transitgateway.MulticastDomain("exampleMulticastDomain", {transitGatewayId: exampleTransitGateway.id});
 * const exampleMulticastDomainAssociation = new aws.ec2transitgateway.MulticastDomainAssociation("exampleMulticastDomainAssociation", {
 *     subnetId: aws_subnet.example.id,
 *     transitGatewayAttachmentId: exampleVpcAttachment.id,
 *     transitGatewayMulticastDomainId: exampleMulticastDomain.id,
 * });
 * ```
 */
export declare class MulticastDomainAssociation extends pulumi.CustomResource {
    /**
     * Get an existing MulticastDomainAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MulticastDomainAssociationState, opts?: pulumi.CustomResourceOptions): MulticastDomainAssociation;
    /**
     * Returns true if the given object is an instance of MulticastDomainAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MulticastDomainAssociation;
    /**
     * The ID of the subnet to associate with the transit gateway multicast domain.
     */
    readonly subnetId: pulumi.Output<string>;
    /**
     * The ID of the transit gateway attachment.
     */
    readonly transitGatewayAttachmentId: pulumi.Output<string>;
    /**
     * The ID of the transit gateway multicast domain.
     */
    readonly transitGatewayMulticastDomainId: pulumi.Output<string>;
    /**
     * Create a MulticastDomainAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MulticastDomainAssociationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering MulticastDomainAssociation resources.
 */
export interface MulticastDomainAssociationState {
    /**
     * The ID of the subnet to associate with the transit gateway multicast domain.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * The ID of the transit gateway attachment.
     */
    transitGatewayAttachmentId?: pulumi.Input<string>;
    /**
     * The ID of the transit gateway multicast domain.
     */
    transitGatewayMulticastDomainId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a MulticastDomainAssociation resource.
 */
export interface MulticastDomainAssociationArgs {
    /**
     * The ID of the subnet to associate with the transit gateway multicast domain.
     */
    subnetId: pulumi.Input<string>;
    /**
     * The ID of the transit gateway attachment.
     */
    transitGatewayAttachmentId: pulumi.Input<string>;
    /**
     * The ID of the transit gateway multicast domain.
     */
    transitGatewayMulticastDomainId: pulumi.Input<string>;
}
