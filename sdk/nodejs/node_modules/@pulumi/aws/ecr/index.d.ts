export { GetAuthorizationTokenArgs, GetAuthorizationTokenResult, GetAuthorizationTokenOutputArgs } from "./getAuthorizationToken";
export declare const getAuthorizationToken: typeof import("./getAuthorizationToken").getAuthorizationToken;
export declare const getAuthorizationTokenOutput: typeof import("./getAuthorizationToken").getAuthorizationTokenOutput;
export { GetCredentialsArgs, GetCredentialsResult, GetCredentialsOutputArgs } from "./getCredentials";
export declare const getCredentials: typeof import("./getCredentials").getCredentials;
export declare const getCredentialsOutput: typeof import("./getCredentials").getCredentialsOutput;
export { GetImageArgs, GetImageResult, GetImageOutputArgs } from "./getImage";
export declare const getImage: typeof import("./getImage").getImage;
export declare const getImageOutput: typeof import("./getImage").getImageOutput;
export { GetRepositoryArgs, GetRepositoryResult, GetRepositoryOutputArgs } from "./getRepository";
export declare const getRepository: typeof import("./getRepository").getRepository;
export declare const getRepositoryOutput: typeof import("./getRepository").getRepositoryOutput;
export { LifecyclePolicyArgs, LifecyclePolicyState } from "./lifecyclePolicy";
export declare type LifecyclePolicy = import("./lifecyclePolicy").LifecyclePolicy;
export declare const LifecyclePolicy: typeof import("./lifecyclePolicy").LifecyclePolicy;
export * from "./lifecyclePolicyDocument";
export { PullThroughCacheRuleArgs, PullThroughCacheRuleState } from "./pullThroughCacheRule";
export declare type PullThroughCacheRule = import("./pullThroughCacheRule").PullThroughCacheRule;
export declare const PullThroughCacheRule: typeof import("./pullThroughCacheRule").PullThroughCacheRule;
export { RegistryPolicyArgs, RegistryPolicyState } from "./registryPolicy";
export declare type RegistryPolicy = import("./registryPolicy").RegistryPolicy;
export declare const RegistryPolicy: typeof import("./registryPolicy").RegistryPolicy;
export { RegistryScanningConfigurationArgs, RegistryScanningConfigurationState } from "./registryScanningConfiguration";
export declare type RegistryScanningConfiguration = import("./registryScanningConfiguration").RegistryScanningConfiguration;
export declare const RegistryScanningConfiguration: typeof import("./registryScanningConfiguration").RegistryScanningConfiguration;
export { ReplicationConfigurationArgs, ReplicationConfigurationState } from "./replicationConfiguration";
export declare type ReplicationConfiguration = import("./replicationConfiguration").ReplicationConfiguration;
export declare const ReplicationConfiguration: typeof import("./replicationConfiguration").ReplicationConfiguration;
export { RepositoryArgs, RepositoryState } from "./repository";
export declare type Repository = import("./repository").Repository;
export declare const Repository: typeof import("./repository").Repository;
export { RepositoryPolicyArgs, RepositoryPolicyState } from "./repositoryPolicy";
export declare type RepositoryPolicy = import("./repositoryPolicy").RepositoryPolicy;
export declare const RepositoryPolicy: typeof import("./repositoryPolicy").RepositoryPolicy;
