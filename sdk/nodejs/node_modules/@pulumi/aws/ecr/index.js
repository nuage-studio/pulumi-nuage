"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RepositoryPolicy = exports.Repository = exports.ReplicationConfiguration = exports.RegistryScanningConfiguration = exports.RegistryPolicy = exports.PullThroughCacheRule = exports.LifecyclePolicy = exports.getRepositoryOutput = exports.getRepository = exports.getImageOutput = exports.getImage = exports.getCredentialsOutput = exports.getCredentials = exports.getAuthorizationTokenOutput = exports.getAuthorizationToken = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.getAuthorizationToken = null;
exports.getAuthorizationTokenOutput = null;
exports.getCredentials = null;
exports.getCredentialsOutput = null;
exports.getImage = null;
exports.getImageOutput = null;
exports.getRepository = null;
exports.getRepositoryOutput = null;
exports.LifecyclePolicy = null;
__exportStar(require("./lifecyclePolicyDocument"), exports);
exports.PullThroughCacheRule = null;
exports.RegistryPolicy = null;
exports.RegistryScanningConfiguration = null;
exports.ReplicationConfiguration = null;
exports.Repository = null;
exports.RepositoryPolicy = null;
utilities.lazyLoad(exports, ["getAuthorizationToken", "getAuthorizationTokenOutput"], () => require("./getAuthorizationToken"));
utilities.lazyLoad(exports, ["getCredentials", "getCredentialsOutput"], () => require("./getCredentials"));
utilities.lazyLoad(exports, ["getImage", "getImageOutput"], () => require("./getImage"));
utilities.lazyLoad(exports, ["getRepository", "getRepositoryOutput"], () => require("./getRepository"));
utilities.lazyLoad(exports, ["LifecyclePolicy"], () => require("./lifecyclePolicy"));
utilities.lazyLoad(exports, ["PullThroughCacheRule"], () => require("./pullThroughCacheRule"));
utilities.lazyLoad(exports, ["RegistryPolicy"], () => require("./registryPolicy"));
utilities.lazyLoad(exports, ["RegistryScanningConfiguration"], () => require("./registryScanningConfiguration"));
utilities.lazyLoad(exports, ["ReplicationConfiguration"], () => require("./replicationConfiguration"));
utilities.lazyLoad(exports, ["Repository"], () => require("./repository"));
utilities.lazyLoad(exports, ["RepositoryPolicy"], () => require("./repositoryPolicy"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:ecr/lifecyclePolicy:LifecyclePolicy":
                return new exports.LifecyclePolicy(name, undefined, { urn });
            case "aws:ecr/pullThroughCacheRule:PullThroughCacheRule":
                return new exports.PullThroughCacheRule(name, undefined, { urn });
            case "aws:ecr/registryPolicy:RegistryPolicy":
                return new exports.RegistryPolicy(name, undefined, { urn });
            case "aws:ecr/registryScanningConfiguration:RegistryScanningConfiguration":
                return new exports.RegistryScanningConfiguration(name, undefined, { urn });
            case "aws:ecr/replicationConfiguration:ReplicationConfiguration":
                return new exports.ReplicationConfiguration(name, undefined, { urn });
            case "aws:ecr/repository:Repository":
                return new exports.Repository(name, undefined, { urn });
            case "aws:ecr/repositoryPolicy:RepositoryPolicy":
                return new exports.RepositoryPolicy(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "ecr/lifecyclePolicy", _module);
pulumi.runtime.registerResourceModule("aws", "ecr/pullThroughCacheRule", _module);
pulumi.runtime.registerResourceModule("aws", "ecr/registryPolicy", _module);
pulumi.runtime.registerResourceModule("aws", "ecr/registryScanningConfiguration", _module);
pulumi.runtime.registerResourceModule("aws", "ecr/replicationConfiguration", _module);
pulumi.runtime.registerResourceModule("aws", "ecr/repository", _module);
pulumi.runtime.registerResourceModule("aws", "ecr/repositoryPolicy", _module);
//# sourceMappingURL=index.js.map