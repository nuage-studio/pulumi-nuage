import * as pulumi from "@pulumi/pulumi";
/**
 * The ECR Image data source allows the details of an image with a particular tag or digest to be retrieved.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const serviceImage = pulumi.output(aws.ecr.getImage({
 *     imageTag: "latest",
 *     repositoryName: "my/service",
 * }));
 * ```
 */
export declare function getImage(args: GetImageArgs, opts?: pulumi.InvokeOptions): Promise<GetImageResult>;
/**
 * A collection of arguments for invoking getImage.
 */
export interface GetImageArgs {
    /**
     * Sha256 digest of the image manifest. At least one of `imageDigest` or `imageTag` must be specified.
     */
    imageDigest?: string;
    /**
     * Tag associated with this image. At least one of `imageDigest` or `imageTag` must be specified.
     */
    imageTag?: string;
    /**
     * ID of the Registry where the repository resides.
     */
    registryId?: string;
    /**
     * Name of the ECR Repository.
     */
    repositoryName: string;
}
/**
 * A collection of values returned by getImage.
 */
export interface GetImageResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly imageDigest: string;
    /**
     * Date and time, expressed as a unix timestamp, at which the current image was pushed to the repository.
     */
    readonly imagePushedAt: number;
    /**
     * Size, in bytes, of the image in the repository.
     */
    readonly imageSizeInBytes: number;
    readonly imageTag?: string;
    /**
     * List of tags associated with this image.
     */
    readonly imageTags: string[];
    readonly registryId: string;
    readonly repositoryName: string;
}
export declare function getImageOutput(args: GetImageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetImageResult>;
/**
 * A collection of arguments for invoking getImage.
 */
export interface GetImageOutputArgs {
    /**
     * Sha256 digest of the image manifest. At least one of `imageDigest` or `imageTag` must be specified.
     */
    imageDigest?: pulumi.Input<string>;
    /**
     * Tag associated with this image. At least one of `imageDigest` or `imageTag` must be specified.
     */
    imageTag?: pulumi.Input<string>;
    /**
     * ID of the Registry where the repository resides.
     */
    registryId?: pulumi.Input<string>;
    /**
     * Name of the ECR Repository.
     */
    repositoryName: pulumi.Input<string>;
}
