"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.RegistryScanningConfiguration = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides an Elastic Container Registry Scanning Configuration. Can't be completely deleted, instead reverts to the default `BASIC` scanning configuration without rules.
 *
 * ## Example Usage
 * ### Basic example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const configuration = new aws.ecr.RegistryScanningConfiguration("configuration", {
 *     rules: [{
 *         repositoryFilters: [{
 *             filter: "example",
 *             filterType: "WILDCARD",
 *         }],
 *         scanFrequency: "CONTINUOUS_SCAN",
 *     }],
 *     scanType: "ENHANCED",
 * });
 * ```
 * ### Multiple rules
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.ecr.RegistryScanningConfiguration("test", {
 *     rules: [
 *         {
 *             repositoryFilters: [{
 *                 filter: "*",
 *                 filterType: "WILDCARD",
 *             }],
 *             scanFrequency: "SCAN_ON_PUSH",
 *         },
 *         {
 *             repositoryFilters: [{
 *                 filter: "example",
 *                 filterType: "WILDCARD",
 *             }],
 *             scanFrequency: "CONTINUOUS_SCAN",
 *         },
 *     ],
 *     scanType: "ENHANCED",
 * });
 * ```
 *
 * ## Import
 *
 * ECR Scanning Configurations can be imported using the `registry_id`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:ecr/registryScanningConfiguration:RegistryScanningConfiguration example 012345678901
 * ```
 */
class RegistryScanningConfiguration extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["registryId"] = state ? state.registryId : undefined;
            resourceInputs["rules"] = state ? state.rules : undefined;
            resourceInputs["scanType"] = state ? state.scanType : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.scanType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scanType'");
            }
            resourceInputs["rules"] = args ? args.rules : undefined;
            resourceInputs["scanType"] = args ? args.scanType : undefined;
            resourceInputs["registryId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RegistryScanningConfiguration.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing RegistryScanningConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new RegistryScanningConfiguration(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of RegistryScanningConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RegistryScanningConfiguration.__pulumiType;
    }
}
exports.RegistryScanningConfiguration = RegistryScanningConfiguration;
/** @internal */
RegistryScanningConfiguration.__pulumiType = 'aws:ecr/registryScanningConfiguration:RegistryScanningConfiguration';
//# sourceMappingURL=registryScanningConfiguration.js.map