import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Provides a AWS Transfer Workflow resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.transfer.Workflow("example", {
 *     steps: [{
 *         deleteStepDetails: {
 *             name: "example",
 *             sourceFileLocation: "${original.file}",
 *         },
 *         type: "DELETE",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Transfer Workflows can be imported using the `worflow_id`.
 *
 * ```sh
 *  $ pulumi import aws:transfer/workflow:Workflow example example
 * ```
 */
export declare class Workflow extends pulumi.CustomResource {
    /**
     * Get an existing Workflow resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkflowState, opts?: pulumi.CustomResourceOptions): Workflow;
    /**
     * Returns true if the given object is an instance of Workflow.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Workflow;
    /**
     * The Workflow ARN.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * A textual description for the workflow.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Specifies the steps (actions) to take if errors are encountered during execution of the workflow. See Workflow Steps below.
     */
    readonly onExceptionSteps: pulumi.Output<outputs.transfer.WorkflowOnExceptionStep[] | undefined>;
    /**
     * Specifies the details for the steps that are in the specified workflow. See Workflow Steps below.
     */
    readonly steps: pulumi.Output<outputs.transfer.WorkflowStep[]>;
    /**
     * Array that contains from 1 to 10 key/value pairs. See S3 Tags below.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    readonly tagsAll: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * Create a Workflow resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkflowArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Workflow resources.
 */
export interface WorkflowState {
    /**
     * The Workflow ARN.
     */
    arn?: pulumi.Input<string>;
    /**
     * A textual description for the workflow.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the steps (actions) to take if errors are encountered during execution of the workflow. See Workflow Steps below.
     */
    onExceptionSteps?: pulumi.Input<pulumi.Input<inputs.transfer.WorkflowOnExceptionStep>[]>;
    /**
     * Specifies the details for the steps that are in the specified workflow. See Workflow Steps below.
     */
    steps?: pulumi.Input<pulumi.Input<inputs.transfer.WorkflowStep>[]>;
    /**
     * Array that contains from 1 to 10 key/value pairs. See S3 Tags below.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
/**
 * The set of arguments for constructing a Workflow resource.
 */
export interface WorkflowArgs {
    /**
     * A textual description for the workflow.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the steps (actions) to take if errors are encountered during execution of the workflow. See Workflow Steps below.
     */
    onExceptionSteps?: pulumi.Input<pulumi.Input<inputs.transfer.WorkflowOnExceptionStep>[]>;
    /**
     * Specifies the details for the steps that are in the specified workflow. See Workflow Steps below.
     */
    steps: pulumi.Input<pulumi.Input<inputs.transfer.WorkflowStep>[]>;
    /**
     * Array that contains from 1 to 10 key/value pairs. See S3 Tags below.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
