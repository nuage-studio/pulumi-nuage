export declare const EngineMode: {
    readonly Provisioned: "provisioned";
    readonly Serverless: "serverless";
    readonly ParallelQuery: "parallelquery";
    readonly Global: "global";
};
export declare type EngineMode = (typeof EngineMode)[keyof typeof EngineMode];
export declare const EngineType: {
    readonly Aurora: "aurora";
    readonly AuroraMysql: "aurora-mysql";
    readonly AuroraPostgresql: "aurora-postgresql";
};
export declare type EngineType = (typeof EngineType)[keyof typeof EngineType];
export declare const InstanceType: {
    readonly T4G_Micro: "db.t4g.micro";
    readonly T4G_Small: "db.t4g.small";
    readonly T4G_Medium: "db.t4g.medium";
    readonly T4G_Large: "db.t4g.large";
    readonly T4G_XLarge: "db.t4g.xlarge";
    readonly T4G_2XLarge: "db.t4g.2xlarge";
    readonly T3_Micro: "db.t3.micro";
    readonly T3_Small: "db.t3.small";
    readonly T3_Medium: "db.t3.medium";
    readonly T3_Large: "db.t3.large";
    readonly T3_XLarge: "db.t3.xlarge";
    readonly T3_2XLarge: "db.t3.2xlarge";
    readonly T2_Micro: "db.t2.micro";
    readonly T2_Small: "db.t2.small";
    readonly T2_Medium: "db.t2.medium";
    readonly T2_Large: "db.t2.large";
    readonly T2_XLarge: "db.t2.xlarge";
    readonly T2_2XLarge: "db.t2.2xlarge";
    readonly M1_Small: "db.m1.small";
    readonly M1_Medium: "db.m1.medium";
    readonly M1_Large: "db.m1.large";
    readonly M1_XLarge: "db.m1.xlarge";
    readonly M2_XLarge: "db.m2.xlarge";
    readonly M2_2XLarge: "db.m2.2xlarge";
    readonly M2_4XLarge: "db.m2.4xlarge";
    readonly M3_Medium: "db.m3.medium";
    readonly M3_Large: "db.m3.large";
    readonly M3_XLarge: "db.m3.xlarge";
    readonly M3_2XLarge: "db.m3.2xlarge";
    readonly M4_Large: "db.m4.large";
    readonly M4_XLarge: "db.m4.xlarge";
    readonly M4_2XLarge: "db.m4.2xlarge";
    readonly M4_4XLarge: "db.m4.4xlarge";
    readonly M4_10XLarge: "db.m4.10xlarge";
    readonly M4_16XLarge: "db.m4.10xlarge";
    readonly M5_Large: "db.m5.large";
    readonly M5_XLarge: "db.m5.xlarge";
    readonly M5_2XLarge: "db.m5.2xlarge";
    readonly M5_4XLarge: "db.m5.4xlarge";
    readonly M5_12XLarge: "db.m5.12xlarge";
    readonly M5_24XLarge: "db.m5.24xlarge";
    readonly M6G_Large: "db.m6g.large";
    readonly M6G_XLarge: "db.m6g.xlarge";
    readonly M6G_2XLarge: "db.m6g.2xlarge";
    readonly M6G_4XLarge: "db.m6g.4xlarge";
    readonly M6G_8XLarge: "db.m6g.8xlarge";
    readonly M6G_12XLarge: "db.m6g.12xlarge";
    readonly M6G_16XLarge: "db.m6g.16xlarge";
    readonly R3_Large: "db.r3.large";
    readonly R3_XLarge: "db.r3.xlarge";
    readonly R3_2XLarge: "db.r3.2xlarge";
    readonly R3_4XLarge: "db.r3.4xlarge";
    readonly R3_8XLarge: "db.r3.8xlarge";
    readonly R4_Large: "db.r4.large";
    readonly R4_XLarge: "db.r4.xlarge";
    readonly R4_2XLarge: "db.r4.2xlarge";
    readonly R4_4XLarge: "db.r4.4xlarge";
    readonly R4_8XLarge: "db.r4.8xlarge";
    readonly R4_16XLarge: "db.r4.16xlarge";
    readonly R5_Large: "db.r5.large";
    readonly R5_XLarge: "db.r5.xlarge";
    readonly R5_2XLarge: "db.r5.2xlarge";
    readonly R5_4XLarge: "db.r5.4xlarge";
    readonly R5_12XLarge: "db.r5.12xlarge";
    readonly R5_24XLarge: "db.r5.24xlarge";
    readonly R6G_Large: "db.r6g.large";
    readonly R6G_XLarge: "db.r6g.xlarge";
    readonly R6G_2XLarge: "db.r6g.2xlarge";
    readonly R6G_4XLarge: "db.r6g.4xlarge";
    readonly R6G_8XLarge: "db.r6g.8xlarge";
    readonly R6G_12XLarge: "db.r6g.12xlarge";
    readonly R6G_16XLarge: "db.r6g.16xlarge";
    readonly X1_16XLarge: "db.x1.16xlarge";
    readonly X1_32XLarge: "db.x1.32xlarge";
    readonly X1E_XLarge: "db.x1e.xlarge";
    readonly X1E_2XLarge: "db.x1e.2xlarge";
    readonly X1E_4XLarge: "db.x1e.4xlarge";
    readonly X1E_8XLarge: "db.x1e.8xlarge";
    readonly X1E_32XLarge: "db.x1e.32xlarge";
};
export declare type InstanceType = (typeof InstanceType)[keyof typeof InstanceType];
export declare const StorageType: {
    readonly Standard: "standard";
    readonly GP2: "gp2";
    readonly IO1: "io1";
};
export declare type StorageType = (typeof StorageType)[keyof typeof StorageType];
