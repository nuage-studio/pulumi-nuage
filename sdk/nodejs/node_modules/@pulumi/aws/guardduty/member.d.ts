import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a resource to manage a GuardDuty member. To accept invitations in member accounts, see the `aws.guardduty.InviteAccepter` resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const primary = new aws.guardduty.Detector("primary", {enable: true});
 * const memberDetector = new aws.guardduty.Detector("memberDetector", {enable: true}, {
 *     provider: aws.dev,
 * });
 * const memberMember = new aws.guardduty.Member("memberMember", {
 *     accountId: memberDetector.accountId,
 *     detectorId: primary.id,
 *     email: "required@example.com",
 *     invite: true,
 *     invitationMessage: "please accept guardduty invitation",
 * });
 * ```
 *
 * ## Import
 *
 * GuardDuty members can be imported using the the primary GuardDuty detector ID and member AWS account ID, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:guardduty/member:Member MyMember 00b00fd5aecc0ab60a708659477e9617:123456789012
 * ```
 */
export declare class Member extends pulumi.CustomResource {
    /**
     * Get an existing Member resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MemberState, opts?: pulumi.CustomResourceOptions): Member;
    /**
     * Returns true if the given object is an instance of Member.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Member;
    /**
     * AWS account ID for member account.
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * The detector ID of the GuardDuty account where you want to create member accounts.
     */
    readonly detectorId: pulumi.Output<string>;
    /**
     * Boolean whether an email notification is sent to the accounts. Defaults to `false`.
     */
    readonly disableEmailNotification: pulumi.Output<boolean | undefined>;
    /**
     * Email address for member account.
     */
    readonly email: pulumi.Output<string>;
    /**
     * Message for invitation.
     */
    readonly invitationMessage: pulumi.Output<string | undefined>;
    /**
     * Boolean whether to invite the account to GuardDuty as a member. Defaults to `false`. To detect if an invitation needs to be (re-)sent, the this provider state value is `true` based on a `relationshipStatus` of `Disabled`, `Enabled`, `Invited`, or `EmailVerificationInProgress`.
     */
    readonly invite: pulumi.Output<boolean | undefined>;
    /**
     * The status of the relationship between the member account and its primary account. More information can be found in [Amazon GuardDuty API Reference](https://docs.aws.amazon.com/guardduty/latest/ug/get-members.html).
     */
    readonly relationshipStatus: pulumi.Output<string>;
    /**
     * Create a Member resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MemberArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Member resources.
 */
export interface MemberState {
    /**
     * AWS account ID for member account.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The detector ID of the GuardDuty account where you want to create member accounts.
     */
    detectorId?: pulumi.Input<string>;
    /**
     * Boolean whether an email notification is sent to the accounts. Defaults to `false`.
     */
    disableEmailNotification?: pulumi.Input<boolean>;
    /**
     * Email address for member account.
     */
    email?: pulumi.Input<string>;
    /**
     * Message for invitation.
     */
    invitationMessage?: pulumi.Input<string>;
    /**
     * Boolean whether to invite the account to GuardDuty as a member. Defaults to `false`. To detect if an invitation needs to be (re-)sent, the this provider state value is `true` based on a `relationshipStatus` of `Disabled`, `Enabled`, `Invited`, or `EmailVerificationInProgress`.
     */
    invite?: pulumi.Input<boolean>;
    /**
     * The status of the relationship between the member account and its primary account. More information can be found in [Amazon GuardDuty API Reference](https://docs.aws.amazon.com/guardduty/latest/ug/get-members.html).
     */
    relationshipStatus?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Member resource.
 */
export interface MemberArgs {
    /**
     * AWS account ID for member account.
     */
    accountId: pulumi.Input<string>;
    /**
     * The detector ID of the GuardDuty account where you want to create member accounts.
     */
    detectorId: pulumi.Input<string>;
    /**
     * Boolean whether an email notification is sent to the accounts. Defaults to `false`.
     */
    disableEmailNotification?: pulumi.Input<boolean>;
    /**
     * Email address for member account.
     */
    email: pulumi.Input<string>;
    /**
     * Message for invitation.
     */
    invitationMessage?: pulumi.Input<string>;
    /**
     * Boolean whether to invite the account to GuardDuty as a member. Defaults to `false`. To detect if an invitation needs to be (re-)sent, the this provider state value is `true` based on a `relationshipStatus` of `Disabled`, `Enabled`, `Invited`, or `EmailVerificationInProgress`.
     */
    invite?: pulumi.Input<boolean>;
}
