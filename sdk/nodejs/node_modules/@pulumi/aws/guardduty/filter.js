"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Filter = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a resource to manage a GuardDuty filter.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const myFilter = new aws.guardduty.Filter("myFilter", {
 *     action: "ARCHIVE",
 *     detectorId: aws_guardduty_detector.example.id,
 *     rank: 1,
 *     findingCriteria: {
 *         criterions: [
 *             {
 *                 field: "region",
 *                 equals: ["eu-west-1"],
 *             },
 *             {
 *                 field: "service.additionalInfo.threatListName",
 *                 notEquals: [
 *                     "some-threat",
 *                     "another-threat",
 *                 ],
 *             },
 *             {
 *                 field: "updatedAt",
 *                 greaterThan: "2020-01-01T00:00:00Z",
 *                 lessThan: "2020-02-01T00:00:00Z",
 *             },
 *             {
 *                 field: "severity",
 *                 greaterThanOrEqual: "4",
 *             },
 *         ],
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * GuardDuty filters can be imported using the detector ID and filter's name separated by a colon, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:guardduty/filter:Filter MyFilter 00b00fd5aecc0ab60a708659477e9617:MyFilter
 * ```
 */
class Filter extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["detectorId"] = state ? state.detectorId : undefined;
            resourceInputs["findingCriteria"] = state ? state.findingCriteria : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["rank"] = state ? state.rank : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.action === undefined) && !opts.urn) {
                throw new Error("Missing required property 'action'");
            }
            if ((!args || args.detectorId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'detectorId'");
            }
            if ((!args || args.findingCriteria === undefined) && !opts.urn) {
                throw new Error("Missing required property 'findingCriteria'");
            }
            if ((!args || args.rank === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rank'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["detectorId"] = args ? args.detectorId : undefined;
            resourceInputs["findingCriteria"] = args ? args.findingCriteria : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["rank"] = args ? args.rank : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Filter.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing Filter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Filter(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Filter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Filter.__pulumiType;
    }
}
exports.Filter = Filter;
/** @internal */
Filter.__pulumiType = 'aws:guardduty/filter:Filter';
//# sourceMappingURL=filter.js.map