"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.InviteAccepter = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a resource to accept a pending GuardDuty invite on creation, ensure the detector has the correct primary account on read, and disassociate with the primary account upon removal.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const primary = new aws.Provider("primary", {});
 * const member = new aws.Provider("member", {});
 * const primaryDetector = new aws.guardduty.Detector("primaryDetector", {}, {
 *     provider: aws.primary,
 * });
 * const memberDetector = new aws.guardduty.Detector("memberDetector", {}, {
 *     provider: aws.member,
 * });
 * const memberMember = new aws.guardduty.Member("memberMember", {
 *     accountId: memberDetector.accountId,
 *     detectorId: primaryDetector.id,
 *     email: "required@example.com",
 *     invite: true,
 * }, {
 *     provider: aws.primary,
 * });
 * const memberInviteAccepter = new aws.guardduty.InviteAccepter("memberInviteAccepter", {
 *     detectorId: memberDetector.id,
 *     masterAccountId: primaryDetector.accountId,
 * }, {
 *     provider: aws.member,
 *     dependsOn: [memberMember],
 * });
 * ```
 *
 * ## Import
 *
 * `aws_guardduty_invite_accepter` can be imported using the the member GuardDuty detector ID, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:guardduty/inviteAccepter:InviteAccepter member 00b00fd5aecc0ab60a708659477e9617
 * ```
 */
class InviteAccepter extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["detectorId"] = state ? state.detectorId : undefined;
            resourceInputs["masterAccountId"] = state ? state.masterAccountId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.detectorId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'detectorId'");
            }
            if ((!args || args.masterAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'masterAccountId'");
            }
            resourceInputs["detectorId"] = args ? args.detectorId : undefined;
            resourceInputs["masterAccountId"] = args ? args.masterAccountId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InviteAccepter.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing InviteAccepter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new InviteAccepter(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of InviteAccepter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InviteAccepter.__pulumiType;
    }
}
exports.InviteAccepter = InviteAccepter;
/** @internal */
InviteAccepter.__pulumiType = 'aws:guardduty/inviteAccepter:InviteAccepter';
//# sourceMappingURL=inviteAccepter.js.map