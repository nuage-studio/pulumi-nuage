import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Provides a CloudFront Field-level Encryption Config resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.cloudfront.FieldLevelEncryptionConfig("test", {
 *     comment: "test comment",
 *     contentTypeProfileConfig: {
 *         forwardWhenContentTypeIsUnknown: true,
 *         contentTypeProfiles: {
 *             items: [{
 *                 contentType: "application/x-www-form-urlencoded",
 *                 format: "URLEncoded",
 *             }],
 *         },
 *     },
 *     queryArgProfileConfig: {
 *         forwardWhenQueryArgProfileIsUnknown: true,
 *         queryArgProfiles: {
 *             items: [{
 *                 profileId: aws_cloudfront_field_level_encryption_profile.test.id,
 *                 queryArg: "Arg1",
 *             }],
 *         },
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Cloudfront Field Level Encryption Config can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import aws:cloudfront/fieldLevelEncryptionConfig:FieldLevelEncryptionConfig config E74FTE3AEXAMPLE
 * ```
 */
export declare class FieldLevelEncryptionConfig extends pulumi.CustomResource {
    /**
     * Get an existing FieldLevelEncryptionConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FieldLevelEncryptionConfigState, opts?: pulumi.CustomResourceOptions): FieldLevelEncryptionConfig;
    /**
     * Returns true if the given object is an instance of FieldLevelEncryptionConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is FieldLevelEncryptionConfig;
    /**
     * Internal value used by CloudFront to allow future updates to the Field Level Encryption Config.
     */
    readonly callerReference: pulumi.Output<string>;
    /**
     * An optional comment about the Field Level Encryption Config.
     */
    readonly comment: pulumi.Output<string | undefined>;
    /**
     * Content Type Profile Config specifies when to forward content if a content type isn't recognized and profiles to use as by default in a request if a query argument doesn't specify a profile to use.
     */
    readonly contentTypeProfileConfig: pulumi.Output<outputs.cloudfront.FieldLevelEncryptionConfigContentTypeProfileConfig>;
    /**
     * The current version of the Field Level Encryption Config. For example: `E2QWRUHAPOMQZL`.
     */
    readonly etag: pulumi.Output<string>;
    /**
     * Query Arg Profile Config that specifies when to forward content if a profile isn't found and the profile that can be provided as a query argument in a request.
     */
    readonly queryArgProfileConfig: pulumi.Output<outputs.cloudfront.FieldLevelEncryptionConfigQueryArgProfileConfig>;
    /**
     * Create a FieldLevelEncryptionConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FieldLevelEncryptionConfigArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering FieldLevelEncryptionConfig resources.
 */
export interface FieldLevelEncryptionConfigState {
    /**
     * Internal value used by CloudFront to allow future updates to the Field Level Encryption Config.
     */
    callerReference?: pulumi.Input<string>;
    /**
     * An optional comment about the Field Level Encryption Config.
     */
    comment?: pulumi.Input<string>;
    /**
     * Content Type Profile Config specifies when to forward content if a content type isn't recognized and profiles to use as by default in a request if a query argument doesn't specify a profile to use.
     */
    contentTypeProfileConfig?: pulumi.Input<inputs.cloudfront.FieldLevelEncryptionConfigContentTypeProfileConfig>;
    /**
     * The current version of the Field Level Encryption Config. For example: `E2QWRUHAPOMQZL`.
     */
    etag?: pulumi.Input<string>;
    /**
     * Query Arg Profile Config that specifies when to forward content if a profile isn't found and the profile that can be provided as a query argument in a request.
     */
    queryArgProfileConfig?: pulumi.Input<inputs.cloudfront.FieldLevelEncryptionConfigQueryArgProfileConfig>;
}
/**
 * The set of arguments for constructing a FieldLevelEncryptionConfig resource.
 */
export interface FieldLevelEncryptionConfigArgs {
    /**
     * An optional comment about the Field Level Encryption Config.
     */
    comment?: pulumi.Input<string>;
    /**
     * Content Type Profile Config specifies when to forward content if a content type isn't recognized and profiles to use as by default in a request if a query argument doesn't specify a profile to use.
     */
    contentTypeProfileConfig: pulumi.Input<inputs.cloudfront.FieldLevelEncryptionConfigContentTypeProfileConfig>;
    /**
     * Query Arg Profile Config that specifies when to forward content if a profile isn't found and the profile that can be provided as a query argument in a request.
     */
    queryArgProfileConfig: pulumi.Input<inputs.cloudfront.FieldLevelEncryptionConfigQueryArgProfileConfig>;
}
