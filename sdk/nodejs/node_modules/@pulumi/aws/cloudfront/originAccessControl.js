"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.OriginAccessControl = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages an AWS CloudFront Origin Access Control, which is used by CloudFront Distributions with an Amazon S3 bucket as the origin.
 *
 * Read more about Origin Access Control in the [CloudFront Developer Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html).
 *
 * ## Example Usage
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.cloudfront.OriginAccessControl("example", {
 *     description: "Example Policy",
 *     originAccessControlOriginType: "s3",
 *     signingBehavior: "always",
 *     signingProtocol: "sigv4",
 * });
 * ```
 *
 * ## Import
 *
 * CloudFront Origin Access Control can be imported using the `id`. For example
 *
 * ```sh
 *  $ pulumi import aws:cloudfront/originAccessControl:OriginAccessControl example E327GJI25M56DG
 * ```
 */
class OriginAccessControl extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["etag"] = state ? state.etag : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["originAccessControlOriginType"] = state ? state.originAccessControlOriginType : undefined;
            resourceInputs["signingBehavior"] = state ? state.signingBehavior : undefined;
            resourceInputs["signingProtocol"] = state ? state.signingProtocol : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.originAccessControlOriginType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'originAccessControlOriginType'");
            }
            if ((!args || args.signingBehavior === undefined) && !opts.urn) {
                throw new Error("Missing required property 'signingBehavior'");
            }
            if ((!args || args.signingProtocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'signingProtocol'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["originAccessControlOriginType"] = args ? args.originAccessControlOriginType : undefined;
            resourceInputs["signingBehavior"] = args ? args.signingBehavior : undefined;
            resourceInputs["signingProtocol"] = args ? args.signingProtocol : undefined;
            resourceInputs["etag"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OriginAccessControl.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing OriginAccessControl resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new OriginAccessControl(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of OriginAccessControl.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OriginAccessControl.__pulumiType;
    }
}
exports.OriginAccessControl = OriginAccessControl;
/** @internal */
OriginAccessControl.__pulumiType = 'aws:cloudfront/originAccessControl:OriginAccessControl';
//# sourceMappingURL=originAccessControl.js.map