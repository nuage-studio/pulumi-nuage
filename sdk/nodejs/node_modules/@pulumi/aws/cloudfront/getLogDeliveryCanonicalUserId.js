"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getLogDeliveryCanonicalUserIdOutput = exports.getLogDeliveryCanonicalUserId = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * The CloudFront Log Delivery Canonical User ID data source allows access to the [canonical user ID](http://docs.aws.amazon.com/general/latest/gr/acct-identifiers.html) of the AWS `awslogsdelivery` account for CloudFront bucket logging.
 * See the [Amazon CloudFront Developer Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html) for more information.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleLogDeliveryCanonicalUserId = aws.cloudfront.getLogDeliveryCanonicalUserId({});
 * const exampleBucketV2 = new aws.s3.BucketV2("exampleBucketV2", {});
 * const exampleBucketAclV2 = new aws.s3.BucketAclV2("exampleBucketAclV2", {
 *     bucket: exampleBucketV2.id,
 *     accessControlPolicy: {
 *         grants: [{
 *             grantee: {
 *                 id: exampleLogDeliveryCanonicalUserId.then(exampleLogDeliveryCanonicalUserId => exampleLogDeliveryCanonicalUserId.id),
 *                 type: "CanonicalUser",
 *             },
 *             permission: "FULL_CONTROL",
 *         }],
 *     },
 * });
 * ```
 */
function getLogDeliveryCanonicalUserId(args, opts) {
    args = args || {};
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:cloudfront/getLogDeliveryCanonicalUserId:getLogDeliveryCanonicalUserId", {
        "region": args.region,
    }, opts);
}
exports.getLogDeliveryCanonicalUserId = getLogDeliveryCanonicalUserId;
function getLogDeliveryCanonicalUserIdOutput(args, opts) {
    return pulumi.output(args).apply(a => getLogDeliveryCanonicalUserId(a, opts));
}
exports.getLogDeliveryCanonicalUserIdOutput = getLogDeliveryCanonicalUserIdOutput;
//# sourceMappingURL=getLogDeliveryCanonicalUserId.js.map