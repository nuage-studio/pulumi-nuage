import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a Pinpoint APNs Sandbox Channel resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * import * as fs from "fs";
 *
 * const app = new aws.pinpoint.App("app", {});
 * const apnsSandbox = new aws.pinpoint.ApnsSandboxChannel("apnsSandbox", {
 *     applicationId: app.applicationId,
 *     certificate: fs.readFileSync("./certificate.pem"),
 *     privateKey: fs.readFileSync("./private_key.key"),
 * });
 * ```
 *
 * ## Import
 *
 * Pinpoint APNs Sandbox Channel can be imported using the `application-id`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:pinpoint/apnsSandboxChannel:ApnsSandboxChannel apns_sandbox application-id
 * ```
 */
export declare class ApnsSandboxChannel extends pulumi.CustomResource {
    /**
     * Get an existing ApnsSandboxChannel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApnsSandboxChannelState, opts?: pulumi.CustomResourceOptions): ApnsSandboxChannel;
    /**
     * Returns true if the given object is an instance of ApnsSandboxChannel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ApnsSandboxChannel;
    /**
     * The application ID.
     */
    readonly applicationId: pulumi.Output<string>;
    /**
     * The ID assigned to your iOS app. To find this value, choose Certificates, IDs & Profiles, choose App IDs in the Identifiers section, and choose your app.
     */
    readonly bundleId: pulumi.Output<string | undefined>;
    /**
     * The pem encoded TLS Certificate from Apple.
     */
    readonly certificate: pulumi.Output<string | undefined>;
    /**
     * The default authentication method used for APNs Sandbox.
     * __NOTE__: Amazon Pinpoint uses this default for every APNs push notification that you send using the console.
     * You can override the default when you send a message programmatically using the Amazon Pinpoint API, the AWS CLI, or an AWS SDK.
     * If your default authentication type fails, Amazon Pinpoint doesn't attempt to use the other authentication type.
     */
    readonly defaultAuthenticationMethod: pulumi.Output<string | undefined>;
    /**
     * Whether the channel is enabled or disabled. Defaults to `true`.
     */
    readonly enabled: pulumi.Output<boolean | undefined>;
    /**
     * The Certificate Private Key file (ie. `.key` file).
     */
    readonly privateKey: pulumi.Output<string | undefined>;
    /**
     * The ID assigned to your Apple developer account team. This value is provided on the Membership page.
     */
    readonly teamId: pulumi.Output<string | undefined>;
    /**
     * The `.p8` file that you download from your Apple developer account when you create an authentication key.
     */
    readonly tokenKey: pulumi.Output<string | undefined>;
    /**
     * The ID assigned to your signing key. To find this value, choose Certificates, IDs & Profiles, and choose your key in the Keys section.
     */
    readonly tokenKeyId: pulumi.Output<string | undefined>;
    /**
     * Create a ApnsSandboxChannel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApnsSandboxChannelArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ApnsSandboxChannel resources.
 */
export interface ApnsSandboxChannelState {
    /**
     * The application ID.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * The ID assigned to your iOS app. To find this value, choose Certificates, IDs & Profiles, choose App IDs in the Identifiers section, and choose your app.
     */
    bundleId?: pulumi.Input<string>;
    /**
     * The pem encoded TLS Certificate from Apple.
     */
    certificate?: pulumi.Input<string>;
    /**
     * The default authentication method used for APNs Sandbox.
     * __NOTE__: Amazon Pinpoint uses this default for every APNs push notification that you send using the console.
     * You can override the default when you send a message programmatically using the Amazon Pinpoint API, the AWS CLI, or an AWS SDK.
     * If your default authentication type fails, Amazon Pinpoint doesn't attempt to use the other authentication type.
     */
    defaultAuthenticationMethod?: pulumi.Input<string>;
    /**
     * Whether the channel is enabled or disabled. Defaults to `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The Certificate Private Key file (ie. `.key` file).
     */
    privateKey?: pulumi.Input<string>;
    /**
     * The ID assigned to your Apple developer account team. This value is provided on the Membership page.
     */
    teamId?: pulumi.Input<string>;
    /**
     * The `.p8` file that you download from your Apple developer account when you create an authentication key.
     */
    tokenKey?: pulumi.Input<string>;
    /**
     * The ID assigned to your signing key. To find this value, choose Certificates, IDs & Profiles, and choose your key in the Keys section.
     */
    tokenKeyId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ApnsSandboxChannel resource.
 */
export interface ApnsSandboxChannelArgs {
    /**
     * The application ID.
     */
    applicationId: pulumi.Input<string>;
    /**
     * The ID assigned to your iOS app. To find this value, choose Certificates, IDs & Profiles, choose App IDs in the Identifiers section, and choose your app.
     */
    bundleId?: pulumi.Input<string>;
    /**
     * The pem encoded TLS Certificate from Apple.
     */
    certificate?: pulumi.Input<string>;
    /**
     * The default authentication method used for APNs Sandbox.
     * __NOTE__: Amazon Pinpoint uses this default for every APNs push notification that you send using the console.
     * You can override the default when you send a message programmatically using the Amazon Pinpoint API, the AWS CLI, or an AWS SDK.
     * If your default authentication type fails, Amazon Pinpoint doesn't attempt to use the other authentication type.
     */
    defaultAuthenticationMethod?: pulumi.Input<string>;
    /**
     * Whether the channel is enabled or disabled. Defaults to `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The Certificate Private Key file (ie. `.key` file).
     */
    privateKey?: pulumi.Input<string>;
    /**
     * The ID assigned to your Apple developer account team. This value is provided on the Membership page.
     */
    teamId?: pulumi.Input<string>;
    /**
     * The `.p8` file that you download from your Apple developer account when you create an authentication key.
     */
    tokenKey?: pulumi.Input<string>;
    /**
     * The ID assigned to your signing key. To find this value, choose Certificates, IDs & Profiles, and choose your key in the Keys section.
     */
    tokenKeyId?: pulumi.Input<string>;
}
