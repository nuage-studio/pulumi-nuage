"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SmsChannel = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides a Pinpoint SMS Channel resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const app = new aws.pinpoint.App("app", {});
 * const sms = new aws.pinpoint.SmsChannel("sms", {applicationId: app.applicationId});
 * ```
 *
 * ## Import
 *
 * Pinpoint SMS Channel can be imported using the `application-id`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:pinpoint/smsChannel:SmsChannel sms application-id
 * ```
 */
class SmsChannel extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["applicationId"] = state ? state.applicationId : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["promotionalMessagesPerSecond"] = state ? state.promotionalMessagesPerSecond : undefined;
            resourceInputs["senderId"] = state ? state.senderId : undefined;
            resourceInputs["shortCode"] = state ? state.shortCode : undefined;
            resourceInputs["transactionalMessagesPerSecond"] = state ? state.transactionalMessagesPerSecond : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.applicationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationId'");
            }
            resourceInputs["applicationId"] = args ? args.applicationId : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["senderId"] = args ? args.senderId : undefined;
            resourceInputs["shortCode"] = args ? args.shortCode : undefined;
            resourceInputs["promotionalMessagesPerSecond"] = undefined /*out*/;
            resourceInputs["transactionalMessagesPerSecond"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SmsChannel.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing SmsChannel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SmsChannel(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SmsChannel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SmsChannel.__pulumiType;
    }
}
exports.SmsChannel = SmsChannel;
/** @internal */
SmsChannel.__pulumiType = 'aws:pinpoint/smsChannel:SmsChannel';
//# sourceMappingURL=smsChannel.js.map