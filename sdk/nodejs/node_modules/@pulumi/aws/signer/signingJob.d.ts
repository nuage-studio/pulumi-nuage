import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Creates a Signer Signing Job.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const testSp = new aws.signer.SigningProfile("testSp", {platformId: "AWSLambda-SHA384-ECDSA"});
 * const buildSigningJob = new aws.signer.SigningJob("buildSigningJob", {
 *     profileName: testSp.name,
 *     source: {
 *         s3: {
 *             bucket: "s3-bucket-name",
 *             key: "object-to-be-signed.zip",
 *             version: "jADjFYYYEXAMPLETszPjOmCMFDzd9dN1",
 *         },
 *     },
 *     destination: {
 *         s3: {
 *             bucket: "s3-bucket-name",
 *             prefix: "signed/",
 *         },
 *     },
 *     ignoreSigningJobFailure: true,
 * });
 * ```
 *
 * ## Import
 *
 * Signer signing jobs can be imported using the `job_id`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:signer/signingJob:SigningJob test_signer_signing_job 9ed7e5c3-b8d4-4da0-8459-44e0b068f7ee
 * ```
 */
export declare class SigningJob extends pulumi.CustomResource {
    /**
     * Get an existing SigningJob resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SigningJobState, opts?: pulumi.CustomResourceOptions): SigningJob;
    /**
     * Returns true if the given object is an instance of SigningJob.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SigningJob;
    /**
     * Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the signing job was completed.
     */
    readonly completedAt: pulumi.Output<string>;
    /**
     * Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the signing job was created.
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * The S3 bucket in which to save your signed object. See Destination below for details.
     */
    readonly destination: pulumi.Output<outputs.signer.SigningJobDestination>;
    /**
     * Set this argument to `true` to ignore signing job failures and retrieve failed status and reason. Default `false`.
     */
    readonly ignoreSigningJobFailure: pulumi.Output<boolean | undefined>;
    /**
     * The ID of the signing job on output.
     */
    readonly jobId: pulumi.Output<string>;
    /**
     * The IAM entity that initiated the signing job.
     */
    readonly jobInvoker: pulumi.Output<string>;
    /**
     * The AWS account ID of the job owner.
     */
    readonly jobOwner: pulumi.Output<string>;
    /**
     * A human-readable name for the signing platform associated with the signing job.
     */
    readonly platformDisplayName: pulumi.Output<string>;
    /**
     * The platform to which your signed code image will be distributed.
     */
    readonly platformId: pulumi.Output<string>;
    /**
     * The name of the profile to initiate the signing operation.
     */
    readonly profileName: pulumi.Output<string>;
    /**
     * The version of the signing profile used to initiate the signing job.
     */
    readonly profileVersion: pulumi.Output<string>;
    /**
     * The IAM principal that requested the signing job.
     */
    readonly requestedBy: pulumi.Output<string>;
    /**
     * A revocation record if the signature generated by the signing job has been revoked. Contains a timestamp and the ID of the IAM entity that revoked the signature.
     */
    readonly revocationRecords: pulumi.Output<outputs.signer.SigningJobRevocationRecord[]>;
    /**
     * The time when the signature of a signing job expires.
     */
    readonly signatureExpiresAt: pulumi.Output<string>;
    /**
     * Name of the S3 bucket where the signed code image is saved by code signing.
     */
    readonly signedObjects: pulumi.Output<outputs.signer.SigningJobSignedObject[]>;
    /**
     * The S3 bucket that contains the object to sign. See Source below for details.
     */
    readonly source: pulumi.Output<outputs.signer.SigningJobSource>;
    /**
     * Status of the signing job.
     */
    readonly status: pulumi.Output<string>;
    /**
     * String value that contains the status reason.
     */
    readonly statusReason: pulumi.Output<string>;
    /**
     * Create a SigningJob resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SigningJobArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering SigningJob resources.
 */
export interface SigningJobState {
    /**
     * Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the signing job was completed.
     */
    completedAt?: pulumi.Input<string>;
    /**
     * Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the signing job was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The S3 bucket in which to save your signed object. See Destination below for details.
     */
    destination?: pulumi.Input<inputs.signer.SigningJobDestination>;
    /**
     * Set this argument to `true` to ignore signing job failures and retrieve failed status and reason. Default `false`.
     */
    ignoreSigningJobFailure?: pulumi.Input<boolean>;
    /**
     * The ID of the signing job on output.
     */
    jobId?: pulumi.Input<string>;
    /**
     * The IAM entity that initiated the signing job.
     */
    jobInvoker?: pulumi.Input<string>;
    /**
     * The AWS account ID of the job owner.
     */
    jobOwner?: pulumi.Input<string>;
    /**
     * A human-readable name for the signing platform associated with the signing job.
     */
    platformDisplayName?: pulumi.Input<string>;
    /**
     * The platform to which your signed code image will be distributed.
     */
    platformId?: pulumi.Input<string>;
    /**
     * The name of the profile to initiate the signing operation.
     */
    profileName?: pulumi.Input<string>;
    /**
     * The version of the signing profile used to initiate the signing job.
     */
    profileVersion?: pulumi.Input<string>;
    /**
     * The IAM principal that requested the signing job.
     */
    requestedBy?: pulumi.Input<string>;
    /**
     * A revocation record if the signature generated by the signing job has been revoked. Contains a timestamp and the ID of the IAM entity that revoked the signature.
     */
    revocationRecords?: pulumi.Input<pulumi.Input<inputs.signer.SigningJobRevocationRecord>[]>;
    /**
     * The time when the signature of a signing job expires.
     */
    signatureExpiresAt?: pulumi.Input<string>;
    /**
     * Name of the S3 bucket where the signed code image is saved by code signing.
     */
    signedObjects?: pulumi.Input<pulumi.Input<inputs.signer.SigningJobSignedObject>[]>;
    /**
     * The S3 bucket that contains the object to sign. See Source below for details.
     */
    source?: pulumi.Input<inputs.signer.SigningJobSource>;
    /**
     * Status of the signing job.
     */
    status?: pulumi.Input<string>;
    /**
     * String value that contains the status reason.
     */
    statusReason?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a SigningJob resource.
 */
export interface SigningJobArgs {
    /**
     * The S3 bucket in which to save your signed object. See Destination below for details.
     */
    destination: pulumi.Input<inputs.signer.SigningJobDestination>;
    /**
     * Set this argument to `true` to ignore signing job failures and retrieve failed status and reason. Default `false`.
     */
    ignoreSigningJobFailure?: pulumi.Input<boolean>;
    /**
     * The name of the profile to initiate the signing operation.
     */
    profileName: pulumi.Input<string>;
    /**
     * The S3 bucket that contains the object to sign. See Source below for details.
     */
    source: pulumi.Input<inputs.signer.SigningJobSource>;
}
