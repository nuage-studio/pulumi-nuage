"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResourceSet = exports.RecoveryGroup = exports.ReadinessCheck = exports.Cell = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Cell = null;
exports.ReadinessCheck = null;
exports.RecoveryGroup = null;
exports.ResourceSet = null;
utilities.lazyLoad(exports, ["Cell"], () => require("./cell"));
utilities.lazyLoad(exports, ["ReadinessCheck"], () => require("./readinessCheck"));
utilities.lazyLoad(exports, ["RecoveryGroup"], () => require("./recoveryGroup"));
utilities.lazyLoad(exports, ["ResourceSet"], () => require("./resourceSet"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:route53recoveryreadiness/cell:Cell":
                return new exports.Cell(name, undefined, { urn });
            case "aws:route53recoveryreadiness/readinessCheck:ReadinessCheck":
                return new exports.ReadinessCheck(name, undefined, { urn });
            case "aws:route53recoveryreadiness/recoveryGroup:RecoveryGroup":
                return new exports.RecoveryGroup(name, undefined, { urn });
            case "aws:route53recoveryreadiness/resourceSet:ResourceSet":
                return new exports.ResourceSet(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "route53recoveryreadiness/cell", _module);
pulumi.runtime.registerResourceModule("aws", "route53recoveryreadiness/readinessCheck", _module);
pulumi.runtime.registerResourceModule("aws", "route53recoveryreadiness/recoveryGroup", _module);
pulumi.runtime.registerResourceModule("aws", "route53recoveryreadiness/resourceSet", _module);
//# sourceMappingURL=index.js.map