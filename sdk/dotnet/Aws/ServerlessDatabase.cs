// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Nuage.Aws
{
    [NuageResourceType("nuage:aws:ServerlessDatabase")]
    public partial class ServerlessDatabase : Pulumi.ComponentResource
    {
        [Output("cluster_arn")]
        public Output<string> Cluster_arn { get; private set; } = null!;

        [Output("host")]
        public Output<string> Host { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("password")]
        public Output<string?> Password { get; private set; } = null!;

        [Output("policy_document")]
        public Output<string?> Policy_document { get; private set; } = null!;

        [Output("port")]
        public Output<double> Port { get; private set; } = null!;

        [Output("uri")]
        public Output<string> Uri { get; private set; } = null!;

        [Output("user")]
        public Output<string> User { get; private set; } = null!;


        /// <summary>
        /// Create a ServerlessDatabase resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServerlessDatabase(string name, ServerlessDatabaseArgs args, ComponentResourceOptions? options = null)
            : base("nuage:aws:ServerlessDatabase", name, args ?? new ServerlessDatabaseArgs(), MakeResourceOptions(options, ""), remote: true)
        {
        }

        private static ComponentResourceOptions MakeResourceOptions(ComponentResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new ComponentResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = ComponentResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
    }

    public sealed class ServerlessDatabaseArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable data api. Defaults to `false`
        /// </summary>
        [Input("dataApi")]
        public Input<bool>? DataApi { get; set; }

        /// <summary>
        /// Name of the database.
        /// </summary>
        [Input("databaseName")]
        public Input<string>? DatabaseName { get; set; }

        /// <summary>
        /// Database type. `mysql` or `postgresql`
        /// </summary>
        [Input("databaseType", required: true)]
        public Input<string> DatabaseType { get; set; } = null!;

        [Input("ipWhitelist")]
        private InputList<string>? _ipWhitelist;

        /// <summary>
        /// List of whitelisted IP addresses. If not specified, it will be public 0.0.0.0/0
        /// </summary>
        public InputList<string> IpWhitelist
        {
            get => _ipWhitelist ?? (_ipWhitelist = new InputList<string>());
            set => _ipWhitelist = value;
        }

        /// <summary>
        /// Master user name of the db.
        /// </summary>
        [Input("masterUserName")]
        public Input<string>? MasterUserName { get; set; }

        /// <summary>
        /// Resource name.
        /// </summary>
        [Input("resourceName", required: true)]
        public Input<string> ResourceName { get; set; } = null!;

        /// <summary>
        /// Determines whether a final DB snapshot is created before the DB instance is deleted. Defaults to `false`
        /// </summary>
        [Input("skipFinalSnapshot")]
        public Input<bool>? SkipFinalSnapshot { get; set; }

        /// <summary>
        /// Vpc id.
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        [Input("vpcSubnets", required: true)]
        private InputList<string>? _vpcSubnets;

        /// <summary>
        /// List of subnet ip addresses.
        /// </summary>
        public InputList<string> VpcSubnets
        {
            get => _vpcSubnets ?? (_vpcSubnets = new InputList<string>());
            set => _vpcSubnets = value;
        }

        public ServerlessDatabaseArgs()
        {
        }
    }
}
