{
    "name": "nuage",
    "types": {
        "nuage:aws:ArchitectureType": {
            "type":"string",
            "description":"Architecture, either 'X86_64' or 'arm64'.",
            "enum": [
                {
                    "description": "X86_64 architecture.",
                    "value": "X86_64"
                },
                {
                    "description": "ARM64 architecture.",
                    "value": "ARM64"
                }
            ]
        }
    },
    "resources": {
        "nuage:aws:bucket_nuage": {
            "isComponent": true,
            "properties": {
                "bucket": {
                    "$ref": "/aws/v4.0.0/schema.json#/resources/aws:s3%2Fbucket:Bucket",
                    "description": "The bucket resource."
                }
            },
            "required": [
                "bucket"
            ]
        },
        "nuage:aws:ContainerFunction": {
            "isComponent": true,
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description":"Name of the resource."
                },
                "namePrefix": {
                    "type": "string",
                    "description":"Name prefix as an alternative to name and adds random suffix at the end."
                },
                "description": {
                    "type": "string",
                    "description":"Description of the function."
                },
                "dockerfile": {
                    "type": "string",
                    "description":"Dockerfile path. Defaults to `./Dockerfile`"
                },
                "context": {
                    "type": "string",
                    "description":"Dockerfile context path."
                },
                "ecrRepositoryName": {
                    "type": "string",
                    "description":"Existing ECR repository name"
                },
                "architecture": {
                    "description":"Architecture, either `X86_64` or `ARM64`. Defaults to `x86_64`",                    
                    "type":"string"
                },
                "memorySize": {
                    "type": "number",
                    "description":"Amount of memory in MB your Lambda Function can use at runtime. Defaults to `512`."
                },
                "timeout": {
                    "type": "number",
                    "description":"Amount of time your Lambda Function has to run in seconds. Defaults to `3`"
                },            
                "environment": {
                    "type": "object",
                    "description":"Environment Variables"
                },    
                "policyDocument": {
                    "type": "string",
                    "description":"Policy Document for lambda."
                },
                "keepWarm": {
                    "type": "boolean",
                    "description":"Keep warm by refreshing the lambda function every 5 minutes. Defaults to `false`"
                },
                "url": {
                    "type": "boolean",
                    "description":"Use Lambda URL. Defaults to `false`"
                },
                "logRetentionInDays": {
                    "type": "number",
                    "description":"Number of days for log retention to pass in cloudwatch log group.."
                }
            },
            "requiredInputs": [                
            ],
            "properties": {
                "arn": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "function_url": {
                    "type": "string"
                }
            },
            "required": [
                "arn",
                "name",
                "function_url"
            ]
        },
        "nuage:aws:ServerlessDatabase": {
            "isComponent": true,
            "inputProperties": {
                "resourceName": {
                    "type": "string",
                    "description":"Resource name."
                },
                "databaseType": {
                    "type": "string",
                    "description":"Database type. `mysql` or `postgresql`"
                },
                "vpcId": {
                    "type": "string",
                    "description":"Vpc id."
                },
                "vpcSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description":"List of subnet ip addresses."
                },
                "databaseName": {
                    "type": "string",
                    "description":"Name of the database."
                },
                "masterUserName": {
                    "type": "string",
                    "description":"Master user name of the db."
                },
                "ipWhitelist": {
                    "description":"List of whitelisted IP addresses. If not specified, it will be public 0.0.0.0/0",  
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "skipFinalSnapshot": {
                    "type": "boolean",
                    "description":"Determines whether a final DB snapshot is created before the DB instance is deleted. Defaults to `false`"
                },
                "dataApi": {
                    "type": "boolean",
                    "description":"Enable data api. Defaults to `false`"
                }
            },
            "requiredInputs": [
                "resourceName",
                "vpcId",
                "vpcSubnets",
                "databaseType"
            ],
            "properties": {
                "user": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "port": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "cluster_arn": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "policy_document": {
                    "type": "string"
                }
            },
            "required": [
                "user",
                "host",
                "port",
                "name",
                "cluster_arn",
                "uri"
            ]
        }    
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*",
                "Pulumi.Aws": "5.*",
                "Pulumi.Awsx":"1.0.0-beta.*",
                "Pulumi.Docker":"3.*",
                "Pulumi.Command":"4.6.0-alpha.*"
            }
        },
        "go": {
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-nuage/sdk/go/nuage"
        },
        "nodejs": {
            "dependencies": {
                "@pulumi/aws": "^5.0.0",
                "@pulumi/awsx": "^0.40.0",
                "@pulumi/docker": "^3.0.0",
                "@pulumi/command": "^0.7.0"
            },
            "devDependencies": {
                "@types/node": "^17.0.21",
                "typescript": "^3.7.0"
            }
        },
        "python": {
            "requires": {
                "pulumi": ">=3.0.0,<4.0.0",
                "pulumi-aws": ">=5.0.0,<6.0.0",
                "pulumi-awsx": ">=1.0.0b11",
                "pulumi_docker": ">=3.0.0,<4.0.0",
                "pulumi-random": ">4.8.0",
                "pulumi-command": ">0.7.0"
            }
        }
    }
}